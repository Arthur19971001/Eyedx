{"ast":null,"code":"export const passwordValid = password => {\n  const passowrdRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{10,}$/;\n  var result;\n\n  if (password !== \"\") {\n    if (!password.match(passowrdRegex)) {\n      result = \"invalid\";\n      return result;\n    } else {\n      result = \"valid\";\n      return result;\n    }\n  } else {\n    result = \"empty\";\n    return result;\n  }\n};\nexport const IDValid = id => {\n  const idRegex = /^.*[A-Z]{3}[0-9]{3}$/;\n  var result;\n\n  if (id !== \"\") {\n    if (!id.match(idRegex)) {\n      result = \"invalid\";\n      return result;\n    } else {\n      result = \"valid\";\n      return result;\n    }\n  } else {\n    result = \"empty\";\n    return result;\n  }\n};\n_c = IDValid;\n\nvar _c;\n\n$RefreshReg$(_c, \"IDValid\");","map":{"version":3,"sources":["/Users/kimseongjae/source/eyeDX/src/common/vaildate.js"],"names":["passwordValid","password","passowrdRegex","result","match","IDValid","id","idRegex"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,QAAD,IAAc;AACvC,QAAMC,aAAa,GAAG,qDAAtB;AACA,MAAIC,MAAJ;;AAEA,MAAGF,QAAQ,KAAK,EAAhB,EAAmB;AACf,QAAG,CAACA,QAAQ,CAACG,KAAT,CAAeF,aAAf,CAAJ,EAAmC;AAC/BC,MAAAA,MAAM,GAAG,SAAT;AACA,aAAOA,MAAP;AACH,KAHD,MAGO;AACHA,MAAAA,MAAM,GAAG,OAAT;AACA,aAAOA,MAAP;AACH;AACJ,GARD,MAQO;AACHA,IAAAA,MAAM,GAAG,OAAT;AACA,WAAOA,MAAP;AACH;AACJ,CAhBM;AAkBP,OAAO,MAAME,OAAO,GAAIC,EAAD,IAAQ;AAC3B,QAAMC,OAAO,GAAG,sBAAhB;AACA,MAAIJ,MAAJ;;AAEA,MAAGG,EAAE,KAAK,EAAV,EAAa;AACT,QAAG,CAACA,EAAE,CAACF,KAAH,CAASG,OAAT,CAAJ,EAAuB;AACnBJ,MAAAA,MAAM,GAAG,SAAT;AACA,aAAOA,MAAP;AACH,KAHD,MAGO;AACHA,MAAAA,MAAM,GAAG,OAAT;AACA,aAAOA,MAAP;AACH;AACJ,GARD,MAQO;AACHA,IAAAA,MAAM,GAAG,OAAT;AACA,WAAOA,MAAP;AACH;AACJ,CAhBM;KAAME,O","sourcesContent":["export const passwordValid = (password) => {\n    const passowrdRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{10,}$/;\n    var result;\n\n    if(password !== \"\"){\n        if(!password.match(passowrdRegex)) {\n            result = \"invalid\";\n            return result;\n        } else {\n            result = \"valid\";\n            return result;\n        }\n    } else {\n        result = \"empty\";\n        return result;\n    }\n}\n\nexport const IDValid = (id) => {\n    const idRegex = /^.*[A-Z]{3}[0-9]{3}$/;\n    var result;\n\n    if(id !== \"\"){\n        if(!id.match(idRegex)) {\n            result = \"invalid\";\n            return result;\n        } else {\n            result = \"valid\";\n            return result;\n        }\n    } else {\n        result = \"empty\";\n        return result;\n    }\n}"]},"metadata":{},"sourceType":"module"}