{"ast":null,"code":"import axios from 'axios';\nimport React from 'react';\nimport { ACTION_TYPES } from '../actionType';\nimport { interpreationUrl, info, send, baseUrl } from '../api';\nimport { withCookies, Cookies } from \"react-cookie\";\nexport const GetInterpretationData = (userId, param, auth) => dispatch => {\n  dispatch({\n    type: ACTION_TYPES.DATA_LOADING,\n    payload: true\n  });\n  dispatch({\n    type: ACTION_TYPES.HEADER_COLOR,\n    payload: [false, true]\n  });\n  axios.get(interpreationUrl + userId + info, {\n    params: param,\n    headers: {\n      'Authorization': auth\n    }\n  }).then(res => {\n    dispatch({\n      type: ACTION_TYPES.FETCH_INTERPRETATION_DATA,\n      payload: res.data\n    });\n  }).catch(e => {\n    console.log(e);\n  }).then(r => dispatch({\n    type: ACTION_TYPES.DATA_LOADING,\n    payload: false\n  }));\n};\nexport const SendInterpretationData = (userId, body, auth, onSuccessful) => dispatch => {\n  var filterValue = JSON.parse(localStorage.getItem(\"filter-value\"));\n  dispatch({\n    type: ACTION_TYPES.DATA_LOADING,\n    payload: true\n  });\n  axios.post(interpreationUrl + userId + send, body, {\n    params: filterValue,\n    headers: {\n      'Authorization': auth\n    }\n  }).then(res => {\n    dispatch({\n      type: ACTION_TYPES.SEND_INTERPRETATION_DATA,\n      payload: res.data\n    });\n    onSuccessful(res.data.ID);\n  }).catch(e => {\n    console.log(e);\n  }).then(r => dispatch({\n    type: ACTION_TYPES.DATA_LOADING,\n    payload: false\n  }));\n};\nexport const SendImageQulityData = (userId, params, auth, nextRequest) => dispatch => {\n  dispatch({\n    type: ACTION_TYPES.DATA_LOADING,\n    payload: true\n  });\n  axios.get(interpreationUrl + userId + \"/vote\", {\n    params: params,\n    headers: {\n      'Authorization': auth\n    }\n  }).then(res => {\n    dispatch({\n      type: ACTION_TYPES.SEND_INTERPRETATION_DATA,\n      payload: res.data\n    });\n    nextRequest(res.data.result);\n  }).catch(e => {\n    console.log(e);\n  }).then(r => dispatch({\n    type: ACTION_TYPES.DATA_LOADING,\n    payload: false\n  }));\n};","map":{"version":3,"sources":["/Users/kimseongjae/source/eyeDX/src/actions/interpretation/interpretation_data.js"],"names":["axios","React","ACTION_TYPES","interpreationUrl","info","send","baseUrl","withCookies","Cookies","GetInterpretationData","userId","param","auth","dispatch","type","DATA_LOADING","payload","HEADER_COLOR","get","params","headers","then","res","FETCH_INTERPRETATION_DATA","data","catch","e","console","log","r","SendInterpretationData","body","onSuccessful","filterValue","JSON","parse","localStorage","getItem","post","SEND_INTERPRETATION_DATA","ID","SendImageQulityData","nextRequest","result"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React from 'react'\nimport { ACTION_TYPES } from '../actionType'\nimport { interpreationUrl,info,send,baseUrl } from '../api'\nimport { withCookies, Cookies } from \"react-cookie\";\n\nexport const GetInterpretationData = (userId,param,auth) => dispatch => {\n    dispatch({\n        type: ACTION_TYPES.DATA_LOADING,\n        payload: true\n    })\n    dispatch({\n        type: ACTION_TYPES.HEADER_COLOR,\n        payload: [false,true]\n    })\n\n    axios.get(interpreationUrl+userId+info,{params: param,headers: {'Authorization': auth,}}).then(\n        res => {\n            dispatch({\n                type: ACTION_TYPES.FETCH_INTERPRETATION_DATA,\n                payload: res.data,\n            })\n        }\n    ).catch((e) => {\n        console.log(e);\n    }).then(r => (\n        dispatch({\n            type: ACTION_TYPES.DATA_LOADING,\n            payload: false\n        })\n    ));\n}\n\nexport const SendInterpretationData = (userId,body,auth,onSuccessful) => dispatch => {\n    var filterValue = JSON.parse(localStorage.getItem(\"filter-value\"));\n    dispatch({\n        type: ACTION_TYPES.DATA_LOADING,\n        payload: true\n    })\n\n    axios.post(interpreationUrl+userId+send,body,{params: filterValue,headers: {'Authorization': auth,}}).then(\n        res => {\n            dispatch({\n                type: ACTION_TYPES.SEND_INTERPRETATION_DATA,\n                payload: res.data,\n            })\n            onSuccessful(res.data.ID);\n        }\n    ).catch((e) => {\n        console.log(e);\n    }).then(r => (\n        dispatch({\n            type: ACTION_TYPES.DATA_LOADING,\n            payload: false\n        })\n    ))\n}\n\nexport const SendImageQulityData = (userId,params,auth,nextRequest) => dispatch => {\n    dispatch({\n        type: ACTION_TYPES.DATA_LOADING,\n        payload: true\n    })\n\n    axios.get(interpreationUrl+userId+\"/vote\",{params: params,headers: {'Authorization': auth,}}).then(\n        res => {\n            dispatch({\n                type: ACTION_TYPES.SEND_INTERPRETATION_DATA,\n                payload: res.data,\n            })\n\n            nextRequest(res.data.result);\n        }\n    ).catch((e) => {\n        console.log(e);\n    }).then(r => (\n        dispatch({\n            type: ACTION_TYPES.DATA_LOADING,\n            payload: false\n        })\n    ))\n}\n"]},"metadata":{},"sourceType":"module"}