{"ast":null,"code":"var _jsxFileName = \"/Users/kimseongjae/source/eyeDX/src/components/image_zoom/image_zoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useLayoutEffect } from 'react';\nimport \"./image_zoom.css\";\nimport { CustomNormalInputSlider } from '../parts/input_range/input_range';\nimport { useDimensions } from \"../../common/sizeTgarget\";\nimport { Icon } from '@iconify/react';\nimport zoomIn from '@iconify-icons/akar-icons/zoom-in';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MousePosition = {\n  position_x: 0,\n  position_y: 0\n};\nconst OriginModel = {\n  origin_x: 0,\n  origin_y: 0\n};\nconst DragModel = {\n  start_x: 0,\n  start_y: 0\n};\nconst DistanceModel = {\n  distance_x: 0,\n  distance_y: 0\n};\nconst currentImgPostionModel = {\n  current_x: 0,\n  current_y: 0\n};\nconst ImageSizedModel = {\n  width: 0,\n  height: 0\n};\n\nconst ImageZoom = props => {\n  _s();\n\n  const targetRef = useRef();\n  const size = useDimensions(targetRef); /// 처음 이미지 사이즈\n\n  const [changeImg, setChangeImg] = useState(ImageSizedModel); /// 바뀌는 이미지 사이즈\n\n  const [position, setPosition] = useState(MousePosition); /// 마우스 커서 위치\n\n  const [origin, setOrigin] = useState(OriginModel); /// 이미지 줌인 아웃 할때에 기준값\n\n  const [scale, setScale] = useState(1); /// 이미지 줌인 아웃 크기 \n\n  const [isDrag, setIsDrag] = useState(false); /// 클릭하고 있는지 아는지 여부 판단\n\n  const [dragStart, setDragStart] = useState(DragModel); ///처음 드레그 시작 위치\n\n  const [distance, setDistance] = useState(DistanceModel); ///드레그 하기시작하면서 변화되는 값\n\n  const [current, setCurrent] = useState(currentImgPostionModel); ///현제 이미지 위치\n\n  const [sliderOpacity, setSliderOpacity] = useState(0); /// 슬라이더 투명도\n\n  const [changedSize, setChangedSize] = useState(size);\n  const [isImgLoad, setIsImgLoad] = useState(true);\n  const [currentSrc, setCurrentSrc] = useState(\"\");\n  const [didMount, setDidMount] = useState(false);\n  const src = props.src;\n  const id = props.id;\n  const img = new Image();\n  useLayoutEffect(() => {\n    setCurrentSrc(\"\");\n  }, [id]);\n  useEffect(() => {\n    setDidMount(false);\n    img.src = src;\n    img.ref = targetRef;\n\n    if (!didMount) {\n      if (src === \"none\") {\n        setCurrentSrc(src);\n        setIsImgLoad(false);\n      } else {\n        img.onload = () => {\n          handleOnLoad(img.src, img.ref);\n        };\n      }\n    }\n\n    return () => setDidMount(true);\n  }, [id, src]);\n\n  const handleOnLoad = (src, ref) => {\n    setCurrentSrc(src);\n    setIsImgLoad(false);\n    const target = ref;\n\n    if (target.current !== undefined) {\n      const sizeModel = {\n        width: target.current.offsetWidth,\n        height: target.current.offsetHeight\n      };\n      setChangedSize(sizeModel);\n    }\n  };\n\n  const handleWheelZoom = e => {\n    // e.preventDefault();\n    setSliderOpacity(1.0); ///마우스 휠 올릴때 => 줌인\n\n    if (e.deltaY < 0) {\n      if (changeImg.width * 1.08 >= 4032) {\n        setScale(scale);\n        setChangeImg({\n          width: 4032,\n          height: 3020\n        });\n      } else {\n        setScale(scale * 1.08);\n        setChangeImg({\n          width: scale === 1 ? changedSize.width : changeImg.width * 1.08,\n          height: scale === 1 ? changedSize.height : changeImg.height * 1.08\n        });\n      }\n    } ///마우스 휠 내릴때\n\n\n    if (e.deltaY > 0) {\n      /// 1.0 배 이하로 작아지지 않도록 고정\n      if (changeImg.width / 1.08 < changedSize.width) {\n        setScale(1); /// 최소 스케일로 돌아왔을때 제자리로 복구\n\n        setDistance({\n          distance_x: 0,\n          distance_y: 0\n        });\n        setCurrent({\n          current_x: 0,\n          current_y: 0\n        });\n        setChangeImg({\n          width: 0,\n          height: 0\n        });\n      } else {\n        setScale(scale / 1.08);\n        setChangeImg({\n          width: changeImg.width / 1.08,\n          height: changeImg.height / 1.08\n        });\n      }\n    }\n\n    setOrigin({\n      origin_x: position.position_x,\n      origin_y: position.position_y\n    });\n    setTimeout(() => {\n      setSliderOpacity(0);\n    }, 3000);\n  };\n\n  const handleMouseMove = e => {\n    e.preventDefault(); ///마우스 클릭한 상태가 아닐때\n\n    if (e.clientX > (window.innerWidth - 350) / 2) {\n      setPosition({\n        position_x: e.clientX - (window.innerWidth - 350) / 2,\n        position_y: e.clientY - 60\n      });\n    } else {\n      setPosition({\n        position_x: e.clientX,\n        position_y: e.clientY - 60\n      });\n    } ///마우스를 클릭하고 있는 상태일때 => 드레그 가능\n\n\n    if (isDrag) {\n      if (e.clientX > (window.innerWidth - 350) / 2) {\n        setDistance({\n          distance_x: current.current_x + (e.clientX - (window.innerWidth - 350) / 2 - dragStart.start_x),\n          distance_y: current.current_y + (e.clientY - 60 - dragStart.start_y)\n        });\n      } else {\n        setDistance({\n          distance_x: current.current_x + (e.clientX - dragStart.start_x),\n          distance_y: current.current_y + (e.clientY - 60 - dragStart.start_y)\n        });\n      }\n    }\n  }; ///드레그 시작\n\n\n  const handleDragStart = e => {\n    e.preventDefault();\n\n    if (scale === 1) {\n      setIsDrag(false); /// 처음 상태에선 드레그 불가능을 하기 위해 isDrag == false\n    } else {\n      setIsDrag(true);\n\n      if (e.clientX > (window.innerWidth - 350) / 2) {\n        setDragStart({\n          start_x: e.clientX - (window.innerWidth - 350) / 2,\n          start_y: e.clientY - 60\n        });\n      } else {\n        setDragStart({\n          start_x: e.clientX,\n          start_y: e.clientY - 60\n        });\n      }\n    }\n  }; ///드레그를 완료했을때\n\n\n  const handleDragEnd = e => {\n    e.preventDefault();\n    setIsDrag(false);\n    setCurrent({\n      current_x: distance.distance_x,\n      current_y: distance.distance_y\n    });\n  }; ///드레그하다가 이미지를 벗어날을 경우 드레그 불가능상태로 바꾸기\n\n\n  const handleMouseLeave = e => {\n    e.preventDefault();\n    setIsDrag(false);\n  }; ///더블클릭 후 원래상태로 돌아오기\n\n\n  const hanldeDoubleClick = e => {\n    setSliderOpacity(1.0);\n    setScale(1.0);\n    setDistance({\n      distance_x: 0,\n      distance_y: 0\n    });\n    setCurrent({\n      current_x: 0,\n      current_y: 0\n    });\n    setPosition({\n      position_x: 0,\n      position_y: 0\n    });\n    setChangeImg({\n      width: 0,\n      height: 0\n    });\n    setTimeout(() => {\n      setSliderOpacity(0);\n    }, 3000);\n  };\n\n  const handleRightClick = e => {\n    if (e.type === 'contextmenu') {\n      e.preventDefault();\n    }\n  };\n\n  const darkSlider = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dark_slider_div\",\n    style: {\n      opacity: `${sliderOpacity}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      icon: zoomIn,\n      className: \"dark_slider_icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomNormalInputSlider, {\n      min: 0,\n      max: 4032 - changedSize.width,\n      onChange: handleWheelZoom,\n      value: changeImg.width === 0 ? changeImg.width : changeImg.width - changedSize.width,\n      trackStyle: [{\n        backgroundColor: \"white\",\n        height: 4\n      }],\n      railStyle: {\n        backgroundColor: \"#404040\"\n      },\n      handleStyle: [{\n        border: \"white solid 2px\",\n        backgroundColor: \"black\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n\n  const imgZoom = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isImgLoad ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 22\n    }, this) : currentSrc === \"\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 65\n    }, this) : currentSrc === \"none\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"no data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 112\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image_zoom_div\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img_src\",\n        alt: \"\",\n        ref: targetRef,\n        onContextMenu: e => handleRightClick(e),\n        onWheel: e => handleWheelZoom(e),\n        onMouseMove: e => handleMouseMove(e),\n        onMouseDown: handleDragStart,\n        onMouseUp: e => handleDragEnd(e),\n        onMouseLeave: handleMouseLeave,\n        onDoubleClick: hanldeDoubleClick,\n        style: {\n          transform: `scale(${scale}) translate(${distance.distance_x + 'px'}, ${distance.distance_y + 'px'})`,\n          transformOrigin: `${origin.origin_x + 'px'} ${origin.origin_y + 'px'}`\n        },\n        src: currentSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 134\n    }, this)\n  }, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image_zoom_wrap\",\n    children: [imgZoom, darkSlider]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageZoom, \"XlnIlXDb2fGjopq+6ob8x2NyPZ4=\", false, function () {\n  return [useDimensions];\n});\n\n_c = ImageZoom;\nexport default ImageZoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageZoom\");","map":{"version":3,"sources":["/Users/kimseongjae/source/eyeDX/src/components/image_zoom/image_zoom.js"],"names":["React","useState","useRef","useEffect","useLayoutEffect","CustomNormalInputSlider","useDimensions","Icon","zoomIn","MousePosition","position_x","position_y","OriginModel","origin_x","origin_y","DragModel","start_x","start_y","DistanceModel","distance_x","distance_y","currentImgPostionModel","current_x","current_y","ImageSizedModel","width","height","ImageZoom","props","targetRef","size","changeImg","setChangeImg","position","setPosition","origin","setOrigin","scale","setScale","isDrag","setIsDrag","dragStart","setDragStart","distance","setDistance","current","setCurrent","sliderOpacity","setSliderOpacity","changedSize","setChangedSize","isImgLoad","setIsImgLoad","currentSrc","setCurrentSrc","didMount","setDidMount","src","id","img","Image","ref","onload","handleOnLoad","target","undefined","sizeModel","offsetWidth","offsetHeight","handleWheelZoom","e","deltaY","setTimeout","handleMouseMove","preventDefault","clientX","window","innerWidth","clientY","handleDragStart","handleDragEnd","handleMouseLeave","hanldeDoubleClick","handleRightClick","type","darkSlider","opacity","backgroundColor","border","imgZoom","transform","transformOrigin"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect, useLayoutEffect} from 'react';\nimport \"./image_zoom.css\";\nimport {CustomNormalInputSlider} from '../parts/input_range/input_range'\nimport {useDimensions} from \"../../common/sizeTgarget\";\nimport { Icon } from '@iconify/react';\nimport zoomIn from '@iconify-icons/akar-icons/zoom-in';\n\nconst MousePosition = {\n    position_x : 0,\n    position_y : 0,\n}\n\nconst OriginModel = {\n    origin_x: 0,\n    origin_y:0,\n}\n\nconst DragModel = {\n    start_x: 0,\n    start_y: 0,\n}\n\nconst DistanceModel = {\n    distance_x: 0,\n    distance_y: 0,\n}\n\nconst currentImgPostionModel = {\n    current_x: 0,\n    current_y: 0,\n}\n\nconst ImageSizedModel = {\n    width: 0,\n    height: 0,\n}\n\nconst ImageZoom = (props) => {\n    const targetRef = useRef();\n    const size = useDimensions(targetRef); /// 처음 이미지 사이즈\n    const [changeImg, setChangeImg] = useState(ImageSizedModel); /// 바뀌는 이미지 사이즈\n\n    const [position, setPosition] = useState(MousePosition); /// 마우스 커서 위치\n    const [origin, setOrigin] = useState(OriginModel); /// 이미지 줌인 아웃 할때에 기준값\n    const [scale, setScale] = useState(1); /// 이미지 줌인 아웃 크기 \n\n    const [isDrag, setIsDrag] = useState(false); /// 클릭하고 있는지 아는지 여부 판단\n    const [dragStart, setDragStart] = useState(DragModel); ///처음 드레그 시작 위치\n    const [distance, setDistance] = useState(DistanceModel); ///드레그 하기시작하면서 변화되는 값\n    const [current, setCurrent] = useState(currentImgPostionModel); ///현제 이미지 위치\n\n    const [sliderOpacity, setSliderOpacity] = useState(0); /// 슬라이더 투명도\n    const [changedSize, setChangedSize] = useState(size);\n    const [isImgLoad, setIsImgLoad] = useState(true);\n    const [currentSrc, setCurrentSrc] = useState(\"\");\n    const [didMount, setDidMount] = useState(false);\n    const src = props.src;\n    const id = props.id;\n    const img = new Image();\n\n    useLayoutEffect(() => {\n        setCurrentSrc(\"\");\n    },[id])\n\n    useEffect(() => {\n        setDidMount(false);\n        img.src = src;\n        img.ref = targetRef;\n        if(!didMount){\n            if(src === \"none\"){\n                setCurrentSrc(src);\n                setIsImgLoad(false);\n            } else {\n                img.onload = () => {\n                    handleOnLoad(img.src,img.ref);\n                };\n            }\n        }\n        return () => setDidMount(true);\n    },[id,src])\n\n    const handleOnLoad = (src,ref) => {\n        setCurrentSrc(src);\n        setIsImgLoad(false);\n        const target = ref;\n        if(target.current !== undefined){\n            const sizeModel = {\n                width: target.current.offsetWidth,\n                height:target.current.offsetHeight,\n            }\n            setChangedSize(sizeModel);\n        }\n    }\n\n    const handleWheelZoom = e => {\n        // e.preventDefault();\n        setSliderOpacity(1.0); \n        ///마우스 휠 올릴때 => 줌인\n        if(e.deltaY < 0) {\n            if(changeImg.width*1.08 >= 4032){\n                setScale(scale);\n                setChangeImg({\n                    width: 4032,\n                    height: 3020,\n                });\n            } else {\n                setScale(scale*1.08);\n                setChangeImg({\n                    width: scale === 1 ? changedSize.width : changeImg.width*1.08,\n                    height: scale === 1 ? changedSize.height : changeImg.height*1.08,\n                });\n            }\n        }\n        ///마우스 휠 내릴때\n        if(e.deltaY > 0){\n            /// 1.0 배 이하로 작아지지 않도록 고정\n            if(changeImg.width/1.08 < changedSize.width) {\n                setScale(1);\n                /// 최소 스케일로 돌아왔을때 제자리로 복구\n                setDistance({\n                    distance_x: 0,\n                    distance_y: 0, \n                });\n                setCurrent({\n                    current_x:0,\n                    current_y:0\n                });\n                setChangeImg({\n                    width: 0,\n                    height: 0,\n                })\n            } else {\n                setScale(scale/1.08);\n                setChangeImg({\n                    width: changeImg.width/1.08,\n                    height: changeImg.height/1.08,\n                })\n            }\n        }\n        setOrigin({\n            origin_x: position.position_x,\n            origin_y: position.position_y,\n        });\n        setTimeout(()=>{\n            setSliderOpacity(0)\n        },3000);\n    }\n\n    const handleMouseMove = e => {\n        e.preventDefault();\n        ///마우스 클릭한 상태가 아닐때\n        if(e.clientX > (window.innerWidth - 350)/2) {\n            setPosition({\n                position_x:e.clientX - (window.innerWidth-350)/2,\n                position_y:e.clientY - 60,\n            });\n        } else {\n            setPosition({\n                position_x:e.clientX,\n                position_y:e.clientY - 60,\n            });\n        }\n        ///마우스를 클릭하고 있는 상태일때 => 드레그 가능\n        if(isDrag){\n            if(e.clientX > (window.innerWidth - 350)/2) {\n                setDistance({\n                    distance_x:current.current_x + ((e.clientX - (window.innerWidth-350)/2)-dragStart.start_x),\n                    distance_y:current.current_y + ((e.clientY - 60) - dragStart.start_y),\n                });\n            } else {\n                setDistance({\n                    distance_x:current.current_x + (e.clientX-dragStart.start_x),\n                    distance_y:current.current_y + ((e.clientY-60) - dragStart.start_y),\n                });\n            }\n        }\n    }\n\n    ///드레그 시작\n    const handleDragStart = (e) => {\n        e.preventDefault();\n        if(scale === 1){\n            setIsDrag(false); /// 처음 상태에선 드레그 불가능을 하기 위해 isDrag == false\n        } else {\n            setIsDrag(true);\n            if(e.clientX > (window.innerWidth - 350)/2) {\n                setDragStart({\n                    start_x: e.clientX - (window.innerWidth-350)/2,\n                    start_y: e.clientY - 60,\n                });\n            } else {\n                setDragStart({\n                    start_x: e.clientX,\n                    start_y: e.clientY - 60,\n                });\n            }\n        }\n    };\n    \n    ///드레그를 완료했을때\n    const handleDragEnd = (e) => {\n        e.preventDefault();\n        setIsDrag(false);\n        setCurrent({\n            current_x: distance.distance_x,\n            current_y: distance.distance_y,\n        });\n    };\n\n    ///드레그하다가 이미지를 벗어날을 경우 드레그 불가능상태로 바꾸기\n    const handleMouseLeave = (e) => {\n        e.preventDefault();\n        setIsDrag(false);\n    }\n\n    ///더블클릭 후 원래상태로 돌아오기\n    const hanldeDoubleClick = (e) => {\n        setSliderOpacity(1.0);\n        setScale(1.0);\n        setDistance({\n            distance_x: 0,\n            distance_y: 0,\n        });\n        setCurrent({\n            current_x: 0,\n            current_y: 0,\n        });\n        setPosition({\n            position_x: 0,\n            position_y: 0,\n        });\n        setChangeImg({\n            width: 0,\n            height: 0,\n        })\n        setTimeout(()=>{\n            setSliderOpacity(0)\n        },3000);\n    }\n\n    const handleRightClick = (e) =>{\n        if(e.type === 'contextmenu'){\n            e.preventDefault();\n        }\n    }\n\n    const darkSlider = (\n        <div className = 'dark_slider_div' style = {{opacity: `${sliderOpacity}`}}>\n            <Icon icon={zoomIn} className='dark_slider_icon'></Icon>\n            <CustomNormalInputSlider\n            min = {0}\n            max = {4032-changedSize.width} \n            onChange={handleWheelZoom}\n            value = {changeImg.width === 0 ? changeImg.width : changeImg.width-changedSize.width} \n            trackStyle = {[{backgroundColor: \"white\", height: 4}]}\n            railStyle = {{backgroundColor: \"#404040\"}}\n            handleStyle\t= {[{border: \"white solid 2px\", backgroundColor:\"black\"}]}\n        />\n        </div>\n    )\n\n    const imgZoom = (\n        <>\n        {isImgLoad ? <span>loading</span> : currentSrc === \"\" ? <span>loading</span> : currentSrc === \"none\" ? <span>no data</span>: <div className = \"image_zoom_div\"> \n            <img className = 'img_src' \n            alt=''\n            ref = {targetRef}\n            onContextMenu = {(e)=>handleRightClick(e)}\n            onWheel = {(e)=>handleWheelZoom(e)} \n            onMouseMove = {(e)=>handleMouseMove(e)}\n            onMouseDown = {handleDragStart}\n            onMouseUp = {(e)=>handleDragEnd(e)}\n            onMouseLeave = {handleMouseLeave}\n            onDoubleClick = {hanldeDoubleClick} \n            style = {{\n                transform: `scale(${scale}) translate(${distance.distance_x+'px'}, ${distance.distance_y+'px'})`,\n                transformOrigin: `${origin.origin_x+'px'} ${origin.origin_y+'px'}`}}\n            src = {currentSrc}\n            /></div>}\n        </>\n    )\n\n    return(\n        <div className = \"image_zoom_wrap\">\n            {imgZoom}\n            {darkSlider}\n        </div>\n    )\n}\n\nexport default ImageZoom;"]},"metadata":{},"sourceType":"module"}