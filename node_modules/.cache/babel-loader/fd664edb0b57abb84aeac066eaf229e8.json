{"ast":null,"code":"var _jsxFileName = \"/Users/kimseongjae/source/eyeDX/src/components/parts/selector/selector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from '../modal/modal';\nimport \"./selector.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Selector = props => {\n  _s();\n\n  // const [modalOpacity, setModalOpacity] = useState(false);\n  const [isShowModal, setIsShowModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selector_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"selector_title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"selector_btn\",\n        onClick: () => {\n          if (isShowModal) {\n            // setModalOpacity(0);\n            setIsShowModal(false);\n          } else {\n            // setModalOpacity(1);\n            setIsShowModal(true);\n          }\n        },\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visibility: isShowModal ? \"visible\" : \"hidden\",\n        list: props.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Selector, \"FvBjZ1ppitiLSqns15eGbxfEMfc=\");\n\n_c = Selector;\nexport default Selector;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"sources":["/Users/kimseongjae/source/eyeDX/src/components/parts/selector/selector.js"],"names":["React","useState","Modal","Selector","props","isShowModal","setIsShowModal","title","name","list"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,kBAAjB;AAAA,4BACI;AAAM,MAAA,SAAS,EAAG,gBAAlB;AAAA,gBAAoCG,KAAK,CAACG;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAG,cAApB;AAAmC,QAAA,OAAO,EAAI,MAAI;AAC9C,cAAGF,WAAH,EAAe;AACX;AACAC,YAAAA,cAAc,CAAC,KAAD,CAAd;AACH,WAHD,MAGO;AACH;AACAA,YAAAA,cAAc,CAAC,IAAD,CAAd;AACH;AACJ,SARD;AAAA,kBASCF,KAAK,CAACI;AATP;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,KAAD;AAAO,QAAA,UAAU,EAAIH,WAAW,GAAG,SAAH,GAAe,QAA/C;AAAyD,QAAA,IAAI,EAAID,KAAK,CAACK;AAAvE;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAvBD;;GAAMN,Q;;KAAAA,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport Modal from '../modal/modal'\nimport \"./selector.css\"\n\nconst Selector = (props) => {\n    // const [modalOpacity, setModalOpacity] = useState(false);\n    const [isShowModal, setIsShowModal] = useState(false);\n\n    return (\n        <div className = \"selector_wrapper\">\n            <span className = \"selector_title\">{props.title}</span>\n            <div className = \"selector_body\">\n                <button className = \"selector_btn\" onClick = {()=>{\n                    if(isShowModal){\n                        // setModalOpacity(0);\n                        setIsShowModal(false);\n                    } else {\n                        // setModalOpacity(1);\n                        setIsShowModal(true);\n                    }\n                }}>\n                {props.name}\n                </button>\n                <Modal visibility = {isShowModal ? \"visible\" : \"hidden\"} list = {props.list}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Selector;\n"]},"metadata":{},"sourceType":"module"}