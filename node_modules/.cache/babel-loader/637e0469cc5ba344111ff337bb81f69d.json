{"ast":null,"code":"var _jsxFileName = \"/Users/kimseongjae/source/eyeDX/src/pages/home/interpretation/interpretation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport \"./interpretation.css\";\nimport ImageZoom from '../../../components/image_zoom/image_zoom';\nimport * as actions from '../../../actions/interpretation/interpretation_data';\nimport { connect } from 'react-redux';\nimport { DarkCheckBox } from '../../../components/parts/check_box/check_box';\nimport { NormalDarkButton, CustomDarkButton, ToggleButton } from '../../../components/parts/button/button';\nimport { InitDataModel } from \"./initModel\";\nimport { Loader } from \"../../../components/loader/loader\";\nimport { baseUrl } from '../../../actions/api';\nimport Lock from \"../../../components/parts/lock/lock\";\nimport { useHistory, useParams } from 'react-router';\nimport { useCookies } from 'react-cookie';\nimport queryString from 'query-string';\nimport Modal from '../../../components/parts/modal/modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst isClickTypeModel = {\n  isPhotoClicked: true,\n  isReportClicked: false\n};\nconst isProgramModel = {\n  isEye: true,\n  isDiabetic: false\n};\nconst statusModel = {\n  msg: \"Send & Report\",\n  isHold: false\n};\n\nconst Interpretation = props => {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(true);\n  const [isTypeClick, setIsTypClick] = useState(isClickTypeModel);\n  const [isProgram, setIsProgram] = useState(isProgramModel);\n  const [initData, setInitData] = useState(InitDataModel);\n  const [comment, setCommnet] = useState(\"\");\n  const stirngToObj = JSON.parse(localStorage.getItem(\"filter-value\"));\n  const year = localStorage.getItem(\"filter-value\") !== null ? stirngToObj.lang === \"kr\" ? \"년\" : \"year\" : localStorage.getItem(\"lang\") === \"kr\" ? \"년\" : \"year\";\n  const [status, setStatus] = useState(statusModel);\n  const [eyeOD, setEyeOD] = useState(InitDataModel.items[0].parts.od);\n  const [eyeOS, setEyeOS] = useState(InitDataModel.items[0].parts.os);\n  const [diabeticOD, setDiabeticOD] = useState(InitDataModel.items[1].parts.od);\n  const [diabeticOS, setDiabeticOS] = useState(InitDataModel.items[1].parts.os);\n  const [cookies] = useCookies(['token']);\n  const history = useHistory();\n  const userId = useParams();\n  const queryObj = JSON.parse(localStorage.getItem(\"filter-value\"));\n\n  const errorStatus = () => {\n    /// 데이터가 없는데 interpretation page 로 접속할 경우 생기는 에러메세지 산출\n    if (localStorage.getItem(\"lang\") === \"kr\") {\n      localStorage.setItem(\"error_data\", \"환자의 데이터가 존재하지 않습니다.\");\n      localStorage.setItem(\"error_value\", \"true\");\n    } else {\n      localStorage.setItem(\"error_data\", \"Patient data does not exist.\");\n      localStorage.setItem(\"error_value\", \"true\");\n    }\n\n    history.goBack();\n  };\n\n  useLayoutEffect(() => {\n    setInitData(InitDataModel);\n\n    try {\n      if (userId.userId === \":userId\") {\n        /// 주소창에 /interpretation 이라고 치고 들어올경우\n        errorStatus();\n      } else {\n        /// waiting page 에서 interpretation button 을 눌고 들어올경우\n        if (localStorage.getItem(\"first_code\") === \"\") {\n          /// waiting list 에 데이터가 없음\n          errorStatus();\n        } else {\n          /// 성공적으로 데이터 불러오기\n          props.getInterpretationData(userId.userId, queryObj, cookies.token.access_token);\n        }\n      }\n    } catch (error) {\n      errorStatus();\n    }\n  }, [userId.userId]);\n  useEffect(() => {\n    try {\n      if (props.interpretationData !== undefined && Object.keys(props.interpretationData).length !== 0) {\n        setInitData(props.interpretationData);\n\n        if (props.interpretationData.status === \"Hold\") {\n          setStatus({ ...status,\n            msg: \"Hold\",\n            isHold: true\n          });\n        } else {\n          setStatus({ ...status,\n            msg: \"Send & Report\",\n            isHold: false\n          });\n        }\n\n        if (props.interpretationData.items.length === 1) {\n          if (props.interpretationData.items[0].code !== \"edp\") {\n            setIsProgram({\n              \"isEye\": false,\n              \"isDiabetic\": true\n            });\n            setEyeOD(props.interpretationData.items[0].parts.od);\n            setEyeOS(props.interpretationData.items[0].parts.os);\n          } else {\n            setDiabeticOD(props.interpretationData.items[0].parts.od);\n            setDiabeticOS(props.interpretationData.items[0].parts.os);\n          }\n        } else {\n          setEyeOD(props.interpretationData.items[0].parts.od);\n          setEyeOS(props.interpretationData.items[0].parts.os);\n          setDiabeticOD(props.interpretationData.items[1].parts.od);\n          setDiabeticOS(props.interpretationData.items[1].parts.os);\n        }\n\n        if (props.interpretationData.shot.od === \"\") {\n          setIsSelected(false);\n        } else if (props.interpretationData.shot.os === \"\") {\n          setIsSelected(true);\n        }\n\n        setCommnet(props.interpretationData.comment);\n      }\n    } catch (e) {\n      errorStatus();\n    }\n  }, [props.interpretationData._id]);\n\n  const handleHoldImg = () => {\n    status.isHold ? setStatus(statusModel) : setStatus({ ...status,\n      msg: \"Hold\",\n      isHold: true\n    });\n  };\n\n  const handleComment = e => {\n    setCommnet(e.target.value);\n  };\n\n  const handleImgChange = value => {\n    if (initData.items.length === 2 && isProgram.isDiabetic) {\n      setIsProgram({ ...isProgram,\n        \"isEye\": true,\n        \"isDiabetic\": false\n      });\n    } else {\n      if (initData.items.length === 1) {\n        if (initData.items[0].code === \"edp\") {\n          setIsProgram({ ...isProgram,\n            \"isEye\": true,\n            \"isDiabetic\": false\n          });\n        } else {\n          setIsProgram({ ...isProgram,\n            \"isEye\": false,\n            \"isDiabetic\": true\n          });\n        }\n      }\n    }\n\n    switch (value) {\n      case \"od\":\n        if (initData.shot.od !== \"\" && initData.shot.os !== \"\") {\n          setIsSelected(true);\n        }\n\n        break;\n\n      case \"os\":\n        if (initData.shot.od !== \"\" && initData.shot.os !== \"\") {\n          setIsSelected(false);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleTypeButtonChange = value => {\n    switch (value) {\n      case \"photo\":\n        setIsTypClick({ ...isTypeClick,\n          \"isPhotoClicked\": true,\n          \"isReportClicked\": false\n        });\n        break;\n\n      case \"report\":\n        setIsTypClick({ ...isTypeClick,\n          \"isPhotoClicked\": false,\n          \"isReportClicked\": true\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleToggleButton = () => {\n    if (initData.items.length === 2 && isProgram.isDiabetic) {\n      setIsProgram({ ...isProgram,\n        \"isEye\": true,\n        \"isDiabetic\": false\n      });\n    } else {\n      if (initData.items.length === 1) {\n        if (initData.items[0].code === \"edp\") {\n          setIsProgram({ ...isProgram,\n            \"isEye\": true,\n            \"isDiabetic\": false\n          });\n        } else {\n          setIsProgram({ ...isProgram,\n            \"isEye\": false,\n            \"isDiabetic\": true\n          });\n        }\n      }\n    }\n\n    if (initData.shot.od !== \"\" && initData.shot.os !== \"\") {\n      if (isSelected) {\n        setIsSelected(false);\n      } else {\n        setIsSelected(true);\n      }\n    }\n  };\n\n  const handleProgramButton = value => {\n    switch (value) {\n      case \"edp\":\n        setIsProgram({ ...isProgram,\n          \"isEye\": true,\n          \"isDiabetic\": false\n        });\n        break;\n\n      case \"dr\":\n        setIsProgram({ ...isProgram,\n          \"isEye\": false,\n          \"isDiabetic\": true\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleChangeChecked = (i, j, code) => {\n    let tempList;\n\n    if (isProgram.isEye) {\n      if (isSelected) {\n        tempList = eyeOD[i].checked;\n\n        switch (code) {\n          case \"retinal_abnormality\":\n            if (eyeOD[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setEyeOD(eyeOD.map(value => value.code === code ? { ...value,\n                \"checked\": tempList\n              } : { ...value\n              }));\n            } else {\n              if (j === 7) {\n                setEyeOD(eyeOD.map(value => value.code === code ? { ...value,\n                  \"checked\": [false, false, false, false, false, false, false, true]\n                } : { ...value\n                }));\n              } else {\n                tempList.splice(7, 1, false);\n                tempList.splice(j, 1, true);\n                setEyeOD(eyeOD.map(value => value.code === code ? { ...value,\n                  \"checked\": tempList\n                } : { ...value\n                }));\n              }\n            }\n\n            break;\n\n          case \"media_abnormality\":\n            if (eyeOD[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setEyeOD(eyeOD.map(value => value.code === code ? { ...value,\n                checked: tempList\n              } : { ...value\n              }));\n            } else {\n              if (j === 1) {\n                tempList.splice(0, 2, false, true);\n                setEyeOD(eyeOD.map(value => value.code === code ? { ...value,\n                  checked: tempList\n                } : { ...value\n                }));\n              } else {\n                tempList.splice(0, 2, true, false);\n                setEyeOD(eyeOD.map(value => value.code === code ? { ...value,\n                  checked: tempList\n                } : { ...value\n                }));\n              }\n            }\n\n            break;\n\n          case \"optic_nerve_abnormality\":\n            if (eyeOD[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setEyeOD(eyeOD.map(value => value.code === code ? { ...value,\n                checked: tempList\n              } : { ...value\n              }));\n            } else {\n              if (j === 1) {\n                tempList.splice(0, 2, false, true);\n                setEyeOD(eyeOD.map(value => value.code === code ? { ...value,\n                  checked: tempList\n                } : { ...value\n                }));\n              } else {\n                tempList.splice(0, 2, true, false);\n                setEyeOD(eyeOD.map(value => value.code === code ? { ...value,\n                  checked: tempList\n                } : { ...value\n                }));\n              }\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        tempList = eyeOS[i].checked;\n\n        switch (code) {\n          case \"retinal_abnormality\":\n            if (eyeOS[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setEyeOS(eyeOS.map(value => value.code === code ? { ...value,\n                checked: tempList\n              } : { ...value\n              }));\n            } else {\n              if (j === 7) {\n                setEyeOS(eyeOS.map(value => value.code === code ? { ...value,\n                  checked: [false, false, false, false, false, false, false, true]\n                } : { ...value\n                }));\n              } else {\n                tempList.splice(7, 1, false);\n                tempList.splice(j, 1, true);\n                setEyeOS(eyeOS.map(value => value.code === code ? { ...value,\n                  checked: tempList\n                } : { ...value\n                }));\n              }\n            }\n\n            break;\n\n          case \"media_abnormality\":\n            if (eyeOS[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setEyeOS(eyeOS.map(value => value.code === code ? { ...value,\n                checked: tempList\n              } : { ...value\n              }));\n            } else {\n              if (j === 1) {\n                tempList.splice(0, 2, false, true);\n                setEyeOS(eyeOS.map(value => value.code === code ? { ...value,\n                  checked: eyeOS[i].checked.splice(0, 2, false, true)\n                } : { ...value\n                }));\n              } else {\n                tempList.splice(0, 2, true, false);\n                setEyeOS(eyeOS.map(value => value.code === code ? { ...value,\n                  checked: eyeOS[i].checked.splice(0, 2, true, false)\n                } : { ...value\n                }));\n              }\n            }\n\n            break;\n\n          case \"optic_nerve_abnormality\":\n            if (eyeOS[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setEyeOS(eyeOS.map(value => value.code === code ? { ...value,\n                checked: tempList\n              } : { ...value\n              }));\n            } else {\n              if (j === 1) {\n                tempList.splice(0, 2, false, true);\n                setEyeOS(eyeOS.map(value => value.code === code ? { ...value,\n                  checked: tempList\n                } : { ...value\n                }));\n              } else {\n                tempList.splice(0, 2, true, false);\n                setEyeOS(eyeOS.map(value => value.code === code ? { ...value,\n                  checked: tempList\n                } : { ...value\n                }));\n              }\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n    } else if (isProgram.isDiabetic) {\n      if (isSelected) {\n        tempList = diabeticOD[i].checked;\n\n        switch (code) {\n          case \"diabetic_retinopathy\":\n            if (diabeticOD[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setDiabeticOD(diabeticOD.map(value => value.code === code ? { ...value,\n                checked: tempList\n              } : { ...value\n              }));\n            } else {\n              tempList.splice(0, 5, false, false, false, false, false); //tempList = [false,false,false,false,false]\n\n              tempList.splice(j, 1, true);\n              setDiabeticOD(diabeticOD.map(value => value.code === code ? { ...value,\n                cchecked: tempList\n              } : { ...value\n              }));\n            }\n\n            break;\n\n          case \"csme_suspicion\":\n            if (diabeticOD[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setDiabeticOD(diabeticOD.map(value => value.code === code ? { ...value,\n                checked: tempList\n              } : { ...value\n              }));\n            } else {\n              tempList.splice(j, 1, true);\n              setDiabeticOD(diabeticOD.map(value => value.code === code ? { ...value,\n                cchecked: tempList\n              } : { ...value\n              }));\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        tempList = diabeticOS[i].checked;\n\n        switch (code) {\n          case \"diabetic_retinopathy\":\n            if (diabeticOS[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setDiabeticOS(diabeticOS.map(value => value.code === code ? { ...value,\n                checked: tempList\n              } : { ...value\n              }));\n            } else {\n              tempList.splice(0, 5, false, false, false, false, false);\n              tempList.splice(j, 1, true);\n              setDiabeticOS(diabeticOS.map(value => value.code === code ? { ...value,\n                cchecked: tempList\n              } : { ...value\n              }));\n            }\n\n            break;\n\n          case \"csme_suspicion\":\n            if (diabeticOS[i].checked[j]) {\n              tempList.splice(j, 1, false);\n              setDiabeticOS(diabeticOS.map(value => value.code === code ? { ...value,\n                checked: tempList\n              } : { ...value\n              }));\n            } else {\n              tempList.splice(j, 1, true);\n              setDiabeticOS(diabeticOS.map(value => value.code === code ? { ...value,\n                cchecked: tempList\n              } : { ...value\n              }));\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n  };\n\n  const handleSendData = () => {\n    const edp = {\n      code: \"edp\",\n      name: \"Eye Disease Presence\",\n      parts: {\n        od: eyeOD,\n        os: eyeOS\n      }\n    };\n    const dr = {\n      code: \"dr\",\n      name: \"Diabetic Retinopathy\",\n      parts: {\n        od: diabeticOD,\n        os: diabeticOS\n      }\n    };\n    const body = {\n      status: status.isHold ? 50 : 100,\n      comment: comment,\n      programs: [edp, dr]\n    };\n    props.sendInterpretationData(localStorage.getItem(\"first_code\"), body, cookies.token.access_token, onSuccessful);\n    setCommnet(\"\");\n  };\n\n  const handleRetake = () => {\n    const body = {\n      status: 200\n    };\n    props.sendInterpretationData(localStorage.getItem(\"first_code\"), body, cookies.token.access_token, onSuccessful);\n    setCommnet(\"\");\n  };\n\n  const onSuccessful = userID => {\n    localStorage.setItem(\"first_code\", userID);\n    let url = \"/interpretation/\" + localStorage.getItem(\"first_code\");\n    history.replace(url);\n  };\n\n  const programData = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"check_list_div\",\n    children: isProgram.isEye ? isSelected ? eyeOD.map((program, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient_info_content_span\",\n        children: program.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 29\n      }, this), program.vals.map((val, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check_box_div\",\n        children: /*#__PURE__*/_jsxDEV(DarkCheckBox, {\n          title: val.name,\n          checked: program.checked[j],\n          onChange: () => handleChangeChecked(i, j, program.code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 70\n        }, this)\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 25\n    }, this)) : eyeOS.map((program, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient_info_content_span\",\n        children: program.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 29\n      }, this), program.vals.map((val, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check_box_div\",\n        children: /*#__PURE__*/_jsxDEV(DarkCheckBox, {\n          title: val.name,\n          checked: program.checked[j],\n          onChange: () => handleChangeChecked(i, j, program.code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 70\n        }, this)\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 25\n    }, this)) : isSelected ? diabeticOD.map((program, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient_info_content_span\",\n        children: program.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 29\n      }, this), program.vals.map((val, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check_box_div\",\n        children: /*#__PURE__*/_jsxDEV(DarkCheckBox, {\n          title: val.name,\n          checked: program.checked[j],\n          onChange: () => handleChangeChecked(i, j, program.code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 70\n        }, this)\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 25\n    }, this)) : diabeticOS.map((program, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient_info_content_span\",\n        children: program.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 29\n      }, this), program.vals.map((val, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check_box_div\",\n        children: /*#__PURE__*/_jsxDEV(DarkCheckBox, {\n          title: val.name,\n          checked: program.checked[j],\n          onChange: () => handleChangeChecked(i, j, program.code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 71\n        }, this)\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 589,\n    columnNumber: 9\n  }, this);\n\n  const programList = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inspect_list_div\",\n    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n      isRight: isSelected,\n      onClick: handleToggleButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient_info_title_span\",\n      children: \"Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 13\n    }, this), initData.items.map((item, i) => /*#__PURE__*/_jsxDEV(NormalDarkButton, {\n      width: \"100%\",\n      isActive: item.code === \"edp\" ? isProgram.isEye : isProgram.isDiabetic,\n      title: item.name,\n      onClick: () => handleProgramButton(item.code)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 17\n    }, this)), programData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 622,\n    columnNumber: 9\n  }, this);\n\n  const interpretationList = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interpretation_list_div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inspect_header_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inspect_date_div\",\n          children: [/*#__PURE__*/_jsxDEV(Lock, {\n            onClick: handleHoldImg,\n            isHold: status.isHold\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inspect_date_span\",\n            children: initData.interpretationDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inspect_date_span\",\n          children: \"Remaing list: \" + initData.remainCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient_info_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient_info_title_span\",\n          children: \"Patient Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type_button_div\",\n          children: /*#__PURE__*/_jsxDEV(NormalDarkButton, {\n            isActive: isTypeClick.isPhotoClicked,\n            title: \"Photo\",\n            width: \"318px\",\n            onClick: () => handleTypeButtonChange(\"photo\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient_info_content_span\",\n          children: [\"B/D : \", initData.birthday]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient_info_content_span\",\n          children: [\"Basal disease : \", initData.basalDisease === null ? \"none\" : initData.basalDisease.map((title, k) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [title + year, initData.basalDisease.length - 1 === k ? \"\" : \" / \"]\n          }, k, true, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient_info_content_span\",\n          children: [\"Race : \", initData.race]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 13\n    }, this), programList, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom_submit_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient_info_title_span\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"comment_textarea\",\n          placeholder: \"...entering\",\n          rows: \"4\",\n          value: comment,\n          onChange: e => handleComment(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sumbit_button_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type_button_div\",\n        children: [/*#__PURE__*/_jsxDEV(NormalDarkButton, {\n          isActive: false,\n          title: \"Retake\",\n          width: \"150px\",\n          onClick: handleRetake\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomDarkButton, {\n          title: status.msg,\n          width: \"150px\",\n          onClick: handleSendData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 633,\n    columnNumber: 9\n  }, this);\n\n  const interpretation_body = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'interpretation_body_QHD',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleImgChange(\"od\"),\n      className: isSelected ? 'interpretation_photo_click' : 'interpretation_photo',\n      children: /*#__PURE__*/_jsxDEV(ImageZoom, {\n        src: initData.shot.od === \"init\" ? \"\" : initData.shot.od === \"\" ? \"none\" : baseUrl + initData.shot.od,\n        id: initData._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleImgChange(\"os\"),\n      className: isSelected === false ? 'interpretation_photo_click' : 'interpretation_photo',\n      children: /*#__PURE__*/_jsxDEV(ImageZoom, {\n        src: initData.shot.os === \"init\" ? \"\" : initData.shot.os === \"\" ? \"none\" : baseUrl + initData.shot.os,\n        id: initData._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'interpretation_list_QHD',\n      children: interpretationList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 673,\n    columnNumber: 9\n  }, this);\n\n  const data_loading = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading_div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading_content_div\",\n      children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 687,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.isDataLoading ? data_loading : interpretation_body\n  }, void 0, false);\n};\n\n_s(Interpretation, \"YhH+mx5a3ZujUtnEMib/Lr/UeUA=\", false, function () {\n  return [useCookies, useHistory, useParams];\n});\n\n_c = Interpretation;\n\nconst mapStateToProps = state => ({\n  isDataLoading: state.LoaderReducer.isDataLoading,\n  interpretationData: state.InterpretationDataReducer.interpretationData\n});\n\nconst mapDispatchToProps = {\n  getInterpretationData: actions.GetInterpretationData,\n  sendInterpretationData: actions.SendInterpretationData\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Interpretation);\n\nvar _c;\n\n$RefreshReg$(_c, \"Interpretation\");","map":{"version":3,"sources":["/Users/kimseongjae/source/eyeDX/src/pages/home/interpretation/interpretation.js"],"names":["React","useState","useEffect","useLayoutEffect","ImageZoom","actions","connect","DarkCheckBox","NormalDarkButton","CustomDarkButton","ToggleButton","InitDataModel","Loader","baseUrl","Lock","useHistory","useParams","useCookies","queryString","Modal","isClickTypeModel","isPhotoClicked","isReportClicked","isProgramModel","isEye","isDiabetic","statusModel","msg","isHold","Interpretation","props","isSelected","setIsSelected","isTypeClick","setIsTypClick","isProgram","setIsProgram","initData","setInitData","comment","setCommnet","stirngToObj","JSON","parse","localStorage","getItem","year","lang","status","setStatus","eyeOD","setEyeOD","items","parts","od","eyeOS","setEyeOS","os","diabeticOD","setDiabeticOD","diabeticOS","setDiabeticOS","cookies","history","userId","queryObj","errorStatus","setItem","goBack","getInterpretationData","token","access_token","error","interpretationData","undefined","Object","keys","length","code","shot","e","_id","handleHoldImg","handleComment","target","value","handleImgChange","handleTypeButtonChange","handleToggleButton","handleProgramButton","handleChangeChecked","i","j","tempList","checked","splice","map","cchecked","handleSendData","edp","name","dr","body","programs","sendInterpretationData","onSuccessful","handleRetake","userID","url","replace","programData","program","vals","val","programList","item","interpretationList","interpretationDate","remainCount","birthday","basalDisease","title","k","race","interpretation_body","data_loading","isDataLoading","mapStateToProps","state","LoaderReducer","InterpretationDataReducer","mapDispatchToProps","GetInterpretationData","SendInterpretationData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAoCC,eAApC,QAA2D,OAA3D;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qDAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,+CAA7B;AACA,SAASC,gBAAT,EAA0BC,gBAA1B,EAA2CC,YAA3C,QAA8D,yCAA9D;AACA,SAASC,aAAT,QAA6B,aAA7B;AACA,SAAQC,MAAR,QAAqB,mCAArB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,uCAAlB;;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,cAAc,EAAG,IADI;AAErBC,EAAAA,eAAe,EAAG;AAFG,CAAzB;AAKA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAG,IADW;AAEnBC,EAAAA,UAAU,EAAG;AAFM,CAAvB;AAKA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,GAAG,EAAE,eADW;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAApB;;AAKA,MAAMC,cAAc,GAAEC,KAAD,IAAS;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACgC,WAAD,EAAcC,aAAd,IAA+BjC,QAAQ,CAACmB,gBAAD,CAA7C;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAACsB,cAAD,CAA1C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,CAACU,aAAD,CAAxC;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMwC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAApB;AACA,QAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,cAArB,MAAyC,IAAzC,GAAgDJ,WAAW,CAACM,IAAZ,KAAqB,IAArB,GAA4B,GAA5B,GAAkC,MAAlF,GAA2FH,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAjC,GAAwC,GAAxC,GAA8C,MAAtJ;AACA,QAAO,CAACG,MAAD,EAASC,SAAT,IAAsBhD,QAAQ,CAACyB,WAAD,CAArC;AAEA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBlD,QAAQ,CAACU,aAAa,CAACyC,KAAd,CAAoB,CAApB,EAAuBC,KAAvB,CAA6BC,EAA9B,CAAlC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvD,QAAQ,CAACU,aAAa,CAACyC,KAAd,CAAoB,CAApB,EAAuBC,KAAvB,CAA6BI,EAA9B,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1D,QAAQ,CAACU,aAAa,CAACyC,KAAd,CAAoB,CAApB,EAAuBC,KAAvB,CAA6BC,EAA9B,CAA5C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8B5D,QAAQ,CAACU,aAAa,CAACyC,KAAd,CAAoB,CAApB,EAAuBC,KAAvB,CAA6BI,EAA9B,CAA5C;AACA,QAAM,CAACK,OAAD,IAAY7C,UAAU,CAAC,CAAC,OAAD,CAAD,CAA5B;AAEA,QAAM8C,OAAO,GAAGhD,UAAU,EAA1B;AACA,QAAMiD,MAAM,GAAGhD,SAAS,EAAxB;AAEA,QAAMiD,QAAQ,GAAGvB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAjB;;AAEA,QAAMqB,WAAW,GAAG,MAAM;AAAE;AACxB,QAAGtB,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAApC,EAA0C;AACtCD,MAAAA,YAAY,CAACuB,OAAb,CAAqB,YAArB,EAAkC,qBAAlC;AACAvB,MAAAA,YAAY,CAACuB,OAAb,CAAqB,aAArB,EAAmC,MAAnC;AACH,KAHD,MAGO;AACHvB,MAAAA,YAAY,CAACuB,OAAb,CAAqB,YAArB,EAAkC,8BAAlC;AACAvB,MAAAA,YAAY,CAACuB,OAAb,CAAqB,aAArB,EAAmC,MAAnC;AACH;;AACDJ,IAAAA,OAAO,CAACK,MAAR;AACH,GATD;;AAWAjE,EAAAA,eAAe,CAAC,MAAI;AAChBmC,IAAAA,WAAW,CAAC3B,aAAD,CAAX;;AACA,QAAI;AACA,UAAGqD,MAAM,CAACA,MAAP,KAAkB,SAArB,EAAgC;AAAE;AAC9BE,QAAAA,WAAW;AACd,OAFD,MAEO;AAAE;AACL,YAAGtB,YAAY,CAACC,OAAb,CAAqB,YAArB,MAAuC,EAA1C,EAA6C;AAAG;AAC5CqB,UAAAA,WAAW;AACd,SAFD,MAEO;AAAE;AACLpC,UAAAA,KAAK,CAACuC,qBAAN,CAA4BL,MAAM,CAACA,MAAnC,EAA0CC,QAA1C,EAAmDH,OAAO,CAACQ,KAAR,CAAcC,YAAjE;AACH;AACJ;AACJ,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZN,MAAAA,WAAW;AACd;AACJ,GAfc,EAeb,CAACF,MAAM,CAACA,MAAR,CAfa,CAAf;AAiBA9D,EAAAA,SAAS,CAAC,MAAM;AACb,QAAG;AACC,UAAG4B,KAAK,CAAC2C,kBAAN,KAA6BC,SAA7B,IAA0CC,MAAM,CAACC,IAAP,CAAY9C,KAAK,CAAC2C,kBAAlB,EAAsCI,MAAtC,KAAiD,CAA9F,EAAgG;AAC3FvC,QAAAA,WAAW,CAACR,KAAK,CAAC2C,kBAAP,CAAX;;AACA,YAAG3C,KAAK,CAAC2C,kBAAN,CAAyBzB,MAAzB,KAAoC,MAAvC,EAA8C;AAC1CC,UAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAENrB,YAAAA,GAAG,EAAE,MAFC;AAGNC,YAAAA,MAAM,EAAG;AAHH,WAAD,CAAT;AAKH,SAND,MAMO;AACHqB,UAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAENrB,YAAAA,GAAG,EAAE,eAFC;AAGNC,YAAAA,MAAM,EAAG;AAHH,WAAD,CAAT;AAKH;;AAED,YAAGE,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+ByB,MAA/B,KAA0C,CAA7C,EAAgD;AAC5C,cAAG/C,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+B,CAA/B,EAAkC0B,IAAlC,KAA2C,KAA9C,EAAoD;AAChD1C,YAAAA,YAAY,CAAC;AACT,uBAAU,KADD;AAET,4BAAe;AAFN,aAAD,CAAZ;AAIAe,YAAAA,QAAQ,CAACrB,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+B,CAA/B,EAAkCC,KAAlC,CAAwCC,EAAzC,CAAR;AACAE,YAAAA,QAAQ,CAAC1B,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+B,CAA/B,EAAkCC,KAAlC,CAAwCI,EAAzC,CAAR;AACH,WAPD,MAOO;AACHE,YAAAA,aAAa,CAAC7B,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+B,CAA/B,EAAkCC,KAAlC,CAAwCC,EAAzC,CAAb;AACAO,YAAAA,aAAa,CAAC/B,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+B,CAA/B,EAAkCC,KAAlC,CAAwCI,EAAzC,CAAb;AACH;AACJ,SAZD,MAYO;AACHN,UAAAA,QAAQ,CAACrB,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+B,CAA/B,EAAkCC,KAAlC,CAAwCC,EAAzC,CAAR;AACAE,UAAAA,QAAQ,CAAC1B,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+B,CAA/B,EAAkCC,KAAlC,CAAwCI,EAAzC,CAAR;AACAE,UAAAA,aAAa,CAAC7B,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+B,CAA/B,EAAkCC,KAAlC,CAAwCC,EAAzC,CAAb;AACAO,UAAAA,aAAa,CAAC/B,KAAK,CAAC2C,kBAAN,CAAyBrB,KAAzB,CAA+B,CAA/B,EAAkCC,KAAlC,CAAwCI,EAAzC,CAAb;AACH;;AAED,YAAG3B,KAAK,CAAC2C,kBAAN,CAAyBM,IAAzB,CAA8BzB,EAA9B,KAAqC,EAAxC,EAA2C;AACvCtB,UAAAA,aAAa,CAAC,KAAD,CAAb;AACH,SAFD,MAEO,IAAGF,KAAK,CAAC2C,kBAAN,CAAyBM,IAAzB,CAA8BtB,EAA9B,KAAqC,EAAxC,EAA2C;AAC9CzB,UAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AAEDQ,QAAAA,UAAU,CAACV,KAAK,CAAC2C,kBAAN,CAAyBlC,OAA1B,CAAV;AACH;AACL,KA5CD,CA4CE,OAAOyC,CAAP,EAAU;AACPd,MAAAA,WAAW;AACf;AAEH,GAjDQ,EAiDP,CAACpC,KAAK,CAAC2C,kBAAN,CAAyBQ,GAA1B,CAjDO,CAAT;;AAmDA,QAAMC,aAAa,GAAG,MAAM;AACxBlC,IAAAA,MAAM,CAACpB,MAAP,GAAgBqB,SAAS,CAACvB,WAAD,CAAzB,GAAyCuB,SAAS,CAAC,EAC/C,GAAGD,MAD4C;AAE/CrB,MAAAA,GAAG,EAAE,MAF0C;AAG/CC,MAAAA,MAAM,EAAE;AAHuC,KAAD,CAAlD;AAKH,GAND;;AAQA,QAAMuD,aAAa,GAAIH,CAAD,IAAO;AACzBxC,IAAAA,UAAU,CAACwC,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAID,KAAD,IAAW;AAC/B,QAAGhD,QAAQ,CAACe,KAAT,CAAeyB,MAAf,KAA0B,CAA1B,IAA+B1C,SAAS,CAACV,UAA5C,EAAuD;AACnDW,MAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,iBAAQ,IAFC;AAGT,sBAAa;AAHJ,OAAD,CAAZ;AAKH,KAND,MAMO;AACH,UAAGE,QAAQ,CAACe,KAAT,CAAeyB,MAAf,KAA0B,CAA7B,EAAgC;AAC5B,YAAGxC,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB0B,IAAlB,KAA2B,KAA9B,EAAqC;AACjC1C,UAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,qBAAQ,IAFC;AAGT,0BAAa;AAHJ,WAAD,CAAZ;AAKH,SAND,MAMO;AACHC,UAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,qBAAQ,KAFC;AAGT,0BAAa;AAHJ,WAAD,CAAZ;AAKH;AACJ;AACJ;;AAED,YAAQkD,KAAR;AACI,WAAK,IAAL;AACI,YAAGhD,QAAQ,CAAC0C,IAAT,CAAczB,EAAd,KAAqB,EAArB,IAA2BjB,QAAQ,CAAC0C,IAAT,CAActB,EAAd,KAAqB,EAAnD,EAAsD;AAClDzB,UAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AACD;;AACJ,WAAK,IAAL;AACI,YAAGK,QAAQ,CAAC0C,IAAT,CAAczB,EAAd,KAAqB,EAArB,IAA2BjB,QAAQ,CAAC0C,IAAT,CAActB,EAAd,KAAqB,EAAnD,EAAsD;AAClDzB,UAAAA,aAAa,CAAC,KAAD,CAAb;AACH;;AACD;;AACJ;AACI;AAZR;AAcH,GAvCD;;AAyCA,QAAMuD,sBAAsB,GAAIF,KAAD,IAAW;AACtC,YAAQA,KAAR;AACI,WAAK,OAAL;AACInD,QAAAA,aAAa,CAAC,EACV,GAAGD,WADO;AAEV,4BAAmB,IAFT;AAGV,6BAAoB;AAHV,SAAD,CAAb;AAKA;;AACJ,WAAK,QAAL;AACIC,QAAAA,aAAa,CAAC,EACV,GAAGD,WADO;AAEV,4BAAmB,KAFT;AAGV,6BAAoB;AAHV,SAAD,CAAb;AAKA;;AACJ;AACI;AAhBR;AAkBH,GAnBD;;AAqBA,QAAMuD,kBAAkB,GAAG,MAAM;AAC7B,QAAGnD,QAAQ,CAACe,KAAT,CAAeyB,MAAf,KAA0B,CAA1B,IAA+B1C,SAAS,CAACV,UAA5C,EAAuD;AACnDW,MAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,iBAAQ,IAFC;AAGT,sBAAa;AAHJ,OAAD,CAAZ;AAKH,KAND,MAMO;AACH,UAAGE,QAAQ,CAACe,KAAT,CAAeyB,MAAf,KAA0B,CAA7B,EAAgC;AAC5B,YAAGxC,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkB0B,IAAlB,KAA2B,KAA9B,EAAqC;AACjC1C,UAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,qBAAQ,IAFC;AAGT,0BAAa;AAHJ,WAAD,CAAZ;AAKH,SAND,MAMO;AACHC,UAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,qBAAQ,KAFC;AAGT,0BAAa;AAHJ,WAAD,CAAZ;AAKH;AACJ;AACJ;;AAED,QAAGE,QAAQ,CAAC0C,IAAT,CAAczB,EAAd,KAAqB,EAArB,IAA2BjB,QAAQ,CAAC0C,IAAT,CAActB,EAAd,KAAqB,EAAnD,EAAsD;AAClD,UAAG1B,UAAH,EAAc;AACVC,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OAFD,MAEO;AACHA,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ;AACJ,GAhCD;;AAkCA,QAAMyD,mBAAmB,GAAIJ,KAAD,IAAW;AACnC,YAAQA,KAAR;AACI,WAAK,KAAL;AACIjD,QAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,mBAAU,IAFD;AAGT,wBAAe;AAHN,SAAD,CAAZ;AAKA;;AACJ,WAAK,IAAL;AACIC,QAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,mBAAU,KAFD;AAGT,wBAAe;AAHN,SAAD,CAAZ;AAKA;;AACJ;AACI;AAhBR;AAkBH,GAnBD;;AAqBA,QAAMuD,mBAAmB,GAAG,CAACC,CAAD,EAAGC,CAAH,EAAKd,IAAL,KAAc;AACtC,QAAIe,QAAJ;;AACA,QAAG1D,SAAS,CAACX,KAAb,EAAoB;AAChB,UAAGO,UAAH,EAAe;AACX8D,QAAAA,QAAQ,GAAG3C,KAAK,CAACyC,CAAD,CAAL,CAASG,OAApB;;AACA,gBAAQhB,IAAR;AACI,eAAK,qBAAL;AACI,gBAAG5B,KAAK,CAACyC,CAAD,CAAL,CAASG,OAAT,CAAiBF,CAAjB,CAAH,EAAwB;AACpBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACAzC,cAAAA,QAAQ,CACJD,KAAK,CAAC8C,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvC,2BAAYQ;AAF2B,eAAtB,GAGjB,EAAC,GAAGR;AAAJ,eAHJ,CADI,CAAR;AAMH,aARD,MAQO;AACH,kBAAGO,CAAC,KAAK,CAAT,EAAY;AACRzC,gBAAAA,QAAQ,CACJD,KAAK,CAAC8C,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvC,6BAAW,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,IAA3C;AAF4B,iBAAtB,GAGjB,EAAC,GAAGA;AAAJ,iBAHJ,CADI,CAAR;AAMH,eAPD,MAOO;AACHQ,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACAF,gBAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,IAApB;AACAzC,gBAAAA,QAAQ,CACJD,KAAK,CAAC8C,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvC,6BAAYQ;AAF2B,iBAAtB,GAGjB,EAAC,GAAGR;AAAJ,iBAHJ,CADI,CAAR;AAMH;AACJ;;AACD;;AACJ,eAAK,mBAAL;AACI,gBAAGnC,KAAK,CAACyC,CAAD,CAAL,CAASG,OAAT,CAAiBF,CAAjB,CAAH,EAAwB;AACpBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACAzC,cAAAA,QAAQ,CACJD,KAAK,CAAC8C,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,gBAAAA,OAAO,EAAGD;AAF6B,eAAtB,GAGjB,EAAC,GAAGR;AAAJ,eAHJ,CADI,CAAR;AAMH,aARD,MAQO;AACH,kBAAGO,CAAC,KAAK,CAAT,EAAY;AACRC,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,KAApB,EAA0B,IAA1B;AACA5C,gBAAAA,QAAQ,CACJD,KAAK,CAAC8C,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAGD;AAF6B,iBAAtB,GAGjB,EAAC,GAAGR;AAAJ,iBAHJ,CADI,CAAR;AAMH,eARD,MAQO;AACHQ,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,IAApB,EAAyB,KAAzB;AACA5C,gBAAAA,QAAQ,CACJD,KAAK,CAAC8C,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAGD;AAF6B,iBAAtB,GAGjB,EAAC,GAAGR;AAAJ,iBAHJ,CADI,CAAR;AAMH;AACJ;;AACD;;AACJ,eAAK,yBAAL;AACI,gBAAGnC,KAAK,CAACyC,CAAD,CAAL,CAASG,OAAT,CAAiBF,CAAjB,CAAH,EAAwB;AACpBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACAzC,cAAAA,QAAQ,CACJD,KAAK,CAAC8C,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,gBAAAA,OAAO,EAAGD;AAF6B,eAAtB,GAGjB,EAAC,GAAGR;AAAJ,eAHJ,CADI,CAAR;AAMH,aARD,MAQO;AACH,kBAAGO,CAAC,KAAK,CAAT,EAAY;AACRC,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,KAApB,EAA0B,IAA1B;AACA5C,gBAAAA,QAAQ,CACJD,KAAK,CAAC8C,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAGD;AAF6B,iBAAtB,GAGjB,EAAC,GAAGR;AAAJ,iBAHJ,CADI,CAAR;AAMH,eARD,MAQO;AACHQ,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,IAApB,EAAyB,KAAzB;AACA5C,gBAAAA,QAAQ,CACJD,KAAK,CAAC8C,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAGD;AAF6B,iBAAtB,GAGjB,EAAC,GAAGR;AAAJ,iBAHJ,CADI,CAAR;AAMH;AACJ;;AACL;;AACA;AACI;AAzFR;AA2FH,OA7FD,MA6FO;AACHQ,QAAAA,QAAQ,GAACtC,KAAK,CAACoC,CAAD,CAAL,CAASG,OAAlB;;AACA,gBAAQhB,IAAR;AACI,eAAK,qBAAL;AACI,gBAAGvB,KAAK,CAACoC,CAAD,CAAL,CAASG,OAAT,CAAiBF,CAAjB,CAAH,EAAwB;AACpBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACApC,cAAAA,QAAQ,CACJD,KAAK,CAACyC,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,gBAAAA,OAAO,EAAGD;AAF6B,eAAtB,GAGjB,EAAC,GAAGR;AAAJ,eAHJ,CADI,CAAR;AAMH,aARD,MAQO;AACH,kBAAGO,CAAC,KAAK,CAAT,EAAY;AACRpC,gBAAAA,QAAQ,CACJD,KAAK,CAACyC,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,IAA3C;AAF6B,iBAAtB,GAGjB,EAAC,GAAGT;AAAJ,iBAHJ,CADI,CAAR;AAMH,eAPD,MAOO;AACHQ,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACAF,gBAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,IAApB;AACApC,gBAAAA,QAAQ,CACJD,KAAK,CAACyC,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAGD;AAF6B,iBAAtB,GAGjB,EAAC,GAAGR;AAAJ,iBAHJ,CADI,CAAR;AAMH;AACJ;;AACD;;AACJ,eAAK,mBAAL;AACI,gBAAG9B,KAAK,CAACoC,CAAD,CAAL,CAASG,OAAT,CAAiBF,CAAjB,CAAH,EAAwB;AACpBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACApC,cAAAA,QAAQ,CACJD,KAAK,CAACyC,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,gBAAAA,OAAO,EAAGD;AAF6B,eAAtB,GAGjB,EAAC,GAAGR;AAAJ,eAHJ,CADI,CAAR;AAMH,aARD,MAQO;AACH,kBAAGO,CAAC,KAAK,CAAT,EAAY;AACRC,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,KAApB,EAA0B,IAA1B;AACAvC,gBAAAA,QAAQ,CACJD,KAAK,CAACyC,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAGvC,KAAK,CAACoC,CAAD,CAAL,CAASG,OAAT,CAAiBC,MAAjB,CAAwB,CAAxB,EAA0B,CAA1B,EAA4B,KAA5B,EAAkC,IAAlC;AAF6B,iBAAtB,GAGjB,EAAC,GAAGV;AAAJ,iBAHJ,CADI,CAAR;AAMH,eARD,MAQO;AACHQ,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,IAApB,EAAyB,KAAzB;AACAvC,gBAAAA,QAAQ,CACJD,KAAK,CAACyC,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAGvC,KAAK,CAACoC,CAAD,CAAL,CAASG,OAAT,CAAiBC,MAAjB,CAAwB,CAAxB,EAA0B,CAA1B,EAA4B,IAA5B,EAAiC,KAAjC;AAF6B,iBAAtB,GAGjB,EAAC,GAAGV;AAAJ,iBAHJ,CADI,CAAR;AAMH;AACJ;;AACD;;AACJ,eAAK,yBAAL;AACI,gBAAG9B,KAAK,CAACoC,CAAD,CAAL,CAASG,OAAT,CAAiBF,CAAjB,CAAH,EAAwB;AACpBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACApC,cAAAA,QAAQ,CACJD,KAAK,CAACyC,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,gBAAAA,OAAO,EAAGD;AAF6B,eAAtB,GAGjB,EAAC,GAAGR;AAAJ,eAHJ,CADI,CAAR;AAMH,aARD,MAQO;AACH,kBAAGO,CAAC,KAAK,CAAT,EAAY;AACRC,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,KAApB,EAA0B,IAA1B;AACAvC,gBAAAA,QAAQ,CACJD,KAAK,CAACyC,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAGD;AAF6B,iBAAtB,GAGjB,EAAC,GAAGR;AAAJ,iBAHJ,CADI,CAAR;AAMH,eARD,MAQO;AACHQ,gBAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,IAApB,EAAyB,KAAzB;AACAvC,gBAAAA,QAAQ,CACJD,KAAK,CAACyC,GAAN,CAAWX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EACvC,GAAGO,KADoC;AAEvCS,kBAAAA,OAAO,EAAGD;AAF6B,iBAAtB,GAGjB,EAAC,GAAGR;AAAJ,iBAHJ,CADI,CAAR;AAMH;AACJ;;AACD;;AACJ;AACI;AAzFR;AA2FH;AACJ,KA5LD,MA4LO,IAAGlD,SAAS,CAACV,UAAb,EAAwB;AAC3B,UAAGM,UAAH,EAAe;AACX8D,QAAAA,QAAQ,GAACnC,UAAU,CAACiC,CAAD,CAAV,CAAcG,OAAvB;;AACA,gBAAQhB,IAAR;AACI,eAAK,sBAAL;AACI,gBAAGpB,UAAU,CAACiC,CAAD,CAAV,CAAcG,OAAd,CAAsBF,CAAtB,CAAH,EAA6B;AACzBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACAjC,cAAAA,aAAa,CACTD,UAAU,CAACsC,GAAX,CAAgBX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EAC5C,GAAGO,KADyC;AAE5CS,gBAAAA,OAAO,EAAGD;AAFkC,eAAtB,GAGtB,EAAC,GAAGR;AAAJ,eAHJ,CADS,CAAb;AAMH,aARD,MAQO;AACHQ,cAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,KAApB,EAA0B,KAA1B,EAAgC,KAAhC,EAAsC,KAAtC,EAA4C,KAA5C,EADG,CAEH;;AACAF,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,IAApB;AACAjC,cAAAA,aAAa,CACTD,UAAU,CAACsC,GAAX,CAAgBX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EAC5C,GAAGO,KADyC;AAE5CY,gBAAAA,QAAQ,EAAGJ;AAFiC,eAAtB,GAGtB,EAAC,GAAGR;AAAJ,eAHJ,CADS,CAAb;AAMH;;AACD;;AACJ,eAAK,gBAAL;AACI,gBAAG3B,UAAU,CAACiC,CAAD,CAAV,CAAcG,OAAd,CAAsBF,CAAtB,CAAH,EAA6B;AACzBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACAjC,cAAAA,aAAa,CACTD,UAAU,CAACsC,GAAX,CAAgBX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EAC5C,GAAGO,KADyC;AAE5CS,gBAAAA,OAAO,EAAGD;AAFkC,eAAtB,GAGtB,EAAC,GAAGR;AAAJ,eAHJ,CADS,CAAb;AAMH,aARD,MAQO;AACHQ,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,IAApB;AACAjC,cAAAA,aAAa,CACTD,UAAU,CAACsC,GAAX,CAAgBX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EAC5C,GAAGO,KADyC;AAE5CY,gBAAAA,QAAQ,EAAGJ;AAFiC,eAAtB,GAGtB,EAAC,GAAGR;AAAJ,eAHJ,CADS,CAAb;AAMH;;AACD;;AACJ;AACI;AA1CR;AA4CH,OA9CD,MA8CO;AACHQ,QAAAA,QAAQ,GAACjC,UAAU,CAAC+B,CAAD,CAAV,CAAcG,OAAvB;;AACA,gBAAQhB,IAAR;AACI,eAAK,sBAAL;AACI,gBAAGlB,UAAU,CAAC+B,CAAD,CAAV,CAAcG,OAAd,CAAsBF,CAAtB,CAAH,EAA6B;AACzBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACA/B,cAAAA,aAAa,CACTD,UAAU,CAACoC,GAAX,CAAgBX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EAC5C,GAAGO,KADyC;AAE5CS,gBAAAA,OAAO,EAAGD;AAFkC,eAAtB,GAGtB,EAAC,GAAGR;AAAJ,eAHJ,CADS,CAAb;AAMH,aARD,MAQO;AACHQ,cAAAA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,KAApB,EAA0B,KAA1B,EAAgC,KAAhC,EAAsC,KAAtC,EAA4C,KAA5C;AACAF,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,IAApB;AACA/B,cAAAA,aAAa,CACTD,UAAU,CAACoC,GAAX,CAAgBX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EAC5C,GAAGO,KADyC;AAE5CY,gBAAAA,QAAQ,EAAGJ;AAFiC,eAAtB,GAGtB,EAAC,GAAGR;AAAJ,eAHJ,CADS,CAAb;AAMH;;AACD;;AACJ,eAAK,gBAAL;AACI,gBAAGzB,UAAU,CAAC+B,CAAD,CAAV,CAAcG,OAAd,CAAsBF,CAAtB,CAAH,EAA6B;AACzBC,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,KAApB;AACA/B,cAAAA,aAAa,CACTD,UAAU,CAACoC,GAAX,CAAgBX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EAC5C,GAAGO,KADyC;AAE5CS,gBAAAA,OAAO,EAAGD;AAFkC,eAAtB,GAGtB,EAAC,GAAGR;AAAJ,eAHJ,CADS,CAAb;AAMH,aARD,MAQO;AACHQ,cAAAA,QAAQ,CAACE,MAAT,CAAgBH,CAAhB,EAAkB,CAAlB,EAAoB,IAApB;AACA/B,cAAAA,aAAa,CACTD,UAAU,CAACoC,GAAX,CAAgBX,KAAD,IAAWA,KAAK,CAACP,IAAN,KAAeA,IAAf,GAAsB,EAC5C,GAAGO,KADyC;AAE5CY,gBAAAA,QAAQ,EAAGJ;AAFiC,eAAtB,GAGtB,EAAC,GAAGR;AAAJ,eAHJ,CADS,CAAb;AAMH;;AACD;;AACJ;AACI;AAzCR;AA2CH;AACJ;AACJ,GA5RD;;AA8RA,QAAMa,cAAc,GAAG,MAAM;AACzB,UAAMC,GAAG,GAAG;AACRrB,MAAAA,IAAI,EAAE,KADE;AAERsB,MAAAA,IAAI,EAAE,sBAFE;AAGR/C,MAAAA,KAAK,EAAG;AACJC,QAAAA,EAAE,EAAEJ,KADA;AAEJO,QAAAA,EAAE,EAAEF;AAFA;AAHA,KAAZ;AASA,UAAM8C,EAAE,GAAG;AACPvB,MAAAA,IAAI,EAAE,IADC;AAEPsB,MAAAA,IAAI,EAAE,sBAFC;AAGP/C,MAAAA,KAAK,EAAG;AACJC,QAAAA,EAAE,EAAEI,UADA;AAEJD,QAAAA,EAAE,EAAEG;AAFA;AAHD,KAAX;AAQA,UAAM0C,IAAI,GAAG;AACTtD,MAAAA,MAAM,EAAGA,MAAM,CAACpB,MAAP,GAAgB,EAAhB,GAAqB,GADrB;AAETW,MAAAA,OAAO,EAAGA,OAFD;AAGTgE,MAAAA,QAAQ,EAAG,CAACJ,GAAD,EAAKE,EAAL;AAHF,KAAb;AAKAvE,IAAAA,KAAK,CAAC0E,sBAAN,CAA6B5D,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA7B,EAAgEyD,IAAhE,EAAqExC,OAAO,CAACQ,KAAR,CAAcC,YAAnF,EAAgGkC,YAAhG;AACAjE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAzBD;;AA2BA,QAAMkE,YAAY,GAAG,MAAM;AACvB,UAAMJ,IAAI,GAAG;AACTtD,MAAAA,MAAM,EAAG;AADA,KAAb;AAGAlB,IAAAA,KAAK,CAAC0E,sBAAN,CAA6B5D,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA7B,EAAgEyD,IAAhE,EAAqExC,OAAO,CAACQ,KAAR,CAAcC,YAAnF,EAAgGkC,YAAhG;AACAjE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAND;;AAQA,QAAMiE,YAAY,GAAIE,MAAD,IAAY;AAC7B/D,IAAAA,YAAY,CAACuB,OAAb,CAAqB,YAArB,EAAkCwC,MAAlC;AACA,QAAIC,GAAG,GAAG,qBAAqBhE,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA/B;AACAkB,IAAAA,OAAO,CAAC8C,OAAR,CAAgBD,GAAhB;AACH,GAJD;;AAMA,QAAME,WAAW,gBACb;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA,cACK3E,SAAS,CAACX,KAAV,GACGO,UAAU,GACNmB,KAAK,CAAC8C,GAAN,CAAU,CAACe,OAAD,EAASpB,CAAT,kBACN;AAAA,8BACI;AAAe,QAAA,SAAS,EAAG,2BAA3B;AAAA,kBAAwDoB,OAAO,CAACX;AAAhE,SAAYT,CAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,EAESoB,OAAO,CAACC,IAAR,CAAahB,GAAb,CAAiB,CAACiB,GAAD,EAAKrB,CAAL,kBACtB;AAAa,QAAA,SAAS,EAAG,eAAzB;AAAA,+BAAyC,QAAC,YAAD;AAAc,UAAA,KAAK,EAAIqB,GAAG,CAACb,IAA3B;AAAiC,UAAA,OAAO,EAAIW,OAAO,CAACjB,OAAR,CAAgBF,CAAhB,CAA5C;AAAgE,UAAA,QAAQ,EAAI,MAAIF,mBAAmB,CAACC,CAAD,EAAGC,CAAH,EAAKmB,OAAO,CAACjC,IAAb;AAAnG;AAAA;AAAA;AAAA;AAAA;AAAzC,SAAUc,CAAV;AAAA;AAAA;AAAA;AAAA,cADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADM,GAONrC,KAAK,CAACyC,GAAN,CAAU,CAACe,OAAD,EAASpB,CAAT,kBACN;AAAA,8BACI;AAAe,QAAA,SAAS,EAAG,2BAA3B;AAAA,kBAAwDoB,OAAO,CAACX;AAAhE,SAAYT,CAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,EAESoB,OAAO,CAACC,IAAR,CAAahB,GAAb,CAAiB,CAACiB,GAAD,EAAKrB,CAAL,kBACtB;AAAa,QAAA,SAAS,EAAG,eAAzB;AAAA,+BAAyC,QAAC,YAAD;AAAc,UAAA,KAAK,EAAIqB,GAAG,CAACb,IAA3B;AAAiC,UAAA,OAAO,EAAIW,OAAO,CAACjB,OAAR,CAAgBF,CAAhB,CAA5C;AAAgE,UAAA,QAAQ,EAAI,MAAIF,mBAAmB,CAACC,CAAD,EAAGC,CAAH,EAAKmB,OAAO,CAACjC,IAAb;AAAnG;AAAA;AAAA;AAAA;AAAA;AAAzC,SAAUc,CAAV;AAAA;AAAA;AAAA;AAAA,cADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CARP,GAcG7D,UAAU,GACN2B,UAAU,CAACsC,GAAX,CAAe,CAACe,OAAD,EAASpB,CAAT,kBACX;AAAA,8BACI;AAAe,QAAA,SAAS,EAAG,2BAA3B;AAAA,kBAAwDoB,OAAO,CAACX;AAAhE,SAAYT,CAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,EAESoB,OAAO,CAACC,IAAR,CAAahB,GAAb,CAAiB,CAACiB,GAAD,EAAKrB,CAAL,kBACtB;AAAa,QAAA,SAAS,EAAG,eAAzB;AAAA,+BAAyC,QAAC,YAAD;AAAc,UAAA,KAAK,EAAIqB,GAAG,CAACb,IAA3B;AAAiC,UAAA,OAAO,EAAIW,OAAO,CAACjB,OAAR,CAAgBF,CAAhB,CAA5C;AAAgE,UAAA,QAAQ,EAAI,MAAIF,mBAAmB,CAACC,CAAD,EAAGC,CAAH,EAAKmB,OAAO,CAACjC,IAAb;AAAnG;AAAA;AAAA;AAAA;AAAA;AAAzC,SAAUc,CAAV;AAAA;AAAA;AAAA;AAAA,cADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADM,GAONhC,UAAU,CAACoC,GAAX,CAAe,CAACe,OAAD,EAASpB,CAAT,kBACX;AAAA,8BACI;AAAe,QAAA,SAAS,EAAG,2BAA3B;AAAA,kBAAwDoB,OAAO,CAACX;AAAhE,SAAYT,CAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,EAESoB,OAAO,CAACC,IAAR,CAAahB,GAAb,CAAiB,CAACiB,GAAD,EAAKrB,CAAL,kBACtB;AAAc,QAAA,SAAS,EAAG,eAA1B;AAAA,+BAA0C,QAAC,YAAD;AAAc,UAAA,KAAK,EAAIqB,GAAG,CAACb,IAA3B;AAAiC,UAAA,OAAO,EAAIW,OAAO,CAACjB,OAAR,CAAgBF,CAAhB,CAA5C;AAAgE,UAAA,QAAQ,EAAI,MAAIF,mBAAmB,CAACC,CAAD,EAAGC,CAAH,EAAKmB,OAAO,CAACjC,IAAb;AAAnG;AAAA;AAAA;AAAA;AAAA;AAA1C,SAAWc,CAAX;AAAA;AAAA;AAAA;AAAA,cADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAtBZ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAiCA,QAAMsB,WAAW,gBACb;AAAK,IAAA,SAAS,EAAG,kBAAjB;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAInF,UAAzB;AAAqC,MAAA,OAAO,EAAIyD;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKnD,QAAQ,CAACe,KAAT,CAAe4C,GAAf,CAAmB,CAACmB,IAAD,EAAMxB,CAAN,kBAChB,QAAC,gBAAD;AAA0B,MAAA,KAAK,EAAG,MAAlC;AAAyC,MAAA,QAAQ,EAAIwB,IAAI,CAACrC,IAAL,KAAc,KAAd,GAAsB3C,SAAS,CAACX,KAAhC,GAAwCW,SAAS,CAACV,UAAvG;AAAmH,MAAA,KAAK,EAAI0F,IAAI,CAACf,IAAjI;AAAuI,MAAA,OAAO,EAAI,MAAIX,mBAAmB,CAAC0B,IAAI,CAACrC,IAAN;AAAzK,OAAuBa,CAAvB;AAAA;AAAA;AAAA;AAAA,YADH,CAHL,EAMKmB,WANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAWA,QAAMM,kBAAkB,gBACpB;AAAK,IAAA,SAAS,EAAG,yBAAjB;AAAA,4BACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAG,oBAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAG,kBAAjB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,OAAO,EAAIlC,aAAjB;AAAgC,YAAA,MAAM,EAAIlC,MAAM,CAACpB;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAG,mBAAlB;AAAA,sBAAuCS,QAAQ,CAACgF;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAM,UAAA,SAAS,EAAG,mBAAlB;AAAA,oBAAuC,mBAAmBhF,QAAQ,CAACiF;AAAnE;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAG,kBAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAG,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAG,iBAAjB;AAAA,iCACI,QAAC,gBAAD;AAAkB,YAAA,QAAQ,EAAIrF,WAAW,CAACZ,cAA1C;AAA0D,YAAA,KAAK,EAAG,OAAlE;AAA0E,YAAA,KAAK,EAAG,OAAlF;AAA0F,YAAA,OAAO,EAAI,MAAIkE,sBAAsB,CAAC,OAAD;AAA/H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAK,UAAA,SAAS,EAAG,2BAAjB;AAAA,+BAAoDlD,QAAQ,CAACkF,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAK,UAAA,SAAS,EAAG,2BAAjB;AAAA,yCAA8DlF,QAAQ,CAACmF,YAAT,KAA0B,IAA1B,GAAiC,MAAjC,GAC1DnF,QAAQ,CAACmF,YAAT,CAAsBxB,GAAtB,CAA0B,CAACyB,KAAD,EAAOC,CAAP,kBACtB;AAAA,uBAAeD,KAAK,GAAC3E,IAArB,EAA2BT,QAAQ,CAACmF,YAAT,CAAsB3C,MAAtB,GAA6B,CAA7B,KAAmC6C,CAAnC,GAAuC,EAAvC,GAA4C,KAAvE;AAAA,aAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAWI;AAAK,UAAA,SAAS,EAAG,2BAAjB;AAAA,gCAAqDrF,QAAQ,CAACsF,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAuBKT,WAvBL,eAwBI;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAG,cAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAG,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,SAAS,EAAG,kBAAtB;AAAyC,UAAA,WAAW,EAAC,aAArD;AAAmE,UAAA,IAAI,EAAC,GAAxE;AAA4E,UAAA,KAAK,EAAI3E,OAArF;AAA8F,UAAA,QAAQ,EAAKyC,CAAD,IAAKG,aAAa,CAACH,CAAD;AAA5H;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAxBJ,eA8BI;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAG,iBAAjB;AAAA,gCACI,QAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAI,KAA9B;AAAqC,UAAA,KAAK,EAAG,QAA7C;AAAsD,UAAA,KAAK,EAAG,OAA9D;AAAsE,UAAA,OAAO,EAAI0B;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAI1D,MAAM,CAACrB,GAAlC;AAAuC,UAAA,KAAK,EAAG,OAA/C;AAAuD,UAAA,OAAO,EAAIuE;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAwCA,QAAM0B,mBAAmB,gBACrB;AAAK,IAAA,SAAS,EAAI,yBAAlB;AAAA,4BACI;AAAK,MAAA,OAAO,EAAI,MAAItC,eAAe,CAAC,IAAD,CAAnC;AAA2C,MAAA,SAAS,EAAIvD,UAAU,GAAE,4BAAF,GAAiC,sBAAnG;AAAA,6BACK,QAAC,SAAD;AAAW,QAAA,GAAG,EAAIM,QAAQ,CAAC0C,IAAT,CAAczB,EAAd,KAAqB,MAArB,GAA8B,EAA9B,GAAmCjB,QAAQ,CAAC0C,IAAT,CAAczB,EAAd,KAAqB,EAArB,GAA0B,MAA1B,GAAmCzC,OAAO,GAAGwB,QAAQ,CAAC0C,IAAT,CAAczB,EAAhH;AAAoH,QAAA,EAAE,EAAIjB,QAAQ,CAAC4C;AAAnI;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,OAAO,EAAI,MAAIK,eAAe,CAAC,IAAD,CAAnC;AAA2C,MAAA,SAAS,EAAIvD,UAAU,KAAK,KAAf,GAAsB,4BAAtB,GAAqD,sBAA7G;AAAA,6BACK,QAAC,SAAD;AAAW,QAAA,GAAG,EAAIM,QAAQ,CAAC0C,IAAT,CAActB,EAAd,KAAqB,MAArB,GAA8B,EAA9B,GAAmCpB,QAAQ,CAAC0C,IAAT,CAActB,EAAd,KAAqB,EAArB,GAA0B,MAA1B,GAAmC5C,OAAO,GAAGwB,QAAQ,CAAC0C,IAAT,CAActB,EAAhH;AAAoH,QAAA,EAAE,EAAIpB,QAAQ,CAAC4C;AAAnI;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAI,yBAAlB;AAAA,gBACKmC;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAcA,QAAMS,YAAY,gBACd;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,qBAAjB;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AASA,sBACI;AAAA,cACC/F,KAAK,CAACgG,aAAN,GAAsBD,YAAtB,GAAqCD;AADtC,mBADJ;AAKH,CA5pBD;;GAAM/F,c;UAcgBZ,U,EAEFF,U,EACDC,S;;;KAjBba,c;;AA8pBN,MAAMkG,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,aAAa,EAAEE,KAAK,CAACC,aAAN,CAAoBH,aADH;AAEhCrD,EAAAA,kBAAkB,EAAEuD,KAAK,CAACE,yBAAN,CAAgCzD;AAFpB,CAAZ,CAAxB;;AAKA,MAAM0D,kBAAkB,GAAG;AACvB9D,EAAAA,qBAAqB,EAAEhE,OAAO,CAAC+H,qBADR;AAEvB5B,EAAAA,sBAAsB,EAAGnG,OAAO,CAACgI;AAFV,CAA3B;AAKA,eAAe/H,OAAO,CAACyH,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CtG,cAA7C,CAAf","sourcesContent":["import React, { useState,useEffect, useLayoutEffect } from 'react';\nimport \"./interpretation.css\";\nimport ImageZoom from '../../../components/image_zoom/image_zoom'\nimport * as actions from '../../../actions/interpretation/interpretation_data';\nimport { connect } from 'react-redux'\nimport { DarkCheckBox } from '../../../components/parts/check_box/check_box';\nimport { NormalDarkButton,CustomDarkButton,ToggleButton} from '../../../components/parts/button/button';\nimport { InitDataModel} from \"./initModel\";\nimport {Loader} from \"../../../components/loader/loader\";\nimport { baseUrl } from '../../../actions/api';\nimport Lock from \"../../../components/parts/lock/lock\";\nimport { useHistory, useParams } from 'react-router';\nimport { useCookies } from 'react-cookie';\nimport queryString from 'query-string';\nimport Modal from '../../../components/parts/modal/modal'\n\nconst isClickTypeModel = {\n    isPhotoClicked : true,\n    isReportClicked : false,\n}\n\nconst isProgramModel = {\n    isEye : true,\n    isDiabetic : false,\n}\n\nconst statusModel = {\n    msg: \"Send & Report\",\n    isHold: false,\n}\n\nconst Interpretation=(props)=>{\n    const [isSelected, setIsSelected] = useState(true);\n    const [isTypeClick, setIsTypClick] = useState(isClickTypeModel);\n    const [isProgram, setIsProgram] = useState(isProgramModel);\n    const [initData, setInitData] = useState(InitDataModel);\n    const [comment, setCommnet] = useState(\"\");\n    const stirngToObj = JSON.parse(localStorage.getItem(\"filter-value\"));\n    const year = localStorage.getItem(\"filter-value\") !== null ? stirngToObj.lang === \"kr\" ? \"년\" : \"year\" : localStorage.getItem(\"lang\") === \"kr\" ? \"년\" : \"year\";\n    const  [status, setStatus] = useState(statusModel);\n\n    const [eyeOD, setEyeOD] = useState(InitDataModel.items[0].parts.od);\n    const [eyeOS, setEyeOS] = useState(InitDataModel.items[0].parts.os); \n    const [diabeticOD, setDiabeticOD] = useState(InitDataModel.items[1].parts.od); \n    const [diabeticOS, setDiabeticOS] = useState(InitDataModel.items[1].parts.os);\n    const [cookies] = useCookies(['token']);\n\n    const history = useHistory();\n    const userId = useParams();\n\n    const queryObj = JSON.parse(localStorage.getItem(\"filter-value\"));\n\n    const errorStatus = () => { /// 데이터가 없는데 interpretation page 로 접속할 경우 생기는 에러메세지 산출\n        if(localStorage.getItem(\"lang\") === \"kr\") {\n            localStorage.setItem(\"error_data\",\"환자의 데이터가 존재하지 않습니다.\");\n            localStorage.setItem(\"error_value\",\"true\");\n        } else {\n            localStorage.setItem(\"error_data\",\"Patient data does not exist.\");\n            localStorage.setItem(\"error_value\",\"true\");\n        }\n        history.goBack();\n    }\n\n    useLayoutEffect(()=>{\n        setInitData(InitDataModel);\n        try {\n            if(userId.userId === \":userId\") { /// 주소창에 /interpretation 이라고 치고 들어올경우\n                errorStatus(); \n            } else { /// waiting page 에서 interpretation button 을 눌고 들어올경우\n                if(localStorage.getItem(\"first_code\") === \"\"){  /// waiting list 에 데이터가 없음\n                    errorStatus();\n                } else { /// 성공적으로 데이터 불러오기\n                    props.getInterpretationData(userId.userId,queryObj,cookies.token.access_token);\n                }\n            }\n        } catch (error) {\n            errorStatus();\n        }\n    },[userId.userId])\n \n    useEffect(() => {\n       try{\n           if(props.interpretationData !== undefined && Object.keys(props.interpretationData).length !== 0){\n                setInitData(props.interpretationData);\n                if(props.interpretationData.status === \"Hold\"){\n                    setStatus({\n                        ...status,\n                        msg: \"Hold\",\n                        isHold : true,\n                    })\n                } else {\n                    setStatus({\n                        ...status,\n                        msg: \"Send & Report\",\n                        isHold : false,\n                    })\n                }\n\n                if(props.interpretationData.items.length === 1) {\n                    if(props.interpretationData.items[0].code !== \"edp\"){\n                        setIsProgram({\n                            \"isEye\" : false,\n                            \"isDiabetic\" : true,\n                        })\n                        setEyeOD(props.interpretationData.items[0].parts.od)\n                        setEyeOS(props.interpretationData.items[0].parts.os)\n                    } else {\n                        setDiabeticOD(props.interpretationData.items[0].parts.od)\n                        setDiabeticOS(props.interpretationData.items[0].parts.os)\n                    }   \n                } else {\n                    setEyeOD(props.interpretationData.items[0].parts.od)\n                    setEyeOS(props.interpretationData.items[0].parts.os)\n                    setDiabeticOD(props.interpretationData.items[1].parts.od)\n                    setDiabeticOS(props.interpretationData.items[1].parts.os)\n                }\n\n                if(props.interpretationData.shot.od === \"\"){\n                    setIsSelected(false);\n                } else if(props.interpretationData.shot.os === \"\"){\n                    setIsSelected(true);\n                }\n\n                setCommnet(props.interpretationData.comment);\n            }     \n       } catch (e) {\n            errorStatus();\n       }\n        \n    },[props.interpretationData._id])\n\n    const handleHoldImg = () => {\n        status.isHold ? setStatus(statusModel) : setStatus({\n            ...status,\n            msg: \"Hold\",\n            isHold: true,\n        })\n    }\n\n    const handleComment = (e) => {\n        setCommnet(e.target.value);\n    }\n\n    const handleImgChange = (value) => {\n        if(initData.items.length === 2 && isProgram.isDiabetic){\n            setIsProgram({\n                ...isProgram,\n                \"isEye\":true,\n                \"isDiabetic\":false,\n            })\n        } else {\n            if(initData.items.length === 1) {\n                if(initData.items[0].code === \"edp\") {\n                    setIsProgram({\n                        ...isProgram,\n                        \"isEye\":true,\n                        \"isDiabetic\":false,\n                    })\n                } else {\n                    setIsProgram({\n                        ...isProgram,\n                        \"isEye\":false,\n                        \"isDiabetic\":true,\n                    })\n                }\n            }\n        }\n\n        switch (value) {\n            case \"od\":\n                if(initData.shot.od !== \"\" && initData.shot.os !== \"\"){\n                    setIsSelected(true);\n                }  \n                break;\n            case \"os\":\n                if(initData.shot.od !== \"\" && initData.shot.os !== \"\"){\n                    setIsSelected(false);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleTypeButtonChange = (value) => {\n        switch (value) {\n            case \"photo\":\n                setIsTypClick({\n                    ...isTypeClick,\n                    \"isPhotoClicked\" : true,\n                    \"isReportClicked\" : false,\n                });\n                break;\n            case \"report\":\n                setIsTypClick({\n                    ...isTypeClick,\n                    \"isPhotoClicked\" : false,\n                    \"isReportClicked\" : true,\n                });\n                break;\n            default:\n                break;\n        }\n    }\n \n    const handleToggleButton = () => {\n        if(initData.items.length === 2 && isProgram.isDiabetic){\n            setIsProgram({\n                ...isProgram,\n                \"isEye\":true,\n                \"isDiabetic\":false,\n            })\n        } else {\n            if(initData.items.length === 1) {\n                if(initData.items[0].code === \"edp\") {\n                    setIsProgram({\n                        ...isProgram,\n                        \"isEye\":true,\n                        \"isDiabetic\":false,\n                    })\n                } else {\n                    setIsProgram({\n                        ...isProgram,\n                        \"isEye\":false,\n                        \"isDiabetic\":true,\n                    })\n                }\n            }\n        }\n        \n        if(initData.shot.od !== \"\" && initData.shot.os !== \"\"){\n            if(isSelected){\n                setIsSelected(false);\n            } else {\n                setIsSelected(true);\n            }\n        }\n    }\n\n    const handleProgramButton = (value) => {\n        switch (value) {\n            case \"edp\":\n                setIsProgram({\n                    ...isProgram,\n                    \"isEye\" : true,\n                    \"isDiabetic\" : false,\n                })\n                break;\n            case \"dr\":\n                setIsProgram({\n                    ...isProgram,\n                    \"isEye\" : false,\n                    \"isDiabetic\" : true,\n                })\n                break;\n            default:\n                break;\n        }\n    }\n \n    const handleChangeChecked = (i,j,code) => {\n        let tempList;\n        if(isProgram.isEye) {\n            if(isSelected) {\n                tempList = eyeOD[i].checked;\n                switch (code) {\n                    case \"retinal_abnormality\":\n                        if(eyeOD[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOD(\n                                eyeOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    \"checked\" : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 7) {\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        \"checked\" :[false,false,false,false,false,false,false,true]\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(7,1,false);\n                                tempList.splice(j,1,true);\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        \"checked\" : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }        \n                        break;\n                    case \"media_abnormality\":\n                        if(eyeOD[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOD(\n                                eyeOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 1) {\n                                tempList.splice(0,2,false,true)\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,2,true,false)\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }\n                        break;\n                    case \"optic_nerve_abnormality\":\n                        if(eyeOD[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOD(\n                                eyeOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 1) {\n                                tempList.splice(0,2,false,true)\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,2,true,false)\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }\n                    break;\n                    default:\n                        break;\n                }\n            } else {\n                tempList=eyeOS[i].checked\n                switch (code) {\n                    case \"retinal_abnormality\":\n                        if(eyeOS[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOS(\n                                eyeOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 7) {\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : [false,false,false,false,false,false,false,true]\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(7,1,false);\n                                tempList.splice(j,1,true);\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }   \n                        break;\n                    case \"media_abnormality\":\n                        if(eyeOS[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOS(\n                                eyeOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 1) {\n                                tempList.splice(0,2,false,true);\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : eyeOS[i].checked.splice(0,2,false,true)\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,2,true,false);\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : eyeOS[i].checked.splice(0,2,true,false)\n                                    } : {...value})\n                                )\n                            }\n                        }\n                        break;\n                    case \"optic_nerve_abnormality\":\n                        if(eyeOS[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOS(\n                                eyeOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 1) {\n                                tempList.splice(0,2,false,true)\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,2,true,false)\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        } else if(isProgram.isDiabetic){\n            if(isSelected) {\n                tempList=diabeticOD[i].checked\n                switch (code) {\n                    case \"diabetic_retinopathy\":\n                        if(diabeticOD[i].checked[j]) {\n                            tempList.splice(j,1,false)\n                            setDiabeticOD(\n                                diabeticOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            tempList.splice(0,5,false,false,false,false,false)\n                            //tempList = [false,false,false,false,false]\n                            tempList.splice(j,1,true)\n                            setDiabeticOD(\n                                diabeticOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    cchecked : tempList\n                                } : {...value})\n                            )\n                        }  \n                        break;\n                    case \"csme_suspicion\":\n                        if(diabeticOD[i].checked[j]) {\n                            tempList.splice(j,1,false)\n                            setDiabeticOD(\n                                diabeticOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            tempList.splice(j,1,true)\n                            setDiabeticOD(\n                                diabeticOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    cchecked : tempList\n                                } : {...value})\n                            )\n                        }    \n                        break;\n                    default:\n                        break;\n                }\n            } else {\n                tempList=diabeticOS[i].checked\n                switch (code) {\n                    case \"diabetic_retinopathy\":\n                        if(diabeticOS[i].checked[j]) {\n                            tempList.splice(j,1,false)\n                            setDiabeticOS(\n                                diabeticOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            tempList.splice(0,5,false,false,false,false,false)\n                            tempList.splice(j,1,true)\n                            setDiabeticOS(\n                                diabeticOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    cchecked : tempList\n                                } : {...value})\n                            )\n                        }    \n                        break;\n                    case \"csme_suspicion\":\n                        if(diabeticOS[i].checked[j]) {\n                            tempList.splice(j,1,false)\n                            setDiabeticOS(\n                                diabeticOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            tempList.splice(j,1,true)\n                            setDiabeticOS(\n                                diabeticOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    cchecked : tempList\n                                } : {...value})\n                            )\n                        }    \n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    const handleSendData = () => {\n        const edp = {\n            code: \"edp\",\n            name: \"Eye Disease Presence\",\n            parts : {\n                od: eyeOD,\n                os: eyeOS\n            },\n        }\n\n        const dr = {\n            code: \"dr\",\n            name: \"Diabetic Retinopathy\",\n            parts : {\n                od: diabeticOD,\n                os: diabeticOS\n            },\n        }\n        const body = {\n            status : status.isHold ? 50 : 100,\n            comment : comment,\n            programs : [edp,dr]\n        }\n        props.sendInterpretationData(localStorage.getItem(\"first_code\"),body,cookies.token.access_token,onSuccessful);\n        setCommnet(\"\");\n    }\n\n    const handleRetake = () => {\n        const body = {\n            status : 200\n        }\n        props.sendInterpretationData(localStorage.getItem(\"first_code\"),body,cookies.token.access_token,onSuccessful); \n        setCommnet(\"\");\n    }\n\n    const onSuccessful = (userID) => {\n        localStorage.setItem(\"first_code\",userID);\n        let url = \"/interpretation/\" + localStorage.getItem(\"first_code\");\n        history.replace(url);\n    }\n\n    const programData = (\n        <div className = \"check_list_div\">\n            {isProgram.isEye ?\n                isSelected ?\n                    eyeOD.map((program,i) => (   \n                        <div>                             \n                            <div key = {i} className = \"patient_info_content_span\">{program.name}</div>\n                                {program.vals.map((val,j) => (\n                            <div key={j} className = \"check_box_div\"><DarkCheckBox title = {val.name} checked = {program.checked[j]} onChange = {()=>handleChangeChecked(i,j,program.code)}/></div>))}  \n                        </div>)) : \n                    eyeOS.map((program,i) => (   \n                        <div>                             \n                            <div key = {i} className = \"patient_info_content_span\">{program.name}</div>\n                                {program.vals.map((val,j) => (\n                            <div key={j} className = \"check_box_div\"><DarkCheckBox title = {val.name} checked = {program.checked[j]} onChange = {()=>handleChangeChecked(i,j,program.code)}/></div>))}  \n                        </div>)) :\n                isSelected ?         \n                    diabeticOD.map((program,i) => (   \n                        <div>                             \n                            <div key = {i} className = \"patient_info_content_span\">{program.name}</div>\n                                {program.vals.map((val,j) => (\n                            <div key={j} className = \"check_box_div\"><DarkCheckBox title = {val.name} checked = {program.checked[j]} onChange = {()=>handleChangeChecked(i,j,program.code)}/></div>))}  \n                        </div>)) :  \n                    diabeticOS.map((program,i) => (   \n                        <div>                             \n                            <div key = {i} className = \"patient_info_content_span\">{program.name}</div>\n                                {program.vals.map((val,j) => (\n                            <div key ={j} className = \"check_box_div\"><DarkCheckBox title = {val.name} checked = {program.checked[j]} onChange = {()=>handleChangeChecked(i,j,program.code)}/></div>))}  \n                        </div>))       \n            }\n        </div>\n    )\n\n    const programList = (\n        <div className = \"inspect_list_div\">\n            <ToggleButton isRight = {isSelected} onClick = {handleToggleButton}/>\n            <div className = \"patient_info_title_span\">Program</div>    \n            {initData.items.map((item,i) => \n                <NormalDarkButton key={i} width = \"100%\" isActive = {item.code === \"edp\" ? isProgram.isEye : isProgram.isDiabetic} title = {item.name} onClick = {()=>handleProgramButton(item.code)}/>\n            )}\n            {programData}\n        </div>\n    )\n\n    const interpretationList = (\n        <div className = \"interpretation_list_div\">\n            <div>\n                <div className = \"inspect_header_div\">\n                    <div className = \"inspect_date_div\">\n                        <Lock onClick = {handleHoldImg} isHold = {status.isHold}/>\n                        <span className = \"inspect_date_span\">{initData.interpretationDate}</span>\n                    </div>\n                    <span className = \"inspect_date_span\">{\"Remaing list: \" + initData.remainCount}</span>\n                </div>\n                <div className = \"patient_info_div\">\n                    <div className = \"patient_info_title_span\">Patient Information</div>\n                    <div className = \"type_button_div\">\n                        <NormalDarkButton isActive = {isTypeClick.isPhotoClicked} title = \"Photo\" width = \"318px\" onClick = {()=>handleTypeButtonChange(\"photo\")}/>\n                        {/* <NormalDarkButton isActive = {isTypeClick.isReportClicked} title = \"Photo\" width = \"150px\" onClick = {()=>handleTypeButtonChange(\"report\")}/> */}\n                    </div>\n                    <div className = \"patient_info_content_span\">B/D : {initData.birthday}</div>\n                    <div className = \"patient_info_content_span\">Basal disease : {initData.basalDisease === null ? \"none\" : \n                        initData.basalDisease.map((title,k)=>(\n                            <span key={k}>{title+year}{initData.basalDisease.length-1 === k ? \"\" : \" / \"}</span>\n                        ))}</div>\n                    <div className = \"patient_info_content_span\">Race : {initData.race}</div>\n                </div>\n            </div>\n            {programList}\n            <div className = \"bottom_submit_div\">\n                <div className = \"comments_div\">\n                    <div className = \"patient_info_title_span\">Comments</div>\n                    <textarea className = \"comment_textarea\" placeholder=\"...entering\" rows=\"4\" value = {comment} onChange = {(e)=>handleComment(e)}></textarea>\n                </div>\n            </div>\n            <div className = \"sumbit_button_div\">\n                <div className = \"type_button_div\"> \n                    <NormalDarkButton isActive = {false} title = \"Retake\" width = \"150px\" onClick = {handleRetake}/>\n                    <CustomDarkButton title = {status.msg} width = \"150px\" onClick = {handleSendData}/>\n                </div>\n            </div>    \n        </div>\n    )\n\n    const interpretation_body = (\n        <div className = {'interpretation_body_QHD'}>\n            <div onClick = {()=>handleImgChange(\"od\")} className = {isSelected? 'interpretation_photo_click' : 'interpretation_photo'}>\n                {<ImageZoom src = {initData.shot.od === \"init\" ? \"\" : initData.shot.od === \"\" ? \"none\" : baseUrl + initData.shot.od} id = {initData._id}/>}\n            </div>\n            <div onClick = {()=>handleImgChange(\"os\")} className = {isSelected === false? 'interpretation_photo_click' : 'interpretation_photo'}>\n                {<ImageZoom src = {initData.shot.os === \"init\" ? \"\" : initData.shot.os === \"\" ? \"none\" : baseUrl + initData.shot.os} id = {initData._id}/>}\n            </div>\n            <div className = {'interpretation_list_QHD'}>        \n                {interpretationList}\n            </div>\n        </div>\n    )\n\n    const data_loading = (\n        <div className = \"loading_div\">\n            <div className = \"loading_content_div\">\n                <Loader/>\n                <span>loading...</span>\n            </div>    \n        </div>\n    ) \n\n    return(\n        <>\n        {props.isDataLoading ? data_loading : interpretation_body}\n        </>\n    )  \n}\n\nconst mapStateToProps = (state) => ({\n    isDataLoading: state.LoaderReducer.isDataLoading,\n    interpretationData: state.InterpretationDataReducer.interpretationData,\n})\n  \nconst mapDispatchToProps = {\n    getInterpretationData: actions.GetInterpretationData,\n    sendInterpretationData : actions.SendInterpretationData,\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Interpretation)\n"]},"metadata":{},"sourceType":"module"}