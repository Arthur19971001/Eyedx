{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useLayoutEffect } from 'react';\nexport const useDimensions = targetRef => {\n  _s();\n\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n  return dimensions;\n};\n\n_s(useDimensions, \"7TzlXQ4F6vVvj8NGWJnBXX67/m8=\");","map":{"version":3,"sources":["/Users/kimseongjae/source/eyeDX/src/common/sizeTgarget.js"],"names":["useEffect","useState","useLayoutEffect","useDimensions","targetRef","getDimensions","width","current","offsetWidth","height","offsetHeight","dimensions","setDimensions","handleResize","window","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,eAA9B,QAAqD,OAArD;AAEA,OAAO,MAAMC,aAAa,GAAIC,SAAD,IAAc;AAAA;;AACvC,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAO;AACLC,MAAAA,KAAK,EAAEF,SAAS,CAACG,OAAV,GAAoBH,SAAS,CAACG,OAAV,CAAkBC,WAAtC,GAAoD,CADtD;AAELC,MAAAA,MAAM,EAAEL,SAAS,CAACG,OAAV,GAAoBH,SAAS,CAACG,OAAV,CAAkBG,YAAtC,GAAqD;AAFxD,KAAP;AAID,GALD;;AAOA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAACI,aAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACzBD,IAAAA,aAAa,CAACP,aAAa,EAAd,CAAb;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AACA,WAAO,MAAMC,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAX,EAAAA,eAAe,CAAC,MAAM;AACpBW,IAAAA,YAAY;AACb,GAFc,EAEZ,EAFY,CAAf;AAGA,SAAOF,UAAP;AACH,CAvBM;;GAAMR,a","sourcesContent":["import { useEffect, useState, useLayoutEffect } from 'react';\n\nexport const useDimensions = (targetRef) =>{\n    const getDimensions = () => {\n      return {\n        width: targetRef.current ? targetRef.current.offsetWidth : 0,\n        height: targetRef.current ? targetRef.current.offsetHeight : 0\n      };\n    };\n  \n    const [dimensions, setDimensions] = useState(getDimensions);\n  \n    const handleResize = () => {\n      setDimensions(getDimensions());\n    };\n  \n    useEffect(() => {\n      window.addEventListener(\"resize\", handleResize);\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n  \n    useLayoutEffect(() => {\n      handleResize();\n    }, []);\n    return dimensions;\n}"]},"metadata":{},"sourceType":"module"}