{"ast":null,"code":"var _jsxFileName = \"/Users/kimseongjae/source/eyeDX/src/components/login_form/login_form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { connect } from 'react-redux';\nimport \"./login_form.css\";\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../images/logo_eyedx.svg\";\nimport { ReactComponent as Icon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../images/eye_line.svg\";\nimport { passwordValid, IDValid } from \"../../common/vaildate\";\nimport { useHistory } from 'react-router';\nimport { useCookies } from 'react-cookie';\nimport * as actions from '../../actions/login/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginModel = {\n  id: \"\",\n  password: \"\",\n  isRole: true,\n  isRember: true\n};\nconst errorModel = {\n  idError: \"\",\n  passwordError: \"\"\n};\nconst loginLangModel = {\n  error: {\n    blank_id: \"Please enter your ID.\",\n    blank_password: \"Please enter your Password.\",\n    invalid_interpretation_id: \"Not a valid interpretating ID. Please check your ID again.\",\n    invalid_operation_id: \"Not a valid operating ID. Please check your ID again.\",\n    not_match_format_id: \"ID does not match the standard. Please check your ID again.\",\n    not_match_format_password: \"Password does not match the standard. Please check your password again.\"\n  },\n  id: \"ID\",\n  interpretaton_id: \"Interpretation ID\",\n  login: \"Log in\",\n  password: \"Password\",\n  please_enter_your_id: \"Please Enter Your ID\",\n  please_enter_your_password: \"Please Enter Your Password\",\n  process_login: \"Log In\",\n  remember_account: \"Remember Account\"\n};\n\nconst LoginForm = props => {\n  _s();\n\n  const [errors, setErrors] = useState(errorModel);\n  const [formValue, setFormValue] = useState(loginModel);\n  const [isShowPassword, setIsShowPassowrd] = useState(false);\n  const [initLoginLang, setInitLoginLang] = useState(loginLangModel);\n  const [cookies, setCookie, removeCookie] = useCookies(['token']);\n  const [errorFromServer, setErrorFromServer] = useState(\"\");\n  const updateLoginLang = props.loginLang;\n  const history = useHistory();\n\n  const handleHoldStart = e => {\n    setIsShowPassowrd(true);\n  };\n\n  const handleHoldEnd = e => {\n    setIsShowPassowrd(false);\n  };\n\n  const handleIDChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormValue({ ...formValue,\n      \"id\": value\n    });\n  };\n\n  const handlePassowrdChange = e => {\n    const {\n      password,\n      value\n    } = e.target;\n    setFormValue({ ...formValue,\n      \"password\": value\n    });\n  };\n\n  const handleRoleChange = () => {\n    formValue.isRole ? setFormValue({ ...formValue,\n      \"isRole\": false\n    }) : setFormValue({ ...formValue,\n      \"isRole\": true\n    });\n  };\n\n  const handleRemberChange = () => {\n    if (formValue.isRember) {\n      setFormValue({ ...formValue,\n        \"isRember\": false\n      });\n    } else {\n      setFormValue({ ...formValue,\n        \"isRember\": true\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const login_req = {\n      id: formValue.id,\n      pwd: formValue.password,\n      level: formValue.isRole ? 100 : 0,\n      lang: localStorage.getItem(\"lang\")\n    };\n    console.log(login_req);\n    localStorage.setItem(\"userID\", formValue.id);\n    props.reqLogin(login_req, onSucessful, onFailure);\n  };\n\n  const onSucessful = token => {\n    setCookie('token', token);\n    history.push('/');\n  };\n\n  const onFailure = massage => {\n    setErrorFromServer(massage);\n  };\n\n  const vaildate = e => {\n    e.preventDefault();\n    let temp = errors;\n\n    if (IDValid(formValue.id) === \"empty\") {\n      temp.idError = initLoginLang.error.blank_id;\n    } else if (IDValid(formValue.id) === \"invalid\") {\n      temp.idError = initLoginLang.error.not_match_format_id;\n    } else if (IDValid(formValue.id) === \"valid\") {\n      temp.idError = undefined;\n    }\n\n    if (passwordValid(formValue.password) === \"empty\") {\n      temp.passwordError = initLoginLang.error.blank_password;\n    } else if (passwordValid(formValue.password) === \"invalid\") {\n      temp.passwordError = initLoginLang.error.not_match_format_password;\n    } else if (passwordValid(formValue.password) === \"valid\") {\n      temp.passwordError = undefined;\n    }\n\n    setErrors({ ...temp\n    });\n\n    if (temp.idError === undefined && temp.passwordError === undefined) {\n      handleSubmit(e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    // debugger;\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n  }, []);\n  useEffect(() => {\n    if (updateLoginLang !== undefined) {\n      if (Object.keys(updateLoginLang).length !== 0) {\n        setInitLoginLang(updateLoginLang);\n      }\n    }\n\n    if (errorFromServer !== '') {\n      alert(errorFromServer);\n    }\n  }, [errorFromServer, updateLoginLang]);\n\n  const LoginFormHeader = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'login_header_' + props.size,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'login_header_title_' + props.size,\n      children: initLoginLang.login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n\n  const LoginFromBody = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'login_body_' + props.size,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'login_body_content_' + props.size,\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        className: \"login_body_logo_\" + props.size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"login_form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'check_id_' + props.size,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: 'check_id_label_' + props.size,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formValue.isRole,\n              onChange: handleRoleChange,\n              className: 'check_id_checkbox_' + props.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: 'check_label_' + props.size,\n              children: initLoginLang.interpretaton_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'input_title_' + props.size,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'input_title_name_' + props.size,\n            children: [\" \", initLoginLang.id, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'input_title_error_' + props.size,\n            children: [\" \", errors.idError, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'input_email_wrap_' + props.size,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: handleIDChange,\n            label: \"id\",\n            placeholder: initLoginLang.please_enter_your_id,\n            className: 'input_' + props.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'input_title_' + props.size,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'input_title_name_' + props.size,\n            children: [\" \", initLoginLang.password, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'input_title_error_' + props.size,\n            children: [\" \", errors.passwordError, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'input_password_wrap_' + props.size,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: isShowPassword ? 'text' : 'password',\n            onChange: handlePassowrdChange,\n            label: \"password\",\n            placeholder: initLoginLang.please_enter_your_password,\n            className: 'input_' + props.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onMouseDown: handleHoldStart,\n            onMouseUp: handleHoldEnd,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: isShowPassword ? \"passowrd_icon_color_\" + props.size : \"passowrd_icon_\" + props.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 87\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'input_password_wrap_' + props.size,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: initLoginLang.process_login,\n            className: 'sumbit_btn_' + props.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'check_remember_' + props.size,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: 'check_id_label_' + props.size,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formValue.isRember,\n              onChange: handleRemberChange,\n              className: 'check_id_checkbox_' + props.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: 'check_label_' + props.size,\n              children: [\" \", initLoginLang.remember_account]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [LoginFormHeader, LoginFromBody]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"NnJt9Q3BaIjD7KBwShrFjveInZ8=\", false, function () {\n  return [useCookies, useHistory];\n});\n\n_c = LoginForm;\n\nconst mapStateToProps = state => ({\n  //loginLangs: state.LangReducer.loginLang,\n  loginRes: state.LoginReducer.loginRes\n});\n\nconst mapDispatchToProps = {\n  //getLoginLang: actions.GetLoginLang,\n  reqLogin: actions.RequestLogin\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/kimseongjae/source/eyeDX/src/components/login_form/login_form.js"],"names":["React","useState","useEffect","useLayoutEffect","connect","passwordValid","IDValid","useHistory","useCookies","actions","loginModel","id","password","isRole","isRember","errorModel","idError","passwordError","loginLangModel","error","blank_id","blank_password","invalid_interpretation_id","invalid_operation_id","not_match_format_id","not_match_format_password","interpretaton_id","login","please_enter_your_id","please_enter_your_password","process_login","remember_account","LoginForm","props","errors","setErrors","formValue","setFormValue","isShowPassword","setIsShowPassowrd","initLoginLang","setInitLoginLang","cookies","setCookie","removeCookie","errorFromServer","setErrorFromServer","updateLoginLang","loginLang","history","handleHoldStart","e","handleHoldEnd","handleIDChange","value","target","handlePassowrdChange","handleRoleChange","handleRemberChange","handleSubmit","preventDefault","login_req","pwd","level","lang","localStorage","getItem","console","log","setItem","reqLogin","onSucessful","onFailure","token","push","massage","vaildate","temp","undefined","window","location","hash","reload","Object","keys","length","alert","LoginFormHeader","size","LoginFromBody","mapStateToProps","state","loginRes","LoginReducer","mapDispatchToProps","RequestLogin"],"mappings":"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","sourcesContent":["import React, {useState,useEffect, useLayoutEffect} from 'react'\nimport { connect } from 'react-redux'\nimport \"./login_form.css\";\nimport {ReactComponent as Logo} from \"../../images/logo_eyedx.svg\";\nimport {ReactComponent as Icon} from \"../../images/eye_line.svg\";\nimport {passwordValid, IDValid} from \"../../common/vaildate\";\nimport { useHistory } from 'react-router';\nimport {useCookies} from 'react-cookie';\nimport * as actions from '../../actions/login/login';\n\nconst loginModel = {\n    id: \"\",\n    password: \"\",\n    isRole: true,\n    isRember: true,\n}\n\nconst errorModel = {\n    idError: \"\",\n    passwordError: \"\",\n}\n\nconst loginLangModel = {\n    error: {\n        blank_id: \"Please enter your ID.\",\n        blank_password: \"Please enter your Password.\",\n        invalid_interpretation_id: \"Not a valid interpretating ID. Please check your ID again.\",\n        invalid_operation_id: \"Not a valid operating ID. Please check your ID again.\",\n        not_match_format_id: \"ID does not match the standard. Please check your ID again.\",\n        not_match_format_password: \"Password does not match the standard. Please check your password again.\"\n    },\n    id: \"ID\",\n    interpretaton_id: \"Interpretation ID\",\n    login: \"Log in\",\n    password: \"Password\",\n    please_enter_your_id: \"Please Enter Your ID\",\n    please_enter_your_password: \"Please Enter Your Password\",\n    process_login: \"Log In\",\n    remember_account: \"Remember Account\"\n}\n\nconst LoginForm = (props) => {\n    const [errors, setErrors] = useState(errorModel);\n    const [formValue, setFormValue] = useState(loginModel);\n    const [isShowPassword, setIsShowPassowrd] = useState(false);\n    const [initLoginLang, setInitLoginLang] = useState(loginLangModel);\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n    const [errorFromServer, setErrorFromServer] = useState(\"\");\n\n    const updateLoginLang = props.loginLang;\n\n    const history = useHistory();\n\n    const handleHoldStart = (e) =>{\n        setIsShowPassowrd(true);\n    }\n\n    const handleHoldEnd = (e) => {\n        setIsShowPassowrd(false);\n    }\n\n    const handleIDChange = e => {\n        const {id, value} = e.target;\n        setFormValue({\n            ...formValue,\n            \"id\":value\n        })\n    }\n\n    const handlePassowrdChange = e => {\n        const {password, value} = e.target;\n        setFormValue({\n            ...formValue,\n            \"password\":value\n        })\n    }\n\n    const handleRoleChange = () => {\n        formValue.isRole ? setFormValue({\n            ...formValue,\n            \"isRole\":false,\n        }) : setFormValue({\n            ...formValue,\n            \"isRole\":true,\n        })\n    }\n\n    const handleRemberChange = () => {\n        if(formValue.isRember){\n            setFormValue({\n            ...formValue,\n            \"isRember\":false,});\n        } else {\n             setFormValue({\n            ...formValue,\n            \"isRember\":true});\n        }\n       \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const login_req = {\n            id: formValue.id,\n            pwd: formValue.password,\n            level: formValue.isRole ? 100 : 0,\n            lang: localStorage.getItem(\"lang\"),\n        }\n        console.log(login_req);\n        localStorage.setItem(\"userID\",formValue.id);\n        props.reqLogin(login_req, onSucessful, onFailure);\n    }\n\n    const onSucessful = (token) => {\n        setCookie('token',token);\n        history.push('/');\n    }\n\n    const onFailure = (massage) => {\n        setErrorFromServer(massage);\n    }\n\n    const vaildate = (e) => {\n        e.preventDefault();\n        let temp = errors;\n        if(IDValid(formValue.id) === \"empty\"){\n            temp.idError = initLoginLang.error.blank_id;\n        } else if(IDValid(formValue.id) === \"invalid\"){\n            temp.idError = initLoginLang.error.not_match_format_id;\n        } else if(IDValid(formValue.id) === \"valid\") {\n            temp.idError = undefined;\n        }\n        if(passwordValid(formValue.password) === \"empty\") {\n            temp.passwordError = initLoginLang.error.blank_password;\n        } else if(passwordValid(formValue.password) === \"invalid\"){\n            temp.passwordError = initLoginLang.error.not_match_format_password;\n        } else if(passwordValid(formValue.password) === \"valid\"){\n            temp.passwordError = undefined;\n        }\n        setErrors({\n            ...temp,\n        })\n\n        if(temp.idError === undefined && temp.passwordError === undefined){\n            handleSubmit(e);\n        }\n    }\n\n    useLayoutEffect(()=>{\n        // debugger;\n        if(!window.location.hash){\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        } \n    },[])\n\n    useEffect(() => {\n        if(updateLoginLang !== undefined){\n            if(Object.keys(updateLoginLang).length !== 0){\n                setInitLoginLang(updateLoginLang);\n            }\n        }\n        if(errorFromServer !== ''){\n            alert(errorFromServer);\n        }\n    },[errorFromServer,updateLoginLang])\n\n    const LoginFormHeader = (\n        <div className = {'login_header_'+props.size}>\n            <div className = {'login_header_title_'+props.size}>\n                {initLoginLang.login}\n            </div>\n        </div>\n    )\n\n    const LoginFromBody = (\n        <div className = {'login_body_'+props.size}>\n            <div className = {'login_body_content_'+props.size}>\n                <Logo className = {\"login_body_logo_\"+props.size}/>\n                <form name = 'login_form' onSubmit = {handleSubmit}>\n                    <div className = {'check_id_'+props.size}>\n                        <label className = {'check_id_label_'+props.size}>\n                        <input type = 'checkbox' checked={formValue.isRole} onChange={handleRoleChange} className = {'check_id_checkbox_'+props.size}></input>\n                            <span className = {'check_label_'+props.size}>{initLoginLang.interpretaton_id}</span>\n                        </label>\n                    </div>\n                    <div className = {'input_title_'+props.size}>\n                        <span className = {'input_title_name_'+props.size}> {initLoginLang.id} </span>\n                        <span className = {'input_title_error_'+props.size}> {errors.idError} </span>\n                    </div>\n                    <div className = {'input_email_wrap_'+props.size}>\n                    <input type = 'text' onChange={handleIDChange} label='id' placeholder={initLoginLang.please_enter_your_id} className = {'input_'+props.size}></input>\n                    </div>\n                    <div className = {'input_title_'+props.size}>\n                        <span className = {'input_title_name_'+props.size}> {initLoginLang.password} </span>\n                        <span className = {'input_title_error_'+props.size}> {errors.passwordError} </span>\n                    </div>\n                    <div className = {'input_password_wrap_'+props.size}>\n                    <input type = {isShowPassword ? 'text' : 'password'} onChange={handlePassowrdChange} label='password' placeholder={initLoginLang.please_enter_your_password} className = {'input_'+props.size}></input>\n                        <div onMouseDown={handleHoldStart} onMouseUp={handleHoldEnd} ><Icon className = {isShowPassword ? \"passowrd_icon_color_\"+props.size : \"passowrd_icon_\"+props.size}/></div>\n                    </div>\n                    <div className = {'input_password_wrap_'+props.size}>\n                    <input type = \"submit\" value={initLoginLang.process_login} className = {'sumbit_btn_'+props.size}></input>\n                    </div>\n                    <div className = {'check_remember_'+props.size}>\n                        <label className = {'check_id_label_'+props.size}>\n                        <input type = 'checkbox' checked={formValue.isRember} onChange={handleRemberChange} className = {'check_id_checkbox_'+props.size}></input>\n                            <span className = {'check_label_'+props.size}> {initLoginLang.remember_account}</span>\n                        </label>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n\n    return (\n        <div>\n            {LoginFormHeader}\n            {LoginFromBody}\n        </div>\n    )    \n}\n\nconst mapStateToProps = (state) => ({\n    //loginLangs: state.LangReducer.loginLang,\n    loginRes: state.LoginReducer.loginRes,\n})\n  \nconst mapDispatchToProps = {\n    //getLoginLang: actions.GetLoginLang,\n    reqLogin: actions.RequestLogin,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n"]},"metadata":{},"sourceType":"module"}