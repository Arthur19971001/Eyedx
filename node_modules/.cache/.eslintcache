[{"/Users/kimseongjae/source/eyeDX/src/index.js":"1","/Users/kimseongjae/source/eyeDX/src/App.js":"2","/Users/kimseongjae/source/eyeDX/src/common/LangCode.js":"3","/Users/kimseongjae/source/eyeDX/src/common/private_route.js":"4","/Users/kimseongjae/source/eyeDX/src/pages/login/login.js":"5","/Users/kimseongjae/source/eyeDX/src/pages/resolution_error/resolution.js":"6","/Users/kimseongjae/source/eyeDX/src/pages/home/home.js":"7","/Users/kimseongjae/source/eyeDX/src/common/MediaQuery.tsx":"8","/Users/kimseongjae/source/eyeDX/src/common/theme.js":"9","/Users/kimseongjae/source/eyeDX/src/reducers/index.js":"10","/Users/kimseongjae/source/eyeDX/src/pages/home/waiting/waiting.js":"11","/Users/kimseongjae/source/eyeDX/src/pages/home/interpretation/interpretation.js":"12","/Users/kimseongjae/source/eyeDX/src/components/header/header.js":"13","/Users/kimseongjae/source/eyeDX/src/components/login_form/login_form.js":"14","/Users/kimseongjae/source/eyeDX/src/actions/waiting/waiting_data.js":"15","/Users/kimseongjae/source/eyeDX/src/actions/langauge/login_lang.js":"16","/Users/kimseongjae/source/eyeDX/src/actions/langauge/waiting_list_lang.js":"17","/Users/kimseongjae/source/eyeDX/src/components/parts/modal/modal.js":"18","/Users/kimseongjae/source/eyeDX/src/reducers/lang_reducers.js":"19","/Users/kimseongjae/source/eyeDX/src/reducers/login_reducer.js":"20","/Users/kimseongjae/source/eyeDX/src/reducers/interpretation_data_reducer.js":"21","/Users/kimseongjae/source/eyeDX/src/reducers/header_color_reducer.js":"22","/Users/kimseongjae/source/eyeDX/src/reducers/loader_reducer.js":"23","/Users/kimseongjae/source/eyeDX/src/reducers/waiting_data_reducer.js":"24","/Users/kimseongjae/source/eyeDX/src/actions/api.js":"25","/Users/kimseongjae/source/eyeDX/src/pages/home/interpretation/initModel.js":"26","/Users/kimseongjae/source/eyeDX/src/actions/actionType.js":"27","/Users/kimseongjae/source/eyeDX/src/common/vaildate.js":"28","/Users/kimseongjae/source/eyeDX/src/components/parts/input_range/input_range.js":"29","/Users/kimseongjae/source/eyeDX/src/components/parts/check_box/check_box.js":"30","/Users/kimseongjae/source/eyeDX/src/components/parts/button/button.js":"31","/Users/kimseongjae/source/eyeDX/src/components/parts/pager/pager.js":"32","/Users/kimseongjae/source/eyeDX/src/components/parts/table/table.js":"33","/Users/kimseongjae/source/eyeDX/src/components/parts/selector/selector.js":"34","/Users/kimseongjae/source/eyeDX/src/components/loader/loader.js":"35","/Users/kimseongjae/source/eyeDX/src/actions/interpretation/interpretation_data.js":"36","/Users/kimseongjae/source/eyeDX/src/components/image_zoom/image_zoom.js":"37","/Users/kimseongjae/source/eyeDX/src/components/parts/lock/lock.js":"38","/Users/kimseongjae/source/eyeDX/src/actions/login/login.js":"39","/Users/kimseongjae/source/eyeDX/src/common/sizeTgarget.js":"40","/Users/kimseongjae/source/eyeDX/src/components/parts/label/label.js":"41","/Users/kimseongjae/source/eyeDX/src/components/slider/slider.js":"42"},{"size":336,"mtime":1626695722473,"results":"43","hashOfConfig":"44"},{"size":1494,"mtime":1627605959066,"results":"45","hashOfConfig":"44"},{"size":274,"mtime":1626057356534,"results":"46","hashOfConfig":"44"},{"size":685,"mtime":1630291227190,"results":"47","hashOfConfig":"44"},{"size":1214,"mtime":1627539223257,"results":"48","hashOfConfig":"44"},{"size":607,"mtime":1627606414647,"results":"49","hashOfConfig":"44"},{"size":4320,"mtime":1631760365349,"results":"50","hashOfConfig":"44"},{"size":589,"mtime":1627363322292,"results":"51","hashOfConfig":"44"},{"size":487,"mtime":1626829233702,"results":"52","hashOfConfig":"44"},{"size":558,"mtime":1626778539520,"results":"53","hashOfConfig":"44"},{"size":22133,"mtime":1631249591162,"results":"54","hashOfConfig":"44"},{"size":50772,"mtime":1633227627266,"results":"55","hashOfConfig":"44"},{"size":3149,"mtime":1630293151191,"results":"56","hashOfConfig":"44"},{"size":8634,"mtime":1631856812639,"results":"57","hashOfConfig":"44"},{"size":990,"mtime":1627441025238,"results":"58","hashOfConfig":"44"},{"size":625,"mtime":1633505278359,"results":"59","hashOfConfig":"44"},{"size":472,"mtime":1626146078902,"results":"60","hashOfConfig":"44"},{"size":463,"mtime":1630028768911,"results":"61","hashOfConfig":"44"},{"size":501,"mtime":1624324467719,"results":"62","hashOfConfig":"44"},{"size":363,"mtime":1625805388827,"results":"63","hashOfConfig":"44"},{"size":680,"mtime":1631763561562,"results":"64","hashOfConfig":"44"},{"size":388,"mtime":1626778539520,"results":"65","hashOfConfig":"44"},{"size":352,"mtime":1625805388819,"results":"66","hashOfConfig":"44"},{"size":382,"mtime":1625460966064,"results":"67","hashOfConfig":"44"},{"size":395,"mtime":1631840886391,"results":"68","hashOfConfig":"44"},{"size":21309,"mtime":1633227058771,"results":"69","hashOfConfig":"44"},{"size":452,"mtime":1631763562565,"results":"70","hashOfConfig":"44"},{"size":785,"mtime":1633061013352,"results":"71","hashOfConfig":"44"},{"size":2773,"mtime":1631840412336,"results":"72","hashOfConfig":"44"},{"size":918,"mtime":1633061013353,"results":"73","hashOfConfig":"44"},{"size":2531,"mtime":1627608758017,"results":"74","hashOfConfig":"44"},{"size":4893,"mtime":1627280144970,"results":"75","hashOfConfig":"44"},{"size":5169,"mtime":1631252688724,"results":"76","hashOfConfig":"44"},{"size":1007,"mtime":1625451302054,"results":"77","hashOfConfig":"44"},{"size":486,"mtime":1627888483702,"results":"78","hashOfConfig":"44"},{"size":2284,"mtime":1631840920266,"results":"79","hashOfConfig":"44"},{"size":9327,"mtime":1627890359331,"results":"80","hashOfConfig":"44"},{"size":372,"mtime":1627380792956,"results":"81","hashOfConfig":"44"},{"size":709,"mtime":1627432970219,"results":"82","hashOfConfig":"44"},{"size":715,"mtime":1620697378610,"results":"83","hashOfConfig":"44"},{"size":786,"mtime":1633227252297,"results":"84","hashOfConfig":"44"},{"size":667,"mtime":1623118679185,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"13pfuns",{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kimseongjae/source/eyeDX/src/index.js",[],["192","193"],"/Users/kimseongjae/source/eyeDX/src/App.js",["194","195","196"],"import React, {useLayoutEffect,} from 'react';\nimport ResponsLogin from \"./pages/login/login\";\nimport ResponsHome from \"./pages/home/home\";\nimport { createStore, applyMiddleware} from 'redux';\nimport { Provider } from \"react-redux\";\nimport { reducers } from \"./reducers\";\nimport thunk from 'redux-thunk';\nimport {BrowserRouter as Router,Switch,Route,Link, Redirect,useRouteMatch} from \"react-router-dom\";\nimport { withCookies } from 'react-cookie';\nimport PrivateRoute from './common/private_route';\nimport {LangCode} from './common/LangCode'\nimport {QHD,FHD,HD} from \"./common/MediaQuery\";\nimport {ResolutionError} from './pages/resolution_error/resolution';\n\nconst store = createStore(\n  reducers, applyMiddleware(thunk)\n)\n\nconst App =(props)=> {\n\n  const size = props.size;\n  return (\n    <Provider store={store}>\n        <Router>\n          <Switch>\n            <PrivateRoute exact path = \"/\" component = {ResponsHome}/>\n            <Route path = \"/login\"><ResponsLogin size = {size}/></Route>\n            <Route path = \"/\"><ResponsHome size = {size}/></Route>\n          </Switch>\n        </Router>\n    </Provider>\n  )\n}\n\nconst ResponsApp = () => {\n\n  useLayoutEffect(()=>{\n    localStorage.setItem(\"lang\",LangCode(navigator.language || navigator.userLanguage));\n  },[])\n\n  return (\n    <>\n    <QHD>\n      <App size = \"QHD\"></App>\n    </QHD>\n    <FHD>\n      <App size = \"FHD\"></App>\n    </FHD>\n    <HD>\n      <ResolutionError/>\n    </HD>\n  </>\n  )\n}\n\nexport default withCookies(ResponsApp);\n","/Users/kimseongjae/source/eyeDX/src/common/LangCode.js",["197","198"],"import React, { useState } from 'react'\n\nexport const LangCode = (lang) => {\n    var userLang = lang;\n    //= navigator.language || navigator.userLang;\n  \n    if(userLang === \"ko-KR\" || userLang === \"ko\"){\n        return \"kr\"   \n    } else {\n        return \"en\"\n    }\n}\n  \n\n","/Users/kimseongjae/source/eyeDX/src/common/private_route.js",["199","200"],"import React,{useLayoutEffect,useState} from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\n\nconst PrivateRoute = ({component: Component,...rest}) => {\n    const [cookies] = useCookies(['token']);\n\n    return (\n        <Route\n            {...rest}\n            render = {props => \n                cookies.token === undefined ?( \n                    <Redirect to={{\n                        pathname: '/login', \n                        state: {from: props.location}\n                    }}\n                />\n            ): (\n                <Redirect to= \"/waiting\"/>\n            )}\n        />\n    )\n}\n\nexport default PrivateRoute;","/Users/kimseongjae/source/eyeDX/src/pages/login/login.js",["201","202","203","204","205"],"import React, {useLayoutEffect} from 'react';\nimport {ReactComponent as Logo} from \"../../images/logo_eyedx.svg\";\nimport {QHD,FHD,HD} from \"../../common/MediaQuery\";\nimport \"./login.css\";\nimport LoginForm from '../../components/login_form/login_form';\nimport {LangCode} from '../../common/LangCode';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/langauge/login_lang'\n\nconst LoginView = (props) => {\n\n  const size = props.size;\n\n  return(\n    <div className = {'login_view_header'}>\n      <div className = {'login_view_logo_div'}>\n        <Logo className = {\"login_view_logo\"}/>\n      </div>\n      <div className = 'login_view_position'>\n        <LoginForm size = {size} loginLang = {props.loginLang}/>\n      </div>\n    </div>\n  );\n}\n\nconst ResponsLogin = (props) => {\n  \n  const size = props.size;\n\n  useLayoutEffect(() => {\n    props.getLoginLang({lang:window.localStorage.getItem(\"lang\")});\n  }, [])\n\n  return (\n    <LoginView size = {size}/>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loginLangs: state.LangReducer.loginLang\n})\n\nconst mapDispatchToProps = {\n  getLoginLang: actions.GetLoginLang,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsLogin);","/Users/kimseongjae/source/eyeDX/src/pages/resolution_error/resolution.js",[],"/Users/kimseongjae/source/eyeDX/src/pages/home/home.js",["206","207","208","209","210","211","212","213","214","215","216","217","218"],"import React, {createContext,useState,useLayoutEffect, useEffect} from 'react';\nimport {BrowserRouter as Router,Switch,Route, Redirect, useRouteMatch, useParams} from \"react-router-dom\";\nimport Interpretation from './interpretation/interpretation';\nimport Waiting from './waiting/waiting';\nimport {QHD,FHD,HD} from \"../../common/MediaQuery\";\nimport Themes from \"../../common/theme\";\nimport Header from \"../../components/header/header\";\nimport * as actions from \"../../actions/langauge/waiting_list_lang\";\nimport * as fetch from \"../../actions/waiting/waiting_data\";\nimport { connect } from 'react-redux'\nimport PrivateRoute from '../../common/private_route'\nimport ResponsLogin from \"../login/login\";\nimport Modal from \"../../components/parts/modal/modal\"\nimport { useHistory,useLocation } from 'react-router';\nimport {useCookies} from 'react-cookie';\n\n// const ThemeContext = createContext(Themes.dark);\n\nconst HomeView = (props) =>{\n\n  const [isShowModal, setIsShowModal] = useState(false);\n  const [cookies,setCookie,removeCookie] = useCookies(['token']);\n  const size = props.size;\n\n  let sub_url = props.subUrl;\n  let interpretationUrl = \"/interpretation/\"+sub_url;\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const onClickId = () => {\n    if(isShowModal){\n      setIsShowModal(false);\n    } else {\n      setIsShowModal(true);\n    }\n  }\n\n  const Logout = () => {\n    removeCookie('token');\n    history.push(\"/\");\n  }\n\n  const onClickClose = () => {\n    if(isShowModal){\n      setIsShowModal(false);\n    }\n  }\n\n  return (\n    <div onClick = {()=>onClickClose()}>\n    <Router>\n        <Header size = {size} tab = {props.tab} firstCode = {localStorage.getItem(\"first_code\")} onClickId={()=>onClickId()}/>\n          <Switch>\n          <Route exact path = \"/\">\n              <PrivateRoute/>\n          </Route>\n          <Route path = \"/waiting\">\n            <Waiting listLang = {props.listLang} filterLang = {props.filterLang} filterValueLang = {props.filterValueLang} size = {size}/>\n            <div style = {{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              position: 'fixed',\n              right: '10px',\n              top:'50px',\n            }}>\n              <Modal visibility = {isShowModal ? \"visible\" : \"hidden\"} list = {<p onClick = {()=>Logout()} style = {{color:'black' , cursor : 'pointer'}}>Log out</p>} right = {\"10px\"} width = {'163px'} top = {'-10px'} padding = {'0px 5px'}/>\n            </div>\n          </Route>\n          <Route exact path = \"/interpretation\">\n              {sub_url !== \"\" ? <Redirect to = {interpretationUrl}/> : <Redirect to = \"waiting\"/>}\n          </Route>\n          <Route path = \"/interpretation/:userId\">\n            <Interpretation/>\n            <div style = {{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              position: 'fixed',\n              right: '10px',\n              top:'50px',\n            }}>\n              <Modal visibility = {isShowModal ? \"visible\" : \"hidden\"} list = {<p onClick = {()=>Logout()} style = {{color:'black', cursor : 'pointer'}}>Log out</p>} right = {\"10px\"} width = {'163px'} top = {'-10px'} padding = {'0px 5px'}/>\n            </div>\n          </Route>\n          <Route path = \"/login\" component = {ResponsLogin}/>\n        </Switch>\n    </Router>\n    </div>\n  );\n}\n\nconst ResponsHome = (props) => {\n\n  const size = props.size\n\n  const [firstCode, setfirstCode] = useState(\"\");\n\n  useLayoutEffect(() => {\n    const filterValue = JSON.parse(localStorage.getItem(\"filter-value\"));\n    props.getWaitingLang({lang:filterValue !== null ? filterValue.lang : localStorage.getItem(\"lang\")});\n    if(!props.isDataLoading){\n      setfirstCode(localStorage.getItem(\"first_code\"));\n    }\n  },[props.isDataLoading])\n\n  return (\n    <HomeView size = {size} subUrl = {firstCode} tab = {props.waitingListLang.tab} listLang = {props.waitingListLang.list} filterLang = {props.waitingListLang.filter} filterValueLang = {props.waitingListLang.filter_value}/>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  waitingListLang: state.LangReducer.waitingListLang,\n  isDataLoading : state.LoaderReducer.isDataLoading,\n})\n\nconst mapDispatchToProps = {\n  getWaitingLang: actions.GetWaitingListLang,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResponsHome)\n","/Users/kimseongjae/source/eyeDX/src/common/MediaQuery.tsx",[],["219","220"],"/Users/kimseongjae/source/eyeDX/src/common/theme.js",[],"/Users/kimseongjae/source/eyeDX/src/reducers/index.js",[],"/Users/kimseongjae/source/eyeDX/src/pages/home/waiting/waiting.js",["221","222","223","224","225","226","227"],"import React, { useState, useEffect, useLayoutEffect } from 'react'\nimport {NormalButton} from '../../../components/parts/button/button';\nimport {CheckBox} from '../../../components/parts/check_box/check_box';\nimport Pager from '../../../components/parts/pager/pager';\nimport Selector from '../../../components/parts/selector/selector';\nimport DataTable from '../../../components/parts/table/table';\nimport { connect } from 'react-redux'\nimport {CustomInputRange, CustomInputSlider} from '../../../components/parts/input_range/input_range';\nimport { useHistory,useLocation } from 'react-router';\nimport * as actions from '../../../actions/waiting/waiting_data';\nimport {BlueLoader} from '../../../components/loader/loader';\nimport {useCookies} from 'react-cookie';\nimport queryString from 'query-string';\nimport \"./waiting.css\";\n\nconst FilterLangModel = {\n    age: \"Age\",\n    basal_disease: \"Basal Disease\",\n    filter: \"Filter\",\n    hold: \"Hold\",\n    interpretation: \"Interpretation\",\n    period: \"Period\",\n    program: \"Program\",\n    save: \"Save the Filter\",\n    waiting: \"Waiting\"\n}\n\nconst FilterValueLangModel = {\n    basal_disease: {\n        di: \"Diabetes\",\n        hbp: \"High Blood Pressure\",\n        n: \"None\"\n    },\n    gender: {\n        f: \"F\",\n        m: \"M\"\n    },\n    program: {\n        dr: \"Diabetic Retinopathy\",\n        edp: \"Eye Disease Presence\"\n    },\n    race: {\n        asian: \"Asian\",\n        ratin: \"Ratin\"\n    },\n    status: {\n        0: \"Waiting\",\n        50: \"Hold\"\n    }\n}\n\nconst FilterModel = {\n    ageValue: [0,100],\n    periodValue : 12,\n    waitingValue : true,\n    holdValue : true,\n}\n\nconst basalDiseaseModel = {\n    n : true,\n    hbp : true,\n    di : true,\n}\n\nconst programModel = {\n    dr : true,\n    edp : true, \n}\n\nconst FilterReqModel = {\n    lang: localStorage.getItem(\"lang\"),\n    pr: \"p1,p2\",\n    bd: \"n,d1,h1\",\n    age: \"0,100\",\n    pe: 12,\n    ns: \"w,h\",\n    pn: 1,\n}\n\nconst Waiting = (props) => {\n    const [filterValue, setFilterValue] = useState(FilterModel);\n    const [basalDiseaseValue, setBasalDiseaseValue] = useState(basalDiseaseModel);\n    const [programValue, setProgramValue] = useState(programModel);\n    const [initFilterLang,setInitFilterLang] = useState(FilterLangModel);\n    const [initFilterValueLang, setInitFilterValueLang] = useState(FilterValueLangModel);\n    const [filterReq, setFilterReq] = useState(FilterReqModel);\n    const [cookies,setCookie,removeCookie] = useCookies(['token']);\n    const [isFilterDisable, setIsFilterDisable] = useState(true);\n    const [isDataEmpty, setIsDataEmpty] = useState(true);\n\n    const [didMount, setDidMount] = useState(false);\n    \n    const size = props.size;\n    const updateFilterLang = props.filterLang;\n    const updateListLang = props.listLang;\n    const updateFilterValueLang = props.filterValueLang;\n\n    const history = useHistory();\n    const location = useLocation();\n\n    useLayoutEffect(() => {\n        const queryObj = queryString.parse(location.search);\n        if(cookies.token === undefined){ \n            history.push(\"/\"); /// 로그인 유저가 아닐때\n        } else {\n            const queryJson = JSON.parse(localStorage.getItem(\"filter-value\"));\n            const queryStr = queryString.stringify(queryJson === undefined ? filterReq : queryJson,{arrayFormat: 'comma', encode: false});\n            if(location.search === \"\") { /// \"/waiting\" 으로 접속했을때\n                history.replace({ \n                    pathname : \"/waiting\",\n                    search: `?${queryStr}` /// waiting 화면으로 다시 query 와 함께 보내기\n                })\n            } else { /// \"/waiting?{query} 로 접속했을 때\"\n                if(Object.keys(queryObj).length === 7){ /// query filter 가 다 채워졌을 경우\n                    setDidMount(true);\n                    props.getWaitingData(queryObj,cookies.token.access_token);\n                    setFilterReq(queryObj);\n                } else { /// query filter 가 채워지지 않을 경우\n                    const filter_data = {\n                        lang: queryObj.lang !== undefined ? queryObj.lang : localStorage.getItem(\"lang\"),\n                        pr: queryObj.pr !== undefined ? queryObj.pr : \"p1,p2\",\n                        bd: queryObj.bd !== undefined ? queryObj.bd : \"n,d1,h1\",\n                        age: queryObj.age !== undefined ? queryObj.age : \"0,100\",\n                        pe: queryObj.pe !== undefined ? parseInt(queryObj.pe,10): 12,\n                        ns: queryObj.ns !== undefined ? queryObj.ns : \"w,h\",\n                        pn: queryObj.pn !== undefined ? parseInt(queryObj.pn,10) : 1,\n                    };\n                    setFilterReq(filter_data);\n                    props.getWaitingData(filter_data,cookies.token.access_token);\n                }\n            }  \n\n            if(localStorage.getItem(\"error_value\") === \"true\") { /// error 메세지 산출\n                alert(localStorage.getItem(\"error_data\"));\n                localStorage.removeItem(\"error_value\"); /// alert 후 지우기\n                localStorage.removeItem(\"error_data\"); /// alert 후 지우기\n            }\n        }\n\n        return () => setDidMount(false);\n    },[location.search])\n\n    useEffect(() => {\n        if(updateFilterLang !== undefined && Object.keys(updateFilterLang).length !== 0){\n            setInitFilterLang(updateFilterLang);\n        }\n\n        if(updateFilterValueLang !== undefined && Object.keys(updateFilterValueLang).length !== 0) {\n            setInitFilterValueLang(updateFilterValueLang);\n        }\n\n        if(!props.isDataLoading && props.waitingData !== undefined && Object.keys(props.waitingData).length !== 0){\n            if(props.waitingData.List === null){\n                setIsDataEmpty(true);\n            } else {\n                setIsDataEmpty(false);\n            }\n        }\n\n        setBasalDiseaseValue({\n            ...basalDiseaseValue,\n            \"n\" : filterReq.bd.includes(\"n\") ? true : false,\n            \"hbp\" : filterReq.bd.includes(\"h1\") ? true : false,\n            \"di\" : filterReq.bd.includes(\"d1\") ? true : false,\n        });\n        setProgramValue({\n            ...programValue,\n            \"dr\" : filterReq.pr.includes(\"p2\") ? true : false,\n            \"edp\" : filterReq.pr.includes(\"p1\") ? true : false,\n        });\n        setFilterValue({\n            ...filterValue,\n            \"ageValue\" : filterReq.age.split(',').map(Number),\n            \"periodValue\" : filterReq.pe,\n            \"waitingValue\" : filterReq.ns.includes('w') ? true : false,\n            \"holdValue\" : filterReq.ns.includes('h') ? true : false\n        });\n\n    },[updateFilterLang, updateFilterValueLang,filterReq,props.isDataLoading])\n\n    const handleFilter = (e) => {\n        e.preventDefault();\n        const filter_data = {\n            lang: localStorage.getItem(\"lang\"),\n            pr: programValue.dr && programValue.edp ? \"p1,p2\" : programValue.dr ? \"p2\" : programValue.edp ? \"p1\" : undefined,\n            bd: basalDiseaseValue.n && basalDiseaseValue.hbp && basalDiseaseValue.di ? \"n,d1,h1\" : \n                basalDiseaseValue.n && basalDiseaseValue.hbp ? \"n,h1\" :\n                basalDiseaseValue.n && basalDiseaseValue.di ? \"n,d1\" :\n                basalDiseaseValue.hbp && basalDiseaseValue.di ? \"d1,h1\" :\n                basalDiseaseValue.n ? \"n\" :\n                basalDiseaseValue.hbp ? \"h1\" : \n                basalDiseaseValue.di ? \"d1\" : \n                undefined,\n            age: `${filterValue.ageValue[0]},${filterValue.ageValue[1]}`,\n            pe: filterValue.periodValue,\n            ns: filterValue.waitingValue && filterValue.holdValue ? \"w,h\" : filterValue.waitingValue ? \"w\" : filterValue.holdValue ? \"h\" : undefined,\n            pn: props.waitingData.Pagination.startPage,\n        }\n        setFilterReq(filter_data);\n        setIsFilterDisable(true);\n        history.push({\n            pathname : \"/waiting\",\n            search: `?${queryString.stringify(filter_data,{arrayFormat: 'comma', encode: false})}`\n        })\n    }\n\n    const handlePagination = (e,type) => {\n        e.preventDefault();\n        let pn;\n        switch(type) {\n            case \"preBlock\" :\n                pn = props.waitingData.Pagination.prevBlock === -1 ? props.waitingData.Pagination.startPage : props.waitingData.Pagination.prevBlock;\n                break;\n            case \"prePage\" :\n                pn = props.waitingData.Pagination.prevPage === -1 ? props.waitingData.Pagination.startPage : props.waitingData.Pagination.prevPage;\n                break;   \n            case \"nextPage\":\n                pn = props.waitingData.Pagination.nextPage === -1 ? props.waitingData.Pagination.endPage : props.waitingData.Pagination.nextPage;\n                break;\n            case \"nextBlock\":\n                pn = props.waitingData.Pagination.nextBlock === -1 ? props.waitingData.Pagination.endPage : props.waitingData.Pagination.nextBlock;\n                break;\n            default :\n                break;            \n        }\n        const filter_data = {\n            lang: filterReq.lang,\n            pr: filterReq.pr,\n            bd: filterReq.bd,\n            age: filterReq.age,\n            pe: filterReq.pe,\n            ns: filterReq.ns,\n            pn: pn,\n        }\n        history.push({\n            pathname : \"/waiting\",\n            search: `?${queryString.stringify(filter_data,{arrayFormat: 'comma', encode: false})}`\n        })     \n    }\n\n    const handleButtonEvent = (e,i) => {\n        e.preventDefault();\n        let pn;\n        pn = i%5+1;\n        const filter_data = {\n            lang: filterReq.lang,\n            pr: filterReq.pr,\n            bd: filterReq.bd,\n            age: filterReq.age,\n            pe: filterReq.pe,\n            ns: filterReq.ns,\n            pn: pn,\n        }\n        history.push({\n            pathname : \"/waiting\",\n            search: `?${queryString.stringify(filter_data,{arrayFormat: 'comma', encode: false})}`\n        }) \n    }\n\n    const handleRangeChange = (value) => {\n        setFilterValue({\n            ...filterValue,\n            \"ageValue\" : value,\n        })\n        if(isFilterDisable) {\n            setIsFilterDisable(false)\n        }\n    }\n\n    const handleSliderChange = (value) => {\n        setFilterValue({\n            ...filterValue,\n            \"periodValue\" : value,\n        })\n        if(isFilterDisable) {\n            setIsFilterDisable(false)\n        }\n    }\n\n    const handleStatusChange = (value) => {\n        switch (value) {\n            case \"waiting\":\n                if(filterValue.waitingValue && !filterValue.holdValue){\n                    setFilterValue({\n                        ...filterValue,\n                        \"holdValue\" : false,\n                        \"waitingValue\" : true,\n                    })\n                } else {\n                    if(filterValue.waitingValue){\n                        setFilterValue({\n                            ...filterValue,\n                            \"waitingValue\" : false,\n                        }) \n                    } else {\n                        setFilterValue({\n                            ...filterValue,\n                            \"waitingValue\" : true,\n                        }) \n                    }\n                }\n                break;\n            case \"holding\":\n                if(!filterValue.waitingValue && filterValue.holdValue){\n                    setFilterValue({\n                        ...filterValue,\n                        \"holdValue\" : true,\n                        \"waitingValue\" : false,\n                    })\n                } else {\n                    if(filterValue.holdValue){\n                        setFilterValue({\n                            ...filterValue,\n                            \"holdValue\" : false,\n                        }) \n                    } else {\n                        setFilterValue({\n                            ...filterValue,\n                            \"holdValue\" : true,\n                        }) \n                    }\n                }\n                break;\n            default:\n                break;\n        }\n        if(isFilterDisable) {\n            setIsFilterDisable(false)\n        }\n    }\n\n    const handleToPushPage = () => {\n        let sub_url = localStorage.getItem(\"first_code\");\n        let url = \"/interpretation/\" + sub_url;\n        history.push(\"/interpretation\");\n    }\n\n    const onChangedBaselDisease = (value) => {\n        switch(value) {\n            case \"n\" : \n                if(basalDiseaseValue.n && !basalDiseaseValue.hbp && !basalDiseaseValue.di) {\n                    setBasalDiseaseValue({\n                        ...basalDiseaseValue,\n                        \"n\" : true\n                    });\n                } else {\n                    if(basalDiseaseValue.n) {\n                        setBasalDiseaseValue({\n                            ...basalDiseaseValue,\n                            \"n\" : false\n                        })\n                    } else {\n                        setBasalDiseaseValue({\n                            ...basalDiseaseValue,\n                            \"n\" : true\n                        })\n                    }\n                }\n                break;\n            case \"hbp\" : \n                if(!basalDiseaseValue.n && basalDiseaseValue.hbp && !basalDiseaseValue.di) {\n                    setBasalDiseaseValue({\n                        ...basalDiseaseValue,\n                        \"hbp\" : true\n                    });\n                } else {\n                    if(basalDiseaseValue.hbp) {\n                        setBasalDiseaseValue({\n                            ...basalDiseaseValue,\n                            \"hbp\" : false\n                        })\n                    } else {\n                        setBasalDiseaseValue({\n                            ...basalDiseaseValue,\n                            \"hbp\" : true\n                        })\n                    }\n                }\n                break;\n            case \"di\" : \n                if(!basalDiseaseValue.n && !basalDiseaseValue.hbp && basalDiseaseValue.di) {\n                    setBasalDiseaseValue({\n                        ...basalDiseaseValue,\n                        \"di\" : true\n                    });\n                } else {\n                    if(basalDiseaseValue.di) {\n                        setBasalDiseaseValue({\n                            ...basalDiseaseValue,\n                            \"di\" : false\n                        })\n                    } else {\n                        setBasalDiseaseValue({\n                            ...basalDiseaseValue,\n                            \"di\" : true\n                        })\n                    }\n                }\n                break;\n            default:\n                break; \n        }\n        if(isFilterDisable) {\n            setIsFilterDisable(false)\n        }\n    }\n\n    const onChangeProgram = (value) => {\n        switch(value) {\n            case \"dr\" : \n                if(programValue.dr && !programValue.edp) {\n                    setProgramValue({\n                        ...programValue,\n                        \"dr\" : true,\n                    })\n                } else {\n                    if(programValue.dr) {\n                        setProgramValue({\n                            ...programValue,\n                            \"dr\" : false,\n                        })\n                    } else {\n                        setProgramValue({\n                            ...programValue,\n                            \"dr\" : true,\n                        })\n                    }\n                }\n                break;\n            case \"edp\" : \n                if(!programValue.dr && programValue.edp) {\n                    setProgramValue({\n                        ...programValue,\n                        \"edp\" : true,\n                    })\n                } else {\n                    if(programValue.edp) {\n                        setProgramValue({\n                            ...programValue,\n                            \"edp\" : false,\n                        })\n                    } else {\n                        setProgramValue({\n                            ...programValue,\n                            \"edp\" : true,\n                        })\n                    }\n                }\n                break;\n            default:\n                break;\n        } \n        if(isFilterDisable) {\n            setIsFilterDisable(false)\n        }\n    }\n\n    const FilterBox = (\n        <div className = {'filter_type_div_'+size}>\n            <div className = {'select_value_'+size}>\n                <Selector title= {initFilterLang.program} list = {\n                    <div>\n                        <CheckBox title = {initFilterValueLang.program.dr} checked = {programValue.dr} onChange = {()=>onChangeProgram('dr')}/>\n                        <CheckBox title = {initFilterValueLang.program.edp} checked = {programValue.edp} onChange = {()=>onChangeProgram('edp')}/>    \n                    </div>\n                    } name = {programValue.dr && programValue.edp ? `${initFilterValueLang.program.dr},${initFilterValueLang.program.edp}` : programValue.dr ? `${initFilterValueLang.program.dr}` : programValue.edp ? `${initFilterValueLang.program.edp}` : \"\"}/>\n                <Selector title= {initFilterLang.basal_disease} list = {\n                    <div>\n                        <CheckBox title = {initFilterValueLang.basal_disease.n} checked = {basalDiseaseValue.n} onChange = {()=>onChangedBaselDisease('n')}/>\n                        <CheckBox title = {initFilterValueLang.basal_disease.hbp} checked = {basalDiseaseValue.hbp} onChange = {()=>onChangedBaselDisease('hbp')}/>    \n                        <CheckBox title = {initFilterValueLang.basal_disease.di} checked = {basalDiseaseValue.di} onChange = {()=>onChangedBaselDisease('di')}/>        \n                    </div>\n                }name = {basalDiseaseValue.n && basalDiseaseValue.hbp && basalDiseaseValue.di? \n                    `${initFilterValueLang.basal_disease.n},${initFilterValueLang.basal_disease.hbp},${initFilterValueLang.basal_disease.di}` : \n                    basalDiseaseValue.n && basalDiseaseValue.hbp ?  \n                    `${initFilterValueLang.basal_disease.n},${initFilterValueLang.basal_disease.hbp}`:  \n                    basalDiseaseValue.n && basalDiseaseValue.di ? \n                    `${initFilterValueLang.basal_disease.n},${initFilterValueLang.basal_disease.di}`: \n                    basalDiseaseValue.hbp && basalDiseaseValue.di ? \n                    `${initFilterValueLang.basal_disease.hbp},${initFilterValueLang.basal_disease.di}` :\n                    basalDiseaseValue.n ? \n                    `${initFilterValueLang.basal_disease.n}`: \n                    basalDiseaseValue.hbp ? \n                    `${initFilterValueLang.basal_disease.hbp}`: \n                    basalDiseaseValue.di ? \n                    `${initFilterValueLang.basal_disease.di}` : \n                    \"\"}/>\n                <div className = 'range_slider_with_label'>\n                    <span className = \"range_sldier_title\">\n                        {initFilterLang.age}\n                    </span>\n                    <CustomInputRange \n                        min={0}\n                        max={100}\n                        onChange = {(value) => handleRangeChange(value)}\n                        value = {filterValue.ageValue}/> \n                </div>\n                <div className = 'range_slider_with_label'>\n                    <span className = \"range_sldier_title\">\n                        {initFilterLang.period}\n                    </span>\n                    <CustomInputSlider \n                        min={0}\n                        max={12}\n                        onChange = {(value) => handleSliderChange(value)}\n                        value = {filterValue.periodValue}/> \n                </div>\n                <CheckBox checked={filterValue.waitingValue} title = {initFilterLang.waiting}\n                    onChange = {()=>handleStatusChange('waiting')} />\n                <CheckBox checked={filterValue.holdValue} title = {initFilterLang.hold} onChange = {()=>handleStatusChange('holding')} />\n            </div>\n            <NormalButton title = 'Apply Filter' disabled = {isFilterDisable} width = {'160px'} onClick = {handleFilter}/> \n        </div>\n    )\n\n    const SavedFilterBox = (\n        <div className = {'saved_filter_div_'+size}>\n            <NormalButton title = 'Interpretation' disabled = {isDataEmpty} width = {'200px'} onClick = {handleToPushPage}/>  \n        </div>\n    )\n\n    const infoTable = (\n        <DataTable size = {size} tableBodyList = {props.waitingData.List} list = {updateListLang}/>\n    )\n\n    const PagerBox = (\n        <div className = 'pager_form_div'>\n            <Pager \n                buttons = {props.waitingData.Pagination}\n                currentPage = {filterReq.pn}\n                buttonsEvent = {(e,i) => handleButtonEvent(e,i)}\n                onClickPreBlock = {(e) => handlePagination(e,'preBlock')}\n                onClickPrePage = {(e) => handlePagination(e,'prePage')}\n                onClickNextPage = {(e) => handlePagination(e,'nextPage')}\n                onClickNextBlock = {(e) => handlePagination(e,'nextBlock')}\n            />\n        </div>\n    )\n    \n    const formBody = (\n        <div className = {\"waiting_form_div_\"+size}>\n            {FilterBox}\n            {SavedFilterBox}\n            {infoTable}\n            {PagerBox}\n            {/* <div style = {{display:'flex',flexDirection:'column',justifyContent:'space-between'}}>\n                {infoTable}\n                {PagerBox}\n            </div> */}\n        </div>\n    )\n\n    return (\n        <div className = {'waiting_background_div_'+size}>\n            {formBody}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isDataLoading: state.LoaderReducer.isDataLoading,\n    waitingData: state.WaitingDataReducer.waitingData\n})\n  \nconst mapDispatchToProps = {\n    getWaitingData: actions.GetWaitingData,\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Waiting)\n  \n","/Users/kimseongjae/source/eyeDX/src/pages/home/interpretation/interpretation.js",["228","229","230"],"import React, { useState,useEffect, useLayoutEffect } from 'react';\nimport \"./interpretation.css\";\nimport ImageZoom from '../../../components/image_zoom/image_zoom'\nimport * as actions from '../../../actions/interpretation/interpretation_data';\nimport { connect } from 'react-redux'\nimport { DarkCheckBox,CheckBox } from '../../../components/parts/check_box/check_box';\nimport { NormalDarkButton,CustomDarkButton,ToggleButton} from '../../../components/parts/button/button';\nimport { InitDataModel} from \"./initModel\";\nimport {Loader} from \"../../../components/loader/loader\";\nimport { baseUrl } from '../../../actions/api';\nimport Lock from \"../../../components/parts/lock/lock\";\nimport { useHistory, useParams } from 'react-router';\nimport { useCookies } from 'react-cookie';\nimport {CustomDotInputSlider,CustomInputSlider} from '../../../components/parts/input_range/input_range';\nimport {CustomAILabel} from \"../../../components/parts/label/label\";\n\n\nconst isClickTypeModel = {\n    isPhotoClicked : true,\n    isReportClicked : false,\n}\n\nconst isProgramModel = {\n    isEye : true,\n    isDiabetic : false,\n}\n\nconst statusModel = {\n    msg: \"Send & Report\",\n    isHold: false,\n}\n\nconst imgQualitySendModel = {\n    score: 0,\n    isCheck: false,\n}\n\nconst marks = {\n    '1' : <div className = {'normal15SecGray'}>Worst</div>,\n    '2' : <div className = {'normal15SecGray'}>Bad</div>,\n    '3' : <div className = {'normal15SecGray'}>Good</div>,\n    '4' : <div className = {'normal15SecGray'}>Great</div>,\n    '5' : <div className = {'normal15SecGray'}>Perfect</div>\n}\n\nconst Interpretation=(props)=>{\n    const [isSelected, setIsSelected] = useState(true);\n    const [isAiSupport, setIsAiSupport] = useState(true);\n    const [isTypeClick, setIsTypClick] = useState(isClickTypeModel);\n    const [isProgram, setIsProgram] = useState(isProgramModel);\n    const [initData, setInitData] = useState(InitDataModel);\n    const [comment, setCommnet] = useState(\"\");\n    const stirngToObj = JSON.parse(localStorage.getItem(\"filter-value\"));\n    const year = localStorage.getItem(\"filter-value\") !== null ? stirngToObj.lang === \"kr\" ? \"년\" : \"year\" : localStorage.getItem(\"lang\") === \"kr\" ? \"년\" : \"year\";\n    const  [status, setStatus] = useState(statusModel);\n    const [sendImgData, setSendImgData] = useState(imgQualitySendModel);\n\n    const [eyeOD, setEyeOD] = useState(InitDataModel.items[0].parts.od);\n    const [eyeOS, setEyeOS] = useState(InitDataModel.items[0].parts.os); \n    const [diabeticOD, setDiabeticOD] = useState(InitDataModel.items[1].parts.od); \n    const [diabeticOS, setDiabeticOS] = useState(InitDataModel.items[1].parts.os);\n\n    const [showImgQuality, setShowImgQuality] = useState(false);\n\n    const [cookies] = useCookies(['token']);\n\n    const history = useHistory();\n    const userId = useParams();\n\n    const queryObj = JSON.parse(localStorage.getItem(\"filter-value\"));\n    \n    const errorStatus = () => { /// 데이터가 없는데 interpretation page 로 접속할 경우 생기는 에러메세지 산출\n        if(localStorage.getItem(\"lang\") === \"kr\") {\n            localStorage.setItem(\"error_data\",\"환자의 데이터가 존재하지 않습니다.\");\n            localStorage.setItem(\"error_value\",\"true\");\n        } else {\n            localStorage.setItem(\"error_data\",\"Patient data does not exist.\");\n            localStorage.setItem(\"error_value\",\"true\");\n        }\n        history.goBack();\n    }\n\n    useLayoutEffect(()=>{\n        setInitData(InitDataModel);\n        try {\n            if(userId.userId === \":userId\") { /// 주소창에 /interpretation 이라고 치고 들어올경우\n                errorStatus(); \n            } else { /// waiting page 에서 interpretation button 을 눌고 들어올경우\n                if(localStorage.getItem(\"first_code\") === \"\"){  /// waiting list 에 데이터가 없음\n                    errorStatus();\n                } else { /// 성공적으로 데이터 불러오기\n                    props.getInterpretationData(userId.userId,queryObj,cookies.token.access_token);\n                }\n            }\n        } catch (error) {\n            errorStatus();\n        }\n    },[userId.userId])\n \n    useEffect(() => {\n        try{\n           if(props.interpretationData !== undefined && Object.keys(props.interpretationData).length !== 0){\n                setInitData(props.interpretationData);\n                if(props.interpretationData.status === \"Hold\"){\n                    setStatus({\n                        ...status,\n                        msg: \"Hold\",\n                        isHold : true,\n                    })\n                } else {\n                    setStatus({\n                        ...status,\n                        msg: \"Send & Report\",\n                        isHold : false,\n                    })\n                }\n\n                if(props.interpretationData.items.length === 1) {\n                    if(props.interpretationData.items[0].code !== \"edp\"){\n                        setIsProgram({\n                            \"isEye\" : false,\n                            \"isDiabetic\" : true,\n                        })\n                        setEyeOD(props.interpretationData.items[0].parts.od)\n                        setEyeOS(props.interpretationData.items[0].parts.os)\n                    } else {\n                        setIsProgram({\n                            \"isEye\" : true,\n                            \"isDiabetic\" : false,\n                        })\n                        setDiabeticOD(props.interpretationData.items[0].parts.od)\n                        setDiabeticOS(props.interpretationData.items[0].parts.os)\n                    }   \n                } else {\n                    setIsProgram({\n                        \"isEye\" : true,\n                        \"isDiabetic\" : false,\n                    })\n                    setEyeOD(props.interpretationData.items[0].parts.od)\n                    setEyeOS(props.interpretationData.items[0].parts.os)\n                    setDiabeticOD(props.interpretationData.items[1].parts.od)\n                    setDiabeticOS(props.interpretationData.items[1].parts.os)\n                }\n\n                if(props.interpretationData.shot.od === \"\"){\n                    setIsSelected(false);\n                } else if(props.interpretationData.shot.os === \"\"){\n                    setIsSelected(true);\n                } else {\n                    setIsSelected(true);\n                }\n                setIsAiSupport(props.interpretationData.aiSupport);\n                setCommnet(props.interpretationData.comment);\n            }     \n       } catch (e) {\n            errorStatus();\n       }\n        \n    },[props.interpretationData._id])\n\n    const handleHoldImg = () => {\n        status.isHold ? setStatus(statusModel) : setStatus({\n            ...status,\n            msg: \"Hold\",\n            isHold: true,\n        })\n    }\n\n    const handleComment = (e) => {\n        setCommnet(e.target.value);\n    }\n\n    const handleImgChange = (value) => {\n        if(initData.items.length === 2 && isProgram.isDiabetic){\n            setIsProgram({\n                ...isProgram,\n                \"isEye\":true,\n                \"isDiabetic\":false,\n            })\n        } else {\n            if(initData.items.length === 1) {\n                if(initData.items[0].code === \"edp\") {\n                    setIsProgram({\n                        ...isProgram,\n                        \"isEye\":true,\n                        \"isDiabetic\":false,\n                    })\n                } else {\n                    setIsProgram({\n                        ...isProgram,\n                        \"isEye\":false,\n                        \"isDiabetic\":true,\n                    })\n                }\n            }\n        }\n\n        switch (value) {\n            case \"od\":\n                if(initData.shot.od !== \"\" && initData.shot.os !== \"\"){\n                    setIsSelected(true);\n                }  \n                break;\n            case \"os\":\n                if(initData.shot.od !== \"\" && initData.shot.os !== \"\"){\n                    setIsSelected(false);\n                }\n                break;\n            default:\n                break;\n        }\n\n        setIsAiSupport(true);\n    }\n\n    const handleTypeButtonChange = (value) => {\n        switch (value) {\n            case \"photo\":\n                setIsTypClick({\n                    ...isTypeClick,\n                    \"isPhotoClicked\" : true,\n                    \"isReportClicked\" : false,\n                });\n                break;\n            case \"report\":\n                setIsTypClick({\n                    ...isTypeClick,\n                    \"isPhotoClicked\" : false,\n                    \"isReportClicked\" : true,\n                });\n                break;\n            default:\n                break;\n        }\n    }\n \n    const handleToggleButton = () => {\n        if(initData.items.length === 2 && isProgram.isDiabetic){\n            setIsProgram({\n                ...isProgram,\n                \"isEye\":true,\n                \"isDiabetic\":false,\n            })\n        } else {\n            if(initData.items.length === 1) {\n                if(initData.items[0].code === \"edp\") {\n                    setIsProgram({\n                        ...isProgram,\n                        \"isEye\":true,\n                        \"isDiabetic\":false,\n                    })\n                } else {\n                    setIsProgram({\n                        ...isProgram,\n                        \"isEye\":false,\n                        \"isDiabetic\":true,\n                    })\n                }\n            }\n        }\n        \n        if(initData.shot.od !== \"\" && initData.shot.os !== \"\"){\n            if(isSelected){\n                setIsSelected(false);\n            } else {\n                setIsSelected(true);\n            }\n        }\n\n        setIsAiSupport(true);\n    }\n\n    const handleProgramButton = (value) => {\n\n        switch (value) {\n            case \"edp\":\n                setIsProgram({\n                    ...isProgram,\n                    \"isEye\" : true,\n                    \"isDiabetic\" : false,\n                })\n                break;\n            case \"dr\":\n                setIsProgram({\n                    ...isProgram,\n                    \"isEye\" : false,\n                    \"isDiabetic\" : true,\n                })\n                break;\n            default:\n                break;\n        }\n    }\n \n    const handleChangeChecked = (i,j,code) => {\n        //console.log(eyeODTem[i].ai[j]);\n        let tempList;\n        if(isAiSupport) {\n            if(isProgram.isEye) {\n                if(isSelected) {\n                    tempList = eyeOD[i].ai;\n                    switch (code) {\n                        case \"retinal_abnormality\":\n                            if(eyeOD[i].ai[j]) {\n                                tempList.splice(j,1,false);\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                );\n                            } else {\n                                if(j === 7) {\n                                    tempList.splice(0,7,false,false,false,false,false,false,false);\n                                    tempList.splice(7,1,true);\n                                    setEyeOD(\n                                        eyeOD.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : tempList\n                                        } : {...value})\n                                    )\n                                } else {\n                                    tempList.splice(7,1,false);\n                                    tempList.splice(j,1,true);\n                                    setEyeOD(\n                                        eyeOD.map((value) => value.code === code ? {\n                                            ...value,\n                                            \"ai\" : tempList\n                                        } : {...value})\n                                    )\n                                }\n                            }        \n                            break;\n                        case \"media_abnormality\":\n                            if(eyeOD[i].ai[j]) {\n                                tempList.splice(j,1,false);\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                if(j === 1) {\n                                    tempList.splice(0,2,false,true)\n                                    setEyeOD(\n                                        eyeOD.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : tempList\n                                        } : {...value})\n                                    )\n                                } else {\n                                    tempList.splice(0,2,true,false)\n                                    setEyeOD(\n                                        eyeOD.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : tempList\n                                        } : {...value})\n                                    )\n                                }\n                            }\n                            break;\n                        case \"optic_nerve_abnormality\":\n                            if(eyeOD[i].ai[j]) {\n                                tempList.splice(j,1,false);\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                if(j === 1) {\n                                    tempList.splice(0,2,false,true)\n                                    setEyeOD(\n                                        eyeOD.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : tempList\n                                        } : {...value})\n                                    )\n                                } else {\n                                    tempList.splice(0,2,true,false)\n                                    setEyeOD(\n                                        eyeOD.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : tempList\n                                        } : {...value})\n                                    )\n                                }\n                            }\n                        break;\n                        default:\n                            break;\n                    }\n                } else {\n                    tempList=eyeOS[i].ai;\n                    switch (code) {\n                        case \"retinal_abnormality\":\n                            if(eyeOS[i].ai[j]) {\n                                tempList.splice(j,1,false);\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                if(j === 7) {\n                                    tempList.splice(0,7,false,false,false,false,false,false,false);\n                                    tempList.splice(7,1,true);\n                                    setEyeOS(\n                                        eyeOS.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : tempList\n                                        } : {...value})\n                                    )\n                                } else {\n                                    tempList.splice(7,1,false);\n                                    tempList.splice(j,1,true);\n                                    setEyeOS(\n                                        eyeOS.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : tempList\n                                        } : {...value})\n                                    )\n                                }\n                            }   \n                            break;\n                        case \"media_abnormality\":\n                            if(eyeOS[i].ai[j]) {\n                                tempList.splice(j,1,false);\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                if(j === 1) {\n                                    tempList.splice(0,2,false,true);\n                                    setEyeOS(\n                                        eyeOS.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : eyeOS[i].ai.splice(0,2,false,true)\n                                        } : {...value})\n                                    )\n                                } else {\n                                    tempList.splice(0,2,true,false);\n                                    setEyeOS(\n                                        eyeOS.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : eyeOS[i].ai.splice(0,2,true,false)\n                                        } : {...value})\n                                    )\n                                }\n                            }\n                            break;\n                        case \"optic_nerve_abnormality\":\n                            if(eyeOS[i].ai[j]) {\n                                tempList.splice(j,1,false);\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                if(j === 1) {\n                                    tempList.splice(0,2,false,true)\n                                    setEyeOS(\n                                        eyeOS.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : tempList\n                                        } : {...value})\n                                    )\n                                } else {\n                                    tempList.splice(0,2,true,false)\n                                    setEyeOS(\n                                        eyeOS.map((value) => value.code === code ? {\n                                            ...value,\n                                            ai : tempList\n                                        } : {...value})\n                                    )\n                                }\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            } else if(isProgram.isDiabetic){\n                if(isSelected) {\n                    tempList=diabeticOD[i].ai\n                    switch (code) {\n                        case \"diabetic_retinopathy\":\n                            if(diabeticOD[i].ai[j]) {\n                                tempList.splice(j,1,false)\n                                setDiabeticOD(\n                                    diabeticOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,5,false,false,false,false,false)\n                                //tempList = [false,false,false,false,false]\n                                tempList.splice(j,1,true)\n                                setDiabeticOD(\n                                    diabeticOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            }  \n                            break;\n                        case \"csme_suspicion\":\n                            if(diabeticOD[i].ai[j]) {\n                                tempList.splice(j,1,false)\n                                setDiabeticOD(\n                                    diabeticOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(j,1,true)\n                                setDiabeticOD(\n                                    diabeticOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            }    \n                            break;\n                        default:\n                            break;\n                    }\n                } else {\n                    tempList=diabeticOS[i].ai\n                    switch (code) {\n                        case \"diabetic_retinopathy\":\n                            if(diabeticOS[i].ai[j]) {\n                                tempList.splice(j,1,false)\n                                setDiabeticOS(\n                                    diabeticOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,5,false,false,false,false,false)\n                                tempList.splice(j,1,true)\n                                setDiabeticOS(\n                                    diabeticOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            }    \n                            break;\n                        case \"csme_suspicion\":\n                            if(diabeticOS[i].ai[j]) {\n                                tempList.splice(j,1,false)\n                                setDiabeticOS(\n                                    diabeticOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(j,1,true)\n                                setDiabeticOS(\n                                    diabeticOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        ai : tempList\n                                    } : {...value})\n                                )\n                            }    \n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n        } else {\n            if(isProgram.isEye) {\n                if(isSelected) {\n                    tempList = eyeOD[i].checked;\n                    switch (code) {\n                        case \"retinal_abnormality\":\n                            if(eyeOD[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOD(\n                                eyeOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    \"checked\" : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 7) {\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        \"checked\" :[false,false,false,false,false,false,false,true]\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(7,1,false);\n                                tempList.splice(j,1,true);\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        \"checked\" : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }        \n                        break;\n                    case \"media_abnormality\":\n                        if(eyeOD[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOD(\n                                eyeOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 1) {\n                                tempList.splice(0,2,false,true)\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,2,true,false)\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }\n                        break;\n                    case \"optic_nerve_abnormality\":\n                        if(eyeOD[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOD(\n                                eyeOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 1) {\n                                tempList.splice(0,2,false,true)\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,2,true,false)\n                                setEyeOD(\n                                    eyeOD.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }\n                    break;\n                    default:\n                        break;\n                }\n            } else {\n                tempList=eyeOS[i].checked\n                switch (code) {\n                    case \"retinal_abnormality\":\n                        if(eyeOS[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOS(\n                                eyeOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 7) {\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : [false,false,false,false,false,false,false,true]\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(7,1,false);\n                                tempList.splice(j,1,true);\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }   \n                        break;\n                    case \"media_abnormality\":\n                        if(eyeOS[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOS(\n                                eyeOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 1) {\n                                tempList.splice(0,2,false,true);\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : eyeOS[i].checked.splice(0,2,false,true)\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,2,true,false);\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : eyeOS[i].checked.splice(0,2,true,false)\n                                    } : {...value})\n                                )\n                            }\n                        }\n                        break;\n                    case \"optic_nerve_abnormality\":\n                        if(eyeOS[i].checked[j]) {\n                            tempList.splice(j,1,false);\n                            setEyeOS(\n                                eyeOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            if(j === 1) {\n                                tempList.splice(0,2,false,true)\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            } else {\n                                tempList.splice(0,2,true,false)\n                                setEyeOS(\n                                    eyeOS.map((value) => value.code === code ? {\n                                        ...value,\n                                        checked : tempList\n                                    } : {...value})\n                                )\n                            }\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n            } else if(isProgram.isDiabetic){\n                if(isSelected) {\n                    tempList=diabeticOD[i].checked\n                    switch (code) {\n                    case \"diabetic_retinopathy\":\n                        if(diabeticOD[i].checked[j]) {\n                            tempList.splice(j,1,false)\n                            setDiabeticOD(\n                                diabeticOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            tempList.splice(0,5,false,false,false,false,false)\n                            //tempList = [false,false,false,false,false]\n                            tempList.splice(j,1,true)\n                            setDiabeticOD(\n                                diabeticOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        }  \n                        break;\n                    case \"csme_suspicion\":\n                        if(diabeticOD[i].checked[j]) {\n                            tempList.splice(j,1,false)\n                            setDiabeticOD(\n                                diabeticOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            tempList.splice(j,1,true)\n                            setDiabeticOD(\n                                diabeticOD.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        }    \n                        break;\n                    default:\n                        break;\n                }\n            } else {\n                tempList=diabeticOS[i].checked\n                switch (code) {\n                    case \"diabetic_retinopathy\":\n                        if(diabeticOS[i].checked[j]) {\n                            tempList.splice(j,1,false)\n                            setDiabeticOS(\n                                diabeticOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            tempList.splice(0,5,false,false,false,false,false)\n                            tempList.splice(j,1,true)\n                            setDiabeticOS(\n                                diabeticOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        }    \n                        break;\n                    case \"csme_suspicion\":\n                        if(diabeticOS[i].checked[j]) {\n                            tempList.splice(j,1,false)\n                            setDiabeticOS(\n                                diabeticOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        } else {\n                            tempList.splice(j,1,true)\n                            setDiabeticOS(\n                                diabeticOS.map((value) => value.code === code ? {\n                                    ...value,\n                                    checked : tempList\n                                } : {...value})\n                            )\n                        }    \n                        break;\n                    default:\n                        break;\n                }\n            }\n            }\n        }\n       \n    }\n\n    const handleAISupportChecked = () => {\n        if(isAiSupport) {\n            setIsAiSupport(false);\n        } else {\n            setIsAiSupport(true);\n        }\n    }\n\n    const handleImgQualityChange = (value) => {\n        setSendImgData({\n            ...sendImgData,\n            \"score\" : value,\n        })\n    }\n\n    const handleImgQualityChecked = ()=>{\n        if(sendImgData.isCheck){\n            setSendImgData({\n                ...sendImgData,\n                \"isCheck\" : false\n            })\n        } else {\n            setSendImgData({\n                ...sendImgData,\n                \"isCheck\" : true\n            })\n        }\n    }\n\n    const sendDataType = () => {\n        const edp = {\n            code: \"edp\",\n            name: \"Eye Disease Presence\",\n            parts : {\n                od: eyeOD,\n                os: eyeOS\n            },\n        }\n\n        const dr = {\n            code: \"dr\",\n            name: \"Diabetic Retinopathy\",\n            parts : {\n                od: diabeticOD,\n                os: diabeticOS\n            },\n        }\n        const body = {\n            lang: localStorage.getItem(\"lang\"),\n            status : status.isHold ? 50 : 100,\n            comment : comment,\n            programs : [edp,dr],\n            aiSupport : isAiSupport,\n            id : localStorage.getItem(\"userID\"),\n        }        \n        setCommnet(\"\");\n        setSendImgData({\n            ...sendImgData,\n            \"score\":0,\n            \"isCheck\":false,\n        })\n        setShowImgQuality(false); \n        props.sendInterpretationData(localStorage.getItem(\"first_code\"),body,cookies.token.access_token,onSuccessful);\n    }\n\n    const onSuccessful = (userID) => {\n        localStorage.setItem(\"first_code\",userID);\n        let url = \"/interpretation/\" + localStorage.getItem(\"first_code\");\n        history.replace(url);\n    }\n\n    const handleSendData = () => {\n        if(initData.isVote){\n            sendDataType();\n        } else {\n            setShowImgQuality(true);\n        }\n        \n    }\n\n    const handleRetake = () => {\n        const body = {\n            lang: localStorage.getItem(\"lang\"),\n            status : 200\n        }\n        props.sendInterpretationData(localStorage.getItem(\"first_code\"),body,cookies.token.access_token,onSuccessful); \n        setCommnet(\"\");\n        setShowImgQuality(false);\n    }\n\n    const handleImageScoreSend = () => {\n        const params = {start: sendImgData.score,ns:sendImgData.isCheck === true ? 1 : 0,}\n        props.sendImageQulityData(localStorage.getItem(\"first_code\"),params,cookies.token.access_token,nextRequest);\n    }\n    \n    const nextRequest = (result) => {\n        if(result === \"ok\"){\n            sendDataType();\n        } else {\n            setShowImgQuality(true);\n        }\n    }\n\n    const programData = (\n        <div className = \"check_list_div\">\n            {isProgram.isEye ?\n                isSelected ?\n                    eyeOD.map((program,i) => (   \n                        <div>                             \n                            <div key = {i} className = \"patient_info_content_span\">{program.name}</div>\n                                {program.vals.map((val,j) => (\n                            <div key={j} className = \"check_box_div\">\n                                <DarkCheckBox title = {val.name} checked = {isAiSupport ? program.ai[j] : program.checked[j]} onChange = {()=>handleChangeChecked(i,j,program.code)}/>\n                                {isAiSupport ? program.ai_temp[j] ? <CustomAILabel/> : <div></div> : <div></div>}\n                            </div>))}  \n                        </div>)) : \n                    eyeOS.map((program,i) => (   \n                        <div>                             \n                            <div key = {i} className = \"patient_info_content_span\">{program.name}</div>\n                                {program.vals.map((val,j) => (\n                            <div key={j} className = \"check_box_div\">\n                                <DarkCheckBox title = {val.name} checked = {isAiSupport ? program.ai[j] : program.checked[j]} onChange = {()=>handleChangeChecked(i,j,program.code)}/>\n                                {isAiSupport ? program.ai_temp[j] ? <CustomAILabel/> : <div></div> : <div></div>}\n                            </div>))}  \n                        </div>\n                        )) :\n                isSelected ?         \n                    diabeticOD.map((program,i) => (   \n                        <div>                             \n                            <div key = {i} className = \"patient_info_content_span\">{program.name}</div>\n                                {program.vals.map((val,j) => (\n                            <div key={j} className = \"check_box_div\">\n                                <DarkCheckBox title = {val.name} checked = {isAiSupport ? program.ai[j] : program.checked[j]} onChange = {()=>handleChangeChecked(i,j,program.code)}/>\n                                {isAiSupport ? program.ai_temp[j] ? <CustomAILabel/> : <div></div> : <div></div>}\n                            </div>))}  \n                        </div>)) :  \n                    diabeticOS.map((program,i) => (   \n                        <div>                             \n                            <div key = {i} className = \"patient_info_content_span\">{program.name}</div>\n                                {program.vals.map((val,j) => (\n                            <div key ={j} className = \"check_box_div\">\n                                <DarkCheckBox title = {val.name} checked = {isAiSupport ? program.ai[j] : program.checked[j]} onChange = {()=>handleChangeChecked(i,j,program.code)}/>\n                                {isAiSupport ? program.ai_temp[j] ? <CustomAILabel/> : <div></div> : <div></div>}\n                            </div>))}  \n                        </div>))       \n            }\n        </div>\n    )\n\n    const programList = (\n        <div className = \"inspect_list_div\">\n            <ToggleButton isRight = {isSelected} onClick = {handleToggleButton}/>\n            <div className = \"patient_info_title_span\">Program</div>    \n            {initData.items.map((item,i) => \n                <NormalDarkButton key={i} width = \"100%\" isActive = {item.code === \"edp\" ? isProgram.isEye : isProgram.isDiabetic} title = {item.name} onClick = {()=>handleProgramButton(item.code)}/>\n            )}\n            {programData}\n            <div style = {{display:\"flex\", justifyContent:\"end\"}}>\n                <CheckBox title = {\"Ai support\"} color = \"white\" checked = {isAiSupport} onChange = {()=>handleAISupportChecked()}/>\n            </div>\n        </div>\n    )\n\n    const interpretationList = (\n        <div className = \"interpretation_list_div\">\n            <div>\n                <div className = \"inspect_header_div\">\n                    <div className = \"inspect_date_div\">\n                        <Lock onClick = {handleHoldImg} isHold = {status.isHold}/>\n                        <span className = \"inspect_date_span\">{initData.interpretationDate}</span>\n                    </div>\n                    <span className = \"inspect_date_span\">{\"Remaing list: \" + initData.remainCount}</span>\n                </div>\n                <div className = \"patient_info_div\">\n                    <div className = \"patient_info_title_span\">Patient Information</div>\n                    <div className = \"type_button_div\">\n                        <NormalDarkButton isActive = {isTypeClick.isPhotoClicked} title = \"Photo\" width = \"318px\" onClick = {()=>handleTypeButtonChange(\"photo\")}/>\n                        {/* <NormalDarkButton isActive = {isTypeClick.isReportClicked} title = \"Photo\" width = \"150px\" onClick = {()=>handleTypeButtonChange(\"report\")}/> */}\n                    </div>\n                    <div className = \"patient_info_content_span\">B/D : {initData.birthday}</div>\n                    <div className = \"patient_info_content_span\">Basal disease : {initData.basalDisease === null ? \"none\" : \n                        initData.basalDisease.map((title,k)=>(\n                            <span key={k}>{title+year}{initData.basalDisease.length-1 === k ? \"\" : \" / \"}</span>\n                        ))}</div>\n                    <div className = \"patient_info_content_span\">Race : {initData.race}</div>\n                </div>\n            </div>\n            {programList}\n            <div className = \"bottom_submit_div\">\n                <div className = \"comments_div\">\n                    <div className = \"patient_info_title_span\">Comments</div>\n                    <textarea className = \"comment_textarea\" placeholder=\"...entering\" rows=\"4\" value = {comment} onChange = {(e)=>handleComment(e)}></textarea>\n                </div>\n            </div>\n            <div className = \"sumbit_button_div\">\n                <div className = \"type_button_div\"> \n                    <NormalDarkButton isActive = {false} title = \"Retake\" width = \"150px\" onClick = {handleRetake}/>\n                    <CustomDarkButton title = {status.msg} width = \"150px\" onClick = {handleSendData}/>\n                </div>\n            </div>    \n        </div>\n    )\n    \n    const image_quality = (\n        <div className = {'interpretation_image_quality_QHD'} \n        style = {{visibility:`${showImgQuality ? \"visible\" : \"hidden\"}`}}\n        >\n            <div className = {'interpretation_image_quality_body_QHD'}>\n            <div className = {\"interpretation_image_quality_content_QHD\"}>\n                <div className = {'bold18white interpretation_image_quality_content_header_QHD'}>How was the image quality?</div>\n                <div className = {'normal18FirGray interpretation_image_quality_content_normal_QHD'}>The following surveys are used as data to<div className = {'bold18white'}>improve the quality of images.</div> Thank you for your valuable comments.</div>\n            </div>\n            <div className = {\"interpretation_image_quality_slider_QHD\"}>\n                <CustomDotInputSlider\n                    min={1}\n                    max={5}\n                    onChange = {(value) => handleImgQualityChange(value)}\n                    onAfterChange = {handleImageScoreSend}\n                    marks = {marks}\n                    value = {sendImgData.score}\n                    isTipShow = {showImgQuality}\n                />\n            </div>\n            <div className = {\"interpretation_image_quality_check_QHD\"}>\n            <DarkCheckBox title = {\"no seen for 5 days\"} checked = {sendImgData.isCheck} onChange = {handleImgQualityChecked}/>\n            </div>\n            </div>\n        </div>\n    )\n\n    const interpretation_body = (\n        <div style = {{position:'relative'}}>\n            {image_quality}\n        <div className = {'interpretation_body_QHD'}>\n            <div onClick = {()=>handleImgChange(\"od\")} className = {isSelected? 'interpretation_photo_click' : 'interpretation_photo'}>\n                {<ImageZoom src = {initData.shot.od === \"init\" ? \"\" : initData.shot.od === \"\" ? \"none\" : baseUrl + initData.shot.od} id = {initData._id}/>}\n            </div>\n            <div onClick = {()=>handleImgChange(\"os\")} className = {isSelected === false? 'interpretation_photo_click' : 'interpretation_photo'}>\n                {<ImageZoom src = {initData.shot.os === \"init\" ? \"\" : initData.shot.os === \"\" ? \"none\" : baseUrl + initData.shot.os} id = {initData._id}/>}\n            </div>\n            <div className = {'interpretation_list_QHD'}>        \n                {interpretationList}\n            </div>\n        </div>\n        </div>\n    )\n\n    const data_loading = (\n        <div className = \"loading_div\">\n            <div className = \"loading_content_div\">\n                <Loader/>\n                <span>loading...</span>\n            </div>    \n        </div>\n    )\n\n    return(\n        <>\n        {props.isDataLoading ? data_loading : interpretation_body}\n        </>\n    )  \n}\n\nconst mapStateToProps = (state) => ({\n    isDataLoading: state.LoaderReducer.isDataLoading,\n    interpretationData: state.InterpretationDataReducer.interpretationData,\n})\n  \nconst mapDispatchToProps = {\n    getInterpretationData: actions.GetInterpretationData,\n    sendInterpretationData : actions.SendInterpretationData,\n    sendImageQulityData : actions.SendImageQulityData,\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Interpretation)\n","/Users/kimseongjae/source/eyeDX/src/components/header/header.js",["231","232","233","234","235","236","237","238","239","240","241"],"import React,{useContext,useState,useEffect,createContext, useLayoutEffect,} from 'react';\nimport { connect } from 'react-redux'\nimport {ReactComponent as Logo} from \"../../images/logo_eyedx.svg\";\nimport {BrowserRouter as Router,Switch,Route,Link, Redirect,useRouteMatch, useHistory} from \"react-router-dom\";\nimport \"./header.css\";\nimport Themes from \"../../common/theme\";\nimport Modal from \"../../components/parts/modal/modal\"\n\nconst tabLangModel = {\n  waiting : \"Waiting\",\n  interpretation : \"Interpretation\",\n}\nconst TabButton = (props) => {\n  const size = props.size;\n\n    return (\n      <Link to = {props.to} style = {{ color: `${props.value ? props.color : \"#9F9F9F\"}`}}>\n        <button \n          className = {props.value ? 'home_tab_active_'+size : 'home_tab_inactive_'+size}\n          style = {{\n            borderBottom:`3px solid ${props.value ? props.color : 'transparent'}`,\n            color: `${props.value ? props.color : \"#9F9F9F\"}`,\n          }}>\n          {props.title}\n        </button></Link>\n    )\n}\n\nconst Header = (props) => {\n  const [initTabLang, setInitTabLang] = useState(tabLangModel);\n  const [headerColor, setHeaderColor] = useState(Themes.blue);\n  const updateTabLang = props.tab;\n  const size = props.size;\n  \n  const url = \"/interpretation\";\n\n  useEffect(() => {\n    if(updateTabLang !== undefined && Object.keys(updateTabLang).length !== 0){\n      setInitTabLang(updateTabLang);\n    }\n\n    if(props.headerColorData[0]){\n      setHeaderColor(Themes.blue)\n    } else {\n      if(props.headerColorData[1]){\n        setHeaderColor(Themes.dark)\n      }\n    }\n  })\n\n  const header = (\n      <div className = {'header_'+size} \n        style = {{\n          borderBottom:headerColor.border, \n          backgroundColor: headerColor.backgroundColor,\n        }}>\n          <div className = {'header_logo_wrap_'+size}>\n            <div className = {'header_logo_div_'+size}\n        style = {{\n          backgroundColor:headerColor.logoBackgroundColor,\n          borderBottom:headerColor.border,\n        }}>\n          <Logo className = {'header_logo_'+size} fill = {headerColor.fillColor}/>\n        </div> \n          </div>\n          <ul className = {'tabs_ul'}>\n              <TabButton size = {size} theme = {headerColor} value = {props.headerColorData[0]} to = \"/waiting\" title = {initTabLang.waiting} color = {headerColor.mainColor}/> \n              <TabButton size = {size} theme = {headerColor} value = {props.headerColorData[1]} to = {url} title = {initTabLang.interpretation} color = {headerColor.mainColor}/>\n          </ul>\n        <div className = {'header_login_info_div_'+props.size}\n          style = {{\n            borderLeft: headerColor.border,\n          }}>\n            <div>\n          <p style = {{cursor:'pointer'}}\n            onClick = {props.onClickId}> {localStorage.getItem(\"userID\")}\n          </p>\n          </div>\n        </div>\n      </div>\n  )\n\n  return (\n    <>\n    {header}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  headerColorData: state.HeaderColorDataReducer.headerColorData,\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","/Users/kimseongjae/source/eyeDX/src/components/login_form/login_form.js",["242","243","244","245","246"],"import React, {useState,useEffect, useLayoutEffect} from 'react'\nimport { connect } from 'react-redux'\nimport \"./login_form.css\";\nimport {ReactComponent as Logo} from \"../../images/logo_eyedx.svg\";\nimport {ReactComponent as Icon} from \"../../images/eye_line.svg\";\nimport {passwordValid, IDValid} from \"../../common/vaildate\";\nimport { useHistory } from 'react-router';\nimport {useCookies} from 'react-cookie';\nimport * as actions from '../../actions/login/login';\n\nconst loginModel = {\n    id: \"\",\n    password: \"\",\n    isRole: true,\n    isRember: true,\n}\n\nconst errorModel = {\n    idError: \"\",\n    passwordError: \"\",\n}\n\nconst loginLangModel = {\n    error: {\n        blank_id: \"Please enter your ID.\",\n        blank_password: \"Please enter your Password.\",\n        invalid_interpretation_id: \"Not a valid interpretating ID. Please check your ID again.\",\n        invalid_operation_id: \"Not a valid operating ID. Please check your ID again.\",\n        not_match_format_id: \"ID does not match the standard. Please check your ID again.\",\n        not_match_format_password: \"Password does not match the standard. Please check your password again.\"\n    },\n    id: \"ID\",\n    interpretaton_id: \"Interpretation ID\",\n    login: \"Log in\",\n    password: \"Password\",\n    please_enter_your_id: \"Please Enter Your ID\",\n    please_enter_your_password: \"Please Enter Your Password\",\n    process_login: \"Log In\",\n    remember_account: \"Remember Account\"\n}\n\nconst LoginForm = (props) => {\n    const [errors, setErrors] = useState(errorModel);\n    const [formValue, setFormValue] = useState(loginModel);\n    const [isShowPassword, setIsShowPassowrd] = useState(false);\n    const [initLoginLang, setInitLoginLang] = useState(loginLangModel);\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n    const [errorFromServer, setErrorFromServer] = useState(\"\");\n\n    const updateLoginLang = props.loginLang;\n\n    const history = useHistory();\n\n    const handleHoldStart = (e) =>{\n        setIsShowPassowrd(true);\n    }\n\n    const handleHoldEnd = (e) => {\n        setIsShowPassowrd(false);\n    }\n\n    const handleIDChange = e => {\n        const {id, value} = e.target;\n        setFormValue({\n            ...formValue,\n            \"id\":value\n        })\n    }\n\n    const handlePassowrdChange = e => {\n        const {password, value} = e.target;\n        setFormValue({\n            ...formValue,\n            \"password\":value\n        })\n    }\n\n    const handleRoleChange = () => {\n        formValue.isRole ? setFormValue({\n            ...formValue,\n            \"isRole\":false,\n        }) : setFormValue({\n            ...formValue,\n            \"isRole\":true,\n        })\n    }\n\n    const handleRemberChange = () => {\n        if(formValue.isRember){\n            setFormValue({\n            ...formValue,\n            \"isRember\":false,});\n        } else {\n             setFormValue({\n            ...formValue,\n            \"isRember\":true});\n        }\n       \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const login_req = {\n            id: formValue.id,\n            pwd: formValue.password,\n            level: formValue.isRole ? 100 : 0,\n            lang: localStorage.getItem(\"lang\"),\n        }\n        console.log(login_req);\n        localStorage.setItem(\"userID\",formValue.id);\n        props.reqLogin(login_req, onSucessful, onFailure);\n    }\n\n    const onSucessful = (token) => {\n        setCookie('token',token);\n        history.push('/');\n    }\n\n    const onFailure = (massage) => {\n        setErrorFromServer(massage);\n    }\n\n    const vaildate = (e) => {\n        e.preventDefault();\n        let temp = errors;\n        if(IDValid(formValue.id) === \"empty\"){\n            temp.idError = initLoginLang.error.blank_id;\n        } else if(IDValid(formValue.id) === \"invalid\"){\n            temp.idError = initLoginLang.error.not_match_format_id;\n        } else if(IDValid(formValue.id) === \"valid\") {\n            temp.idError = undefined;\n        }\n        if(passwordValid(formValue.password) === \"empty\") {\n            temp.passwordError = initLoginLang.error.blank_password;\n        } else if(passwordValid(formValue.password) === \"invalid\"){\n            temp.passwordError = initLoginLang.error.not_match_format_password;\n        } else if(passwordValid(formValue.password) === \"valid\"){\n            temp.passwordError = undefined;\n        }\n        setErrors({\n            ...temp,\n        })\n\n        if(temp.idError === undefined && temp.passwordError === undefined){\n            handleSubmit(e);\n        }\n    }\n\n    useLayoutEffect(()=>{\n        // debugger;\n        if(!window.location.hash){\n            window.location = window.location + '#loaded';\n            window.location.reload();\n        } \n    },[])\n\n    useEffect(() => {\n        if(updateLoginLang !== undefined){\n            if(Object.keys(updateLoginLang).length !== 0){\n                setInitLoginLang(updateLoginLang);\n            }\n        }\n        if(errorFromServer !== ''){\n            alert(errorFromServer);\n        }\n    },[errorFromServer,updateLoginLang])\n\n    const LoginFormHeader = (\n        <div className = {'login_header_'+props.size}>\n            <div className = {'login_header_title_'+props.size}>\n                {initLoginLang.login}\n            </div>\n        </div>\n    )\n\n    const LoginFromBody = (\n        <div className = {'login_body_'+props.size}>\n            <div className = {'login_body_content_'+props.size}>\n                <Logo className = {\"login_body_logo_\"+props.size}/>\n                <form name = 'login_form' onSubmit = {handleSubmit}>\n                    <div className = {'check_id_'+props.size}>\n                        <label className = {'check_id_label_'+props.size}>\n                        <input type = 'checkbox' checked={formValue.isRole} onChange={handleRoleChange} className = {'check_id_checkbox_'+props.size}></input>\n                            <span className = {'check_label_'+props.size}>{initLoginLang.interpretaton_id}</span>\n                        </label>\n                    </div>\n                    <div className = {'input_title_'+props.size}>\n                        <span className = {'input_title_name_'+props.size}> {initLoginLang.id} </span>\n                        <span className = {'input_title_error_'+props.size}> {errors.idError} </span>\n                    </div>\n                    <div className = {'input_email_wrap_'+props.size}>\n                    <input type = 'text' onChange={handleIDChange} label='id' placeholder={initLoginLang.please_enter_your_id} className = {'input_'+props.size}></input>\n                    </div>\n                    <div className = {'input_title_'+props.size}>\n                        <span className = {'input_title_name_'+props.size}> {initLoginLang.password} </span>\n                        <span className = {'input_title_error_'+props.size}> {errors.passwordError} </span>\n                    </div>\n                    <div className = {'input_password_wrap_'+props.size}>\n                    <input type = {isShowPassword ? 'text' : 'password'} onChange={handlePassowrdChange} label='password' placeholder={initLoginLang.please_enter_your_password} className = {'input_'+props.size}></input>\n                        <div onMouseDown={handleHoldStart} onMouseUp={handleHoldEnd} ><Icon className = {isShowPassword ? \"passowrd_icon_color_\"+props.size : \"passowrd_icon_\"+props.size}/></div>\n                    </div>\n                    <div className = {'input_password_wrap_'+props.size}>\n                    <input type = \"submit\" value={initLoginLang.process_login} className = {'sumbit_btn_'+props.size}></input>\n                    </div>\n                    <div className = {'check_remember_'+props.size}>\n                        <label className = {'check_id_label_'+props.size}>\n                        <input type = 'checkbox' checked={formValue.isRember} onChange={handleRemberChange} className = {'check_id_checkbox_'+props.size}></input>\n                            <span className = {'check_label_'+props.size}> {initLoginLang.remember_account}</span>\n                        </label>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n\n    return (\n        <div>\n            {LoginFormHeader}\n            {LoginFromBody}\n        </div>\n    )    \n}\n\nconst mapStateToProps = (state) => ({\n    //loginLangs: state.LangReducer.loginLang,\n    loginRes: state.LoginReducer.loginRes,\n})\n  \nconst mapDispatchToProps = {\n    //getLoginLang: actions.GetLoginLang,\n    reqLogin: actions.RequestLogin,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n","/Users/kimseongjae/source/eyeDX/src/actions/waiting/waiting_data.js",["247"],"import axios from 'axios'\nimport React from 'react'\nimport { ACTION_TYPES } from '../actionType'\nimport { waitingListUrl } from '../api'\n\nexport const GetWaitingData = (param,auth) => dispatch => {\n    let filterValue = JSON.stringify(param);\n    localStorage.setItem(\"filter-value\",filterValue);\n\n    dispatch({\n        type: ACTION_TYPES.DATA_LOADING,\n        payload: true\n    })\n\n    dispatch({\n        type: ACTION_TYPES.HEADER_COLOR,\n        payload: [true,false]\n    })\n\n    axios.get(waitingListUrl,{params: param, headers: {\n        'Authorization': auth, \n      }}).then(\n        res => {\n            dispatch({\n                type: ACTION_TYPES.FETCH_WAITING_DATA,\n                payload: res.data,\n            });\n            localStorage.setItem(\"first_code\", res.data.Pagination.firstCode);\n        }\n    ).catch((e) => {\n        console.log(e);\n    }).then(r=>(\n        dispatch({\n            type: ACTION_TYPES.DATA_LOADING,\n            payload: false\n        })\n    ))\n}\n","/Users/kimseongjae/source/eyeDX/src/actions/langauge/login_lang.js",["248"],"import axios from 'axios'\nimport React from 'react'\nimport { ACTION_TYPES } from '../actionType'\nimport { loginLangUrl } from '../api'\n\nexport const GetLoginLang = (param) => dispatch => {\n\n    axios.get(loginLangUrl,{params: param}).then(\n        res => {\n            dispatch({\n                type: ACTION_TYPES.FETCH_LOGIN_LENG,\n                payload: res.data,\n            })\n        }\n    ).catch(e => {\n        console.log(e);\n        // if(e.response.status === 401) {\n        //     dispatch({\n        //         type: \"NULL\",\n        //         status: e.response.status,\n        //     })\n        // }\n    });\n}\n","/Users/kimseongjae/source/eyeDX/src/actions/langauge/waiting_list_lang.js",["249"],"import axios from 'axios'\nimport React from 'react'\nimport { ACTION_TYPES } from '../actionType'\nimport { waitingListLangUrl } from '../api'\n\nexport const GetWaitingListLang = (param) => dispatch => {\n    axios.get(waitingListLangUrl,{params: param}).then(\n        res => {\n            dispatch({\n                type: ACTION_TYPES.FETCH_WAITING_LIST_LENG,\n                payload: res.data,\n            })\n        }\n    ).catch((e) => {\n        console.log(e);\n    });\n}\n","/Users/kimseongjae/source/eyeDX/src/components/parts/modal/modal.js",["250"],"import React from 'react';\nimport CheckBox from '../check_box/check_box';\nimport \"./modal.css\";\n\nconst Modal = (props) => {\n    return (\n        <div className = \"modal_option\" style = {{\n            visibility: `${props.visibility}`,\n            top: `${props.top}`,\n            right: `${props.right}`,\n            width: `${props.width}`,\n            padding: `${props.padding}`\n        }}>\n           {props.list}\n        </div>\n    )\n}\n\nexport default Modal;","/Users/kimseongjae/source/eyeDX/src/reducers/lang_reducers.js",[],"/Users/kimseongjae/source/eyeDX/src/reducers/login_reducer.js",[],"/Users/kimseongjae/source/eyeDX/src/reducers/interpretation_data_reducer.js",[],"/Users/kimseongjae/source/eyeDX/src/reducers/header_color_reducer.js",[],"/Users/kimseongjae/source/eyeDX/src/reducers/loader_reducer.js",[],"/Users/kimseongjae/source/eyeDX/src/reducers/waiting_data_reducer.js",[],"/Users/kimseongjae/source/eyeDX/src/actions/api.js",[],"/Users/kimseongjae/source/eyeDX/src/pages/home/interpretation/initModel.js",[],"/Users/kimseongjae/source/eyeDX/src/actions/actionType.js",[],"/Users/kimseongjae/source/eyeDX/src/common/vaildate.js",[],"/Users/kimseongjae/source/eyeDX/src/components/parts/input_range/input_range.js",["251"],"import \"./input_range.css\"\nimport RcSlider, { Range } from \"rc-slider\";\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\n\n\nconst RangeSlider = RcSlider.createSliderWithTooltip(RcSlider.Range);\nconst InputSlider = RcSlider.createSliderWithTooltip(RcSlider);\n\n\nexport const CustomInputRange = (props) => {\n    return (\n        <div className = 'range_slider_div'>\n            <RangeSlider \n                min = {props.min}\n                max = {props.max}\n                onChange = {props.onChange}\n                value = {props.value}\n                allowCross = {false}\n                tipProps={{visible:true, placement:\"bottom\"}}\n                trackStyle = {[{background: \"#0069bb\", height: 3}]}\n                handleStyle\t= {[{borderColor: \"#0069bb\"},{borderColor: \"#0069bb\"}]}\n            />\n        </div>    \n    )\n}\n\nexport const CustomInputSlider = (props) => {\n    return (\n        <div className = 'range_slider_div'>\n            <InputSlider\n                min = {props.min}\n                max = {props.max}\n                onChange = {props.onChange}\n                value = {props.value}\n                tipProps={{visible:true, placement:\"bottom\", prefixCls:\"range\"}}\n                tipFormatter = {(value) => `${value} month ago`}\n                trackStyle = {[{background: \"#0069bb\", height: 3}]}\n                handleStyle\t= {[{borderColor: \"#0069bb\"}]}\n            />\n        </div>\n    )\n}\n\nexport const CustomDotInputSlider = (props) => {\n    return (\n        <InputSlider\n        min = {props.min}\n        max = {props.max}\n        onChange = {props.onChange}\n        onAfterChange = {props.onAfterChange}\n        value = {props.value}\n        tipProps={{visible:props.isTipShow, placement:\"bottom\"}}\n        tipFormatter = {(value) => \n            `${value === 1 ? 'Worst' : \n                value === 2 ? 'Bad' : \n                value === 3 ? \"Good\" : \n                value === 4 ? \"Great\" : \n                value === 5 ? \"Perfect\": \"\"}`}\n        trackStyle = {[{background: \"#404040\", height: 3}]}\n        handleStyle\t= {[{borderColor: \"#0069bb\", background: \"#000000\"}]}\n        railStyle = {{background: \"#404040\"}}\n        //dotStyle={{backgroundColor: \"#404040#\"}}\n        //activeDotStyle = {{borderColor: \"#0069bb\", background: \"#000000\"}}\n        marks = {props.marks}\n        included={false}\n        dots\n        />\n    )\n}\n\nexport const CustomNormalInputSlider = (props) => {\n    return (\n        <RcSlider\n            min = {props.min}\n            max = {props.max}\n            onChange = {props.onChange}\n            value = {props.value}\n            trackStyle = {props.trackStyle}\n            handleStyle\t= {props.handleStyle}\n            railStyle = {props.railStyle}\n        />\n    )\n}\n\n","/Users/kimseongjae/source/eyeDX/src/components/parts/check_box/check_box.js",[],"/Users/kimseongjae/source/eyeDX/src/components/parts/button/button.js",[],"/Users/kimseongjae/source/eyeDX/src/components/parts/pager/pager.js",["252","253"],"import React,{useState,useEffect} from 'react'\nimport {ReactComponent as PagerJump} from \"../../../images/paging_jump_active.svg\"\nimport {ReactComponent as PagerNext} from \"../../../images/paging_next_active.svg\";\nimport \"./pager.css\"\n\nconst pagerModel = {\n    dataCount:0,\n    endPage: 1,\n    nextBlock: 0,\n    pageNumber: 0,\n    nextPage: 0,\n    prevBlock: 0,\n    prevPage: 0,\n    startPage: 1,\n    totalPage: 0,\n}\n\nconst Pager = (props) => {\n    const [pagers, setPagers] = useState(pagerModel);\n    const [clickedId, setClickedId] = useState(0);\n    const [initButtons, setInitButtons] = useState([1]);\n\n    const [currentPageNumber, setCurrentPageNumber] = useState(0);\n\n    const updateButtons = props.buttons;\n    const isFromFilter = props.fromFilter;\n\n    const currentPage = props.currentPage;\n\n    useEffect(() => {\n        if(updateButtons !== undefined && Object.keys(updateButtons).length !== 0) {\n            const pagerList = [];\n            const listLength = updateButtons.endPage - updateButtons.startPage + 1;\n            for(let i = 0; i<listLength; i++){\n                pagerList.push(updateButtons.startPage+i);\n            }\n            setPagers(updateButtons);\n            setInitButtons(pagerList);\n        } else {\n            const pagerList = [];\n            const listLength = pagers.endPage - pagers.startPage + 1;\n            for(let i = 0; i<listLength; i++){\n                pagerList.push(pagers.startPage+i);\n            }\n            setInitButtons(pagerList);\n        }\n        setClickedId(currentPage%5-1);\n        // if(isFromFilter){\n        //     setClickedId(currentPage%5-1);\n        // }\n    },[updateButtons])\n\n    const handleClick = (e,i) => {\n        if(initButtons.length !== 1) {\n            setCurrentPageNumber(i);\n            setClickedId(i); \n            props.buttonsEvent(e,i);\n        }\n    }\n\n    const hanldeJumpFirstClick = (e) => {\n        if(initButtons.length !== 1){\n            props.onClickPreBlock(e);\n            setClickedId(0);\n        }\n    }\n\n    const handleJumpLastClick = (e) => {\n        if(initButtons.length !== 1){\n            props.onClickNextBlock(e);\n            if(pagers.nextBlock === -1) {\n                setCurrentPageNumber(pagers.endPage-pagers.startPage);\n                setClickedId(pagers.endPage-pagers.startPage);\n            } else {\n                setClickedId(0);\n            } \n        }\n    }\n\n    const handleNextClick = (e) => {\n        if(initButtons.length !== 1){\n            props.onClickNextPage(e);\n            if(currentPageNumber+1 === initButtons.length){\n                if(pagers.nextBlock === -1) {\n                    setCurrentPageNumber(initButtons.length-1);\n                    setClickedId(initButtons.length-1);\n                } else {\n                    setCurrentPageNumber(0);\n                    handleJumpLastClick(e);\n                }\n            } else {\n                setCurrentPageNumber(currentPageNumber+1);\n                setClickedId(currentPageNumber+1);\n            }\n        }\n    }\n\n    const handleBackClick = (e) => {\n        if(initButtons.length !== 1) {\n            props.onClickPrePage(e);\n            if(currentPageNumber-1 === -1){\n                if(pagers.prevBlock === -1) {\n                    setCurrentPageNumber(0);\n                    setClickedId(0);\n                }\n                else {\n                    setCurrentPageNumber(4);\n                    setClickedId(4);\n                }\n            } else {\n                setCurrentPageNumber(currentPageNumber-1);\n                setClickedId(currentPageNumber-1);\n            }\n        }\n    }\n\n    const GrounpButton = (\n        <div className = 'pager_number_div'>\n        {initButtons.map((label,i) => (\n            <div \n                key = {i} \n                className = {i === clickedId ? \"pager_number_button_div active\" : \"pager_number_button_div\"}\n                onClick={(e)=> handleClick(e,i)}>\n                <span className = 'pager_label'> {label} </span>\n            </div>\n            ))}\n        </div>\n    )\n\n    return (\n        <div className = 'pager_div'>\n            <div className = 'pager_button_div' onClick = {(e) => hanldeJumpFirstClick(e)}>\n                <PagerJump className = 'pager_jump'/>\n            </div>\n            <div className = 'pager_button_div' onClick = {(e) => handleBackClick(e)}>\n                <PagerNext className = 'pager_next'/>\n            </div>\n            {GrounpButton}\n            <div className = 'pager_button_div' onClick = {(e) => handleNextClick(e)}>\n                <PagerNext className = 'pager_next' transform = {`rotate(180)`}/>\n            </div> \n            <div className = 'pager_button_div' onClick = {(e) => handleJumpLastClick(e)}>\n                <PagerJump className = 'pager_jump' transform = {`rotate(180)`}/>\n            </div>    \n        </div>\n    )\n}\n\nexport default Pager;\n","/Users/kimseongjae/source/eyeDX/src/components/parts/table/table.js",[],"/Users/kimseongjae/source/eyeDX/src/components/parts/selector/selector.js",[],"/Users/kimseongjae/source/eyeDX/src/components/loader/loader.js",["254"],"import Loading from \"../../images/loading.gif\"\nimport BlueLoading from \"../../images/loading-blue.gif\"\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport \"./loader.css\";\n\nexport const Loader = () => {\n    return (\n        <div>\n            <img src = {Loading} alt = \"loading\" className = \"loading_dark_gif\"/>\n        </div>\n    )\n}\n\nexport const BlueLoader = () => {\n    return (\n        <img src = {BlueLoading} alt = \"loading\" className = \"loading_gif\"/>\n    )\n}","/Users/kimseongjae/source/eyeDX/src/actions/interpretation/interpretation_data.js",["255","256","257"],"import axios from 'axios'\nimport React from 'react'\nimport { ACTION_TYPES } from '../actionType'\nimport { interpreationUrl,info,send,vote } from '../api'\nimport { withCookies, Cookies } from \"react-cookie\";\n\nexport const GetInterpretationData = (userId,param,auth) => dispatch => {\n    dispatch({\n        type: ACTION_TYPES.DATA_LOADING,\n        payload: true\n    })\n    dispatch({\n        type: ACTION_TYPES.HEADER_COLOR,\n        payload: [false,true]\n    })\n\n    axios.get(interpreationUrl+userId+info,{params: param,headers: {'Authorization': auth,}}).then(\n        res => {\n            dispatch({\n                type: ACTION_TYPES.FETCH_INTERPRETATION_DATA,\n                payload: res.data,\n            })\n        }\n    ).catch((e) => {\n        console.log(e);\n    }).then(r => (\n        dispatch({\n            type: ACTION_TYPES.DATA_LOADING,\n            payload: false\n        })\n    ));\n}\n\nexport const SendInterpretationData = (userId,body,auth,onSuccessful) => dispatch => {\n    var filterValue = JSON.parse(localStorage.getItem(\"filter-value\"));\n    dispatch({\n        type: ACTION_TYPES.DATA_LOADING,\n        payload: true\n    })\n\n    axios.post(interpreationUrl+userId+send,body,{params: filterValue,headers: {'Authorization': auth,}}).then(\n        res => {\n            dispatch({\n                type: ACTION_TYPES.SEND_INTERPRETATION_DATA,\n                payload: res.data,\n            })\n            onSuccessful(res.data.ID);\n        }\n    ).catch((e) => {\n        console.log(e);\n    }).then(r => (\n        dispatch({\n            type: ACTION_TYPES.DATA_LOADING,\n            payload: false\n        })\n    ))\n}\n\nexport const SendImageQulityData = (userId,params,auth,nextRequest) => dispatch => {\n    dispatch({\n        type: ACTION_TYPES.DATA_LOADING,\n        payload: true\n    })\n\n    axios.get(interpreationUrl+userId+vote,{params: params,headers: {'Authorization': auth,}}).then(\n        res => {\n            dispatch({\n                type: ACTION_TYPES.SEND_INTERPRETATION_DATA,\n                payload: res.data,\n            })\n\n            nextRequest(res.data.result);\n        }\n    ).catch((e) => {\n        console.log(e);\n    }).then(r => (\n        dispatch({\n            type: ACTION_TYPES.DATA_LOADING,\n            payload: false\n        })\n    ))\n}\n","/Users/kimseongjae/source/eyeDX/src/components/image_zoom/image_zoom.js",["258"],"import React, {useState, useRef, useEffect, useLayoutEffect} from 'react';\nimport \"./image_zoom.css\";\nimport {CustomNormalInputSlider} from '../parts/input_range/input_range'\nimport {useDimensions} from \"../../common/sizeTgarget\";\nimport { Icon } from '@iconify/react';\nimport zoomIn from '@iconify-icons/akar-icons/zoom-in';\n\nconst MousePosition = {\n    position_x : 0,\n    position_y : 0,\n}\n\nconst OriginModel = {\n    origin_x: 0,\n    origin_y:0,\n}\n\nconst DragModel = {\n    start_x: 0,\n    start_y: 0,\n}\n\nconst DistanceModel = {\n    distance_x: 0,\n    distance_y: 0,\n}\n\nconst currentImgPostionModel = {\n    current_x: 0,\n    current_y: 0,\n}\n\nconst ImageSizedModel = {\n    width: 0,\n    height: 0,\n}\n\nconst ImageZoom = (props) => {\n    const targetRef = useRef();\n    const size = useDimensions(targetRef); /// 처음 이미지 사이즈\n    const [changeImg, setChangeImg] = useState(ImageSizedModel); /// 바뀌는 이미지 사이즈\n\n    const [position, setPosition] = useState(MousePosition); /// 마우스 커서 위치\n    const [origin, setOrigin] = useState(OriginModel); /// 이미지 줌인 아웃 할때에 기준값\n    const [scale, setScale] = useState(1); /// 이미지 줌인 아웃 크기 \n\n    const [isDrag, setIsDrag] = useState(false); /// 클릭하고 있는지 아는지 여부 판단\n    const [dragStart, setDragStart] = useState(DragModel); ///처음 드레그 시작 위치\n    const [distance, setDistance] = useState(DistanceModel); ///드레그 하기시작하면서 변화되는 값\n    const [current, setCurrent] = useState(currentImgPostionModel); ///현제 이미지 위치\n\n    const [sliderOpacity, setSliderOpacity] = useState(0); /// 슬라이더 투명도\n    const [changedSize, setChangedSize] = useState(size);\n    const [isImgLoad, setIsImgLoad] = useState(true);\n    const [currentSrc, setCurrentSrc] = useState(\"\");\n    const [didMount, setDidMount] = useState(false);\n    const src = props.src;\n    const id = props.id;\n    const img = new Image();\n\n    useLayoutEffect(() => {\n        setCurrentSrc(\"\");\n    },[id])\n\n    useEffect(() => {\n        setDidMount(false);\n        img.src = src;\n        img.ref = targetRef;\n        if(!didMount){\n            if(src === \"none\"){\n                setCurrentSrc(src);\n                setIsImgLoad(false);\n            } else {\n                img.onload = () => {\n                    handleOnLoad(img.src,img.ref);\n                };\n            }\n        }\n        return () => setDidMount(true);\n    },[id,src])\n\n    const handleOnLoad = (src,ref) => {\n        setCurrentSrc(src);\n        setIsImgLoad(false);\n        const target = ref;\n        if(target.current !== undefined){\n            const sizeModel = {\n                width: target.current.offsetWidth,\n                height:target.current.offsetHeight,\n            }\n            setChangedSize(sizeModel);\n        }\n    }\n\n    const handleWheelZoom = e => {\n        // e.preventDefault();\n        setSliderOpacity(1.0); \n        ///마우스 휠 올릴때 => 줌인\n        if(e.deltaY < 0) {\n            if(changeImg.width*1.08 >= 4032){\n                setScale(scale);\n                setChangeImg({\n                    width: 4032,\n                    height: 3020,\n                });\n            } else {\n                setScale(scale*1.08);\n                setChangeImg({\n                    width: scale === 1 ? changedSize.width : changeImg.width*1.08,\n                    height: scale === 1 ? changedSize.height : changeImg.height*1.08,\n                });\n            }\n        }\n        ///마우스 휠 내릴때\n        if(e.deltaY > 0){\n            /// 1.0 배 이하로 작아지지 않도록 고정\n            if(changeImg.width/1.08 < changedSize.width) {\n                setScale(1);\n                /// 최소 스케일로 돌아왔을때 제자리로 복구\n                setDistance({\n                    distance_x: 0,\n                    distance_y: 0, \n                });\n                setCurrent({\n                    current_x:0,\n                    current_y:0\n                });\n                setChangeImg({\n                    width: 0,\n                    height: 0,\n                })\n            } else {\n                setScale(scale/1.08);\n                setChangeImg({\n                    width: changeImg.width/1.08,\n                    height: changeImg.height/1.08,\n                })\n            }\n        }\n        setOrigin({\n            origin_x: position.position_x,\n            origin_y: position.position_y,\n        });\n        setTimeout(()=>{\n            setSliderOpacity(0)\n        },3000);\n    }\n\n    const handleMouseMove = e => {\n        e.preventDefault();\n        ///마우스 클릭한 상태가 아닐때\n        if(e.clientX > (window.innerWidth - 350)/2) {\n            setPosition({\n                position_x:e.clientX - (window.innerWidth-350)/2,\n                position_y:e.clientY - 60,\n            });\n        } else {\n            setPosition({\n                position_x:e.clientX,\n                position_y:e.clientY - 60,\n            });\n        }\n        ///마우스를 클릭하고 있는 상태일때 => 드레그 가능\n        if(isDrag){\n            if(e.clientX > (window.innerWidth - 350)/2) {\n                setDistance({\n                    distance_x:current.current_x + ((e.clientX - (window.innerWidth-350)/2)-dragStart.start_x),\n                    distance_y:current.current_y + ((e.clientY - 60) - dragStart.start_y),\n                });\n            } else {\n                setDistance({\n                    distance_x:current.current_x + (e.clientX-dragStart.start_x),\n                    distance_y:current.current_y + ((e.clientY-60) - dragStart.start_y),\n                });\n            }\n        }\n    }\n\n    ///드레그 시작\n    const handleDragStart = (e) => {\n        e.preventDefault();\n        if(scale === 1){\n            setIsDrag(false); /// 처음 상태에선 드레그 불가능을 하기 위해 isDrag == false\n        } else {\n            setIsDrag(true);\n            if(e.clientX > (window.innerWidth - 350)/2) {\n                setDragStart({\n                    start_x: e.clientX - (window.innerWidth-350)/2,\n                    start_y: e.clientY - 60,\n                });\n            } else {\n                setDragStart({\n                    start_x: e.clientX,\n                    start_y: e.clientY - 60,\n                });\n            }\n        }\n    };\n    \n    ///드레그를 완료했을때\n    const handleDragEnd = (e) => {\n        e.preventDefault();\n        setIsDrag(false);\n        setCurrent({\n            current_x: distance.distance_x,\n            current_y: distance.distance_y,\n        });\n    };\n\n    ///드레그하다가 이미지를 벗어날을 경우 드레그 불가능상태로 바꾸기\n    const handleMouseLeave = (e) => {\n        e.preventDefault();\n        setIsDrag(false);\n    }\n\n    ///더블클릭 후 원래상태로 돌아오기\n    const hanldeDoubleClick = (e) => {\n        setSliderOpacity(1.0);\n        setScale(1.0);\n        setDistance({\n            distance_x: 0,\n            distance_y: 0,\n        });\n        setCurrent({\n            current_x: 0,\n            current_y: 0,\n        });\n        setPosition({\n            position_x: 0,\n            position_y: 0,\n        });\n        setChangeImg({\n            width: 0,\n            height: 0,\n        })\n        setTimeout(()=>{\n            setSliderOpacity(0)\n        },3000);\n    }\n\n    const handleRightClick = (e) =>{\n        if(e.type === 'contextmenu'){\n            e.preventDefault();\n        }\n    }\n\n    const darkSlider = (\n        <div className = 'dark_slider_div' style = {{opacity: `${sliderOpacity}`}}>\n            <Icon icon={zoomIn} className='dark_slider_icon'></Icon>\n            <CustomNormalInputSlider\n            min = {0}\n            max = {4032-changedSize.width} \n            onChange={handleWheelZoom}\n            value = {changeImg.width === 0 ? changeImg.width : changeImg.width-changedSize.width} \n            trackStyle = {[{backgroundColor: \"white\", height: 4}]}\n            railStyle = {{backgroundColor: \"#404040\"}}\n            handleStyle\t= {[{border: \"white solid 2px\", backgroundColor:\"black\"}]}\n        />\n        </div>\n    )\n\n    const imgZoom = (\n        <>\n        {isImgLoad ? <span>loading</span> : currentSrc === \"\" ? <span>loading</span> : currentSrc === \"none\" ? <span>no data</span>: <div className = \"image_zoom_div\"> \n            <img className = 'img_src' \n            alt=''\n            ref = {targetRef}\n            onContextMenu = {(e)=>handleRightClick(e)}\n            onWheel = {(e)=>handleWheelZoom(e)} \n            onMouseMove = {(e)=>handleMouseMove(e)}\n            onMouseDown = {handleDragStart}\n            onMouseUp = {(e)=>handleDragEnd(e)}\n            onMouseLeave = {handleMouseLeave}\n            onDoubleClick = {hanldeDoubleClick} \n            style = {{\n                transform: `scale(${scale}) translate(${distance.distance_x+'px'}, ${distance.distance_y+'px'})`,\n                transformOrigin: `${origin.origin_x+'px'} ${origin.origin_y+'px'}`}}\n            src = {currentSrc}\n            /></div>}\n        </>\n    )\n\n    return(\n        <div className = \"image_zoom_wrap\">\n            {imgZoom}\n            {darkSlider}\n        </div>\n    )\n}\n\nexport default ImageZoom;","/Users/kimseongjae/source/eyeDX/src/components/parts/lock/lock.js",[],"/Users/kimseongjae/source/eyeDX/src/actions/login/login.js",["259"],"import axios from 'axios'\nimport React from 'react'\nimport { ACTION_TYPES } from '../actionType'\nimport { loginUrl } from '../api'\n\nexport const RequestLogin = (data, onSuccessful, onFailure) => dispatch => {\n    axios.post(loginUrl,data,{headers: {'content-type' : 'application/x-www-form-urlencoded'}}).then(\n         res => {\n            dispatch({\n                type: ACTION_TYPES.FETCH_LOGIN,\n                payload: res.data,\n            });\n            onSuccessful(res.data);\n        }\n    ).catch((e) => {\n        console.log(e);\n        dispatch({\n            type: ACTION_TYPES.FETCH_LOGIN,\n            payload: e.response.data,\n        });\n        onFailure(e.response.data.message);\n    });\n}\n","/Users/kimseongjae/source/eyeDX/src/common/sizeTgarget.js",["260","261"],"import { useEffect, useState, useLayoutEffect } from 'react';\n\nexport const useDimensions = (targetRef) =>{\n    const getDimensions = () => {\n      return {\n        width: targetRef.current ? targetRef.current.offsetWidth : 0,\n        height: targetRef.current ? targetRef.current.offsetHeight : 0\n      };\n    };\n  \n    const [dimensions, setDimensions] = useState(getDimensions);\n  \n    const handleResize = () => {\n      setDimensions(getDimensions());\n    };\n  \n    useEffect(() => {\n      window.addEventListener(\"resize\", handleResize);\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n  \n    useLayoutEffect(() => {\n      handleResize();\n    }, []);\n    return dimensions;\n}","/Users/kimseongjae/source/eyeDX/src/components/parts/label/label.js",[],"/Users/kimseongjae/source/eyeDX/src/components/slider/slider.js",[],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":8,"column":46,"nodeType":"268","messageId":"269","endLine":8,"endColumn":50},{"ruleId":"266","severity":1,"message":"270","line":8,"column":52,"nodeType":"268","messageId":"269","endLine":8,"endColumn":60},{"ruleId":"266","severity":1,"message":"271","line":8,"column":61,"nodeType":"268","messageId":"269","endLine":8,"endColumn":74},{"ruleId":"266","severity":1,"message":"272","line":1,"column":8,"nodeType":"268","messageId":"269","endLine":1,"endColumn":13},{"ruleId":"266","severity":1,"message":"273","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"266","severity":1,"message":"274","line":1,"column":15,"nodeType":"268","messageId":"269","endLine":1,"endColumn":30},{"ruleId":"266","severity":1,"message":"273","line":1,"column":31,"nodeType":"268","messageId":"269","endLine":1,"endColumn":39},{"ruleId":"266","severity":1,"message":"275","line":3,"column":9,"nodeType":"268","messageId":"269","endLine":3,"endColumn":12},{"ruleId":"266","severity":1,"message":"276","line":3,"column":13,"nodeType":"268","messageId":"269","endLine":3,"endColumn":16},{"ruleId":"266","severity":1,"message":"277","line":3,"column":17,"nodeType":"268","messageId":"269","endLine":3,"endColumn":19},{"ruleId":"266","severity":1,"message":"278","line":6,"column":9,"nodeType":"268","messageId":"269","endLine":6,"endColumn":17},{"ruleId":"279","severity":1,"message":"280","line":32,"column":6,"nodeType":"281","endLine":32,"endColumn":8,"suggestions":"282"},{"ruleId":"266","severity":1,"message":"283","line":1,"column":16,"nodeType":"268","messageId":"269","endLine":1,"endColumn":29},{"ruleId":"266","severity":1,"message":"284","line":1,"column":56,"nodeType":"268","messageId":"269","endLine":1,"endColumn":65},{"ruleId":"266","severity":1,"message":"271","line":2,"column":57,"nodeType":"268","messageId":"269","endLine":2,"endColumn":70},{"ruleId":"266","severity":1,"message":"285","line":2,"column":72,"nodeType":"268","messageId":"269","endLine":2,"endColumn":81},{"ruleId":"266","severity":1,"message":"275","line":5,"column":9,"nodeType":"268","messageId":"269","endLine":5,"endColumn":12},{"ruleId":"266","severity":1,"message":"276","line":5,"column":13,"nodeType":"268","messageId":"269","endLine":5,"endColumn":16},{"ruleId":"266","severity":1,"message":"277","line":5,"column":17,"nodeType":"268","messageId":"269","endLine":5,"endColumn":19},{"ruleId":"266","severity":1,"message":"286","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":14},{"ruleId":"266","severity":1,"message":"287","line":9,"column":13,"nodeType":"268","messageId":"269","endLine":9,"endColumn":18},{"ruleId":"266","severity":1,"message":"288","line":22,"column":10,"nodeType":"268","messageId":"269","endLine":22,"endColumn":17},{"ruleId":"266","severity":1,"message":"289","line":22,"column":18,"nodeType":"268","messageId":"269","endLine":22,"endColumn":27},{"ruleId":"266","severity":1,"message":"290","line":29,"column":9,"nodeType":"268","messageId":"269","endLine":29,"endColumn":17},{"ruleId":"279","severity":1,"message":"280","line":104,"column":5,"nodeType":"281","endLine":104,"endColumn":26,"suggestions":"291"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"292","line":11,"column":9,"nodeType":"268","messageId":"269","endLine":11,"endColumn":19},{"ruleId":"266","severity":1,"message":"289","line":87,"column":20,"nodeType":"268","messageId":"269","endLine":87,"endColumn":29},{"ruleId":"266","severity":1,"message":"293","line":87,"column":30,"nodeType":"268","messageId":"269","endLine":87,"endColumn":42},{"ruleId":"266","severity":1,"message":"294","line":91,"column":12,"nodeType":"268","messageId":"269","endLine":91,"endColumn":20},{"ruleId":"279","severity":1,"message":"295","line":141,"column":7,"nodeType":"281","endLine":141,"endColumn":24,"suggestions":"296"},{"ruleId":"279","severity":1,"message":"297","line":179,"column":7,"nodeType":"281","endLine":179,"endColumn":78,"suggestions":"298"},{"ruleId":"266","severity":1,"message":"299","line":334,"column":13,"nodeType":"268","messageId":"269","endLine":334,"endColumn":16},{"ruleId":"266","severity":1,"message":"300","line":14,"column":30,"nodeType":"268","messageId":"269","endLine":14,"endColumn":47},{"ruleId":"279","severity":1,"message":"301","line":98,"column":7,"nodeType":"281","endLine":98,"endColumn":22,"suggestions":"302"},{"ruleId":"279","severity":1,"message":"303","line":159,"column":7,"nodeType":"281","endLine":159,"endColumn":37,"suggestions":"304"},{"ruleId":"266","severity":1,"message":"305","line":1,"column":15,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"266","severity":1,"message":"283","line":1,"column":45,"nodeType":"268","messageId":"269","endLine":1,"endColumn":58},{"ruleId":"266","severity":1,"message":"274","line":1,"column":60,"nodeType":"268","messageId":"269","endLine":1,"endColumn":75},{"ruleId":"266","severity":1,"message":"306","line":4,"column":26,"nodeType":"268","messageId":"269","endLine":4,"endColumn":32},{"ruleId":"266","severity":1,"message":"307","line":4,"column":33,"nodeType":"268","messageId":"269","endLine":4,"endColumn":39},{"ruleId":"266","severity":1,"message":"308","line":4,"column":40,"nodeType":"268","messageId":"269","endLine":4,"endColumn":45},{"ruleId":"266","severity":1,"message":"270","line":4,"column":52,"nodeType":"268","messageId":"269","endLine":4,"endColumn":60},{"ruleId":"266","severity":1,"message":"271","line":4,"column":61,"nodeType":"268","messageId":"269","endLine":4,"endColumn":74},{"ruleId":"266","severity":1,"message":"309","line":4,"column":76,"nodeType":"268","messageId":"269","endLine":4,"endColumn":86},{"ruleId":"266","severity":1,"message":"310","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":13},{"ruleId":"279","severity":1,"message":"311","line":37,"column":3,"nodeType":"268","endLine":37,"endColumn":12,"suggestions":"312"},{"ruleId":"266","severity":1,"message":"288","line":47,"column":12,"nodeType":"268","messageId":"269","endLine":47,"endColumn":19},{"ruleId":"266","severity":1,"message":"293","line":47,"column":32,"nodeType":"268","messageId":"269","endLine":47,"endColumn":44},{"ruleId":"266","severity":1,"message":"313","line":63,"column":16,"nodeType":"268","messageId":"269","endLine":63,"endColumn":18},{"ruleId":"266","severity":1,"message":"314","line":71,"column":16,"nodeType":"268","messageId":"269","endLine":71,"endColumn":24},{"ruleId":"266","severity":1,"message":"315","line":123,"column":11,"nodeType":"268","messageId":"269","endLine":123,"endColumn":19},{"ruleId":"266","severity":1,"message":"272","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":13},{"ruleId":"266","severity":1,"message":"272","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":13},{"ruleId":"266","severity":1,"message":"272","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":13},{"ruleId":"266","severity":1,"message":"316","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":16},{"ruleId":"266","severity":1,"message":"317","line":2,"column":20,"nodeType":"268","messageId":"269","endLine":2,"endColumn":25},{"ruleId":"266","severity":1,"message":"318","line":26,"column":11,"nodeType":"268","messageId":"269","endLine":26,"endColumn":23},{"ruleId":"279","severity":1,"message":"319","line":51,"column":7,"nodeType":"281","endLine":51,"endColumn":22,"suggestions":"320"},{"ruleId":"266","severity":1,"message":"321","line":5,"column":10,"nodeType":"268","messageId":"269","endLine":5,"endColumn":17},{"ruleId":"266","severity":1,"message":"272","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":13},{"ruleId":"266","severity":1,"message":"322","line":5,"column":10,"nodeType":"268","messageId":"269","endLine":5,"endColumn":21},{"ruleId":"266","severity":1,"message":"323","line":5,"column":23,"nodeType":"268","messageId":"269","endLine":5,"endColumn":30},{"ruleId":"279","severity":1,"message":"324","line":80,"column":7,"nodeType":"281","endLine":80,"endColumn":15,"suggestions":"325"},{"ruleId":"266","severity":1,"message":"272","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":13},{"ruleId":"279","severity":1,"message":"326","line":20,"column":8,"nodeType":"281","endLine":20,"endColumn":10,"suggestions":"327"},{"ruleId":"279","severity":1,"message":"328","line":24,"column":8,"nodeType":"281","endLine":24,"endColumn":10,"suggestions":"329"},"no-native-reassign",["330"],"no-negated-in-lhs",["331"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useRouteMatch' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'useLayoutEffect' is defined but never used.","'QHD' is defined but never used.","'FHD' is defined but never used.","'HD' is defined but never used.","'LangCode' is defined but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useLayoutEffect call and refer to those specific props inside useLayoutEffect.","ArrayExpression",["332"],"'createContext' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'Themes' is defined but never used.","'fetch' is defined but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'location' is assigned a value but never used.",["333"],"'BlueLoader' is defined but never used.","'removeCookie' is assigned a value but never used.","'didMount' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'cookies.token', 'filterReq', 'history', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useLayoutEffect call and refer to those specific props inside useLayoutEffect.",["334"],"React Hook useEffect has missing dependencies: 'basalDiseaseValue', 'filterValue', 'programValue', and 'props.waitingData'. Either include them or remove the dependency array. You can also do a functional update 'setBasalDiseaseValue(b => ...)' if you only need 'basalDiseaseValue' in the 'setBasalDiseaseValue' call.",["335"],"'url' is assigned a value but never used.","'CustomInputSlider' is defined but never used.","React Hook useLayoutEffect has missing dependencies: 'cookies.token.access_token', 'errorStatus', 'props', and 'queryObj'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useLayoutEffect call and refer to those specific props inside useLayoutEffect.",["336"],"React Hook useEffect has missing dependencies: 'errorStatus', 'props.interpretationData', and 'status'. Either include them or remove the dependency array. If 'setInitData' needs the current value of 'props.interpretationData', you can also switch to useReducer instead of useState and read 'props.interpretationData' in the reducer.",["337"],"'useContext' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect contains a call to 'setInitTabLang'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [updateTabLang, props.headerColorData] as a second argument to the useEffect Hook.",["338"],"'id' is assigned a value but never used.","'password' is assigned a value but never used.","'vaildate' is assigned a value but never used.","'CheckBox' is defined but never used.","'Range' is defined but never used.","'isFromFilter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'pagers.endPage', and 'pagers.startPage'. Either include them or remove the dependency array.",["339"],"'connect' is defined but never used.","'withCookies' is defined but never used.","'Cookies' is defined but never used.","React Hook useEffect has missing dependencies: 'didMount' and 'img'. Either include them or remove the dependency array.",["340"],"React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.",["341"],"React Hook useLayoutEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.",["342"],"no-global-assign","no-unsafe-negation",{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"361","fix":"363"},"Update the dependencies array to be: [props]",{"range":"364","text":"365"},"Update the dependencies array to be: [props, props.isDataLoading]",{"range":"366","text":"367"},"Update the dependencies array to be: [cookies.token, filterReq, history, location.search, props]",{"range":"368","text":"369"},"Update the dependencies array to be: [updateFilterLang, updateFilterValueLang, filterReq, props.isDataLoading, props.waitingData, basalDiseaseValue, programValue, filterValue]",{"range":"370","text":"371"},"Update the dependencies array to be: [cookies.token.access_token, errorStatus, props, queryObj, userId.userId]",{"range":"372","text":"373"},"Update the dependencies array to be: [errorStatus, props.interpretationData, props.interpretationData._id, status]",{"range":"374","text":"375"},"Add dependencies array: [updateTabLang, props.headerColorData]",{"range":"376","text":"377"},"Update the dependencies array to be: [currentPage, pagers.endPage, pagers.startPage, updateButtons]",{"range":"378","text":"379"},"Update the dependencies array to be: [didMount, id, img, src]",{"range":"380","text":"381"},"Update the dependencies array to be: [handleResize]",{"range":"382","text":"383"},{"range":"384","text":"383"},[931,933],"[props]",[3754,3775],"[props, props.isDataLoading]",[5074,5091],"[cookies.token, filterReq, history, location.search, props]",[6501,6572],"[updateFilterLang, updateFilterValueLang, filterReq, props.isDataLoading, props.waitingData, basalDiseaseValue, programValue, filterValue]",[3986,4001],"[cookies.token.access_token, errorStatus, props, queryObj, userId.userId]",[6493,6523],"[errorStatus, props.interpretationData, props.interpretationData._id, status]",[1592,1592],", [updateTabLang, props.headerColorData]",[1643,1658],"[currentPage, pagers.endPage, pagers.startPage, updateButtons]",[2300,2308],"[didMount, id, img, src]",[621,623],"[handleResize]",[686,688]]